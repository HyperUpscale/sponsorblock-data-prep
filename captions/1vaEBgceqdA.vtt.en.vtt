WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:01.350 align:start position:0%
 
whether<00:00:00.320><c> we're</c><00:00:00.480><c> talking</c><00:00:00.800><c> dollars</c><00:00:01.199><c> in</c><00:00:01.280><c> your</c>

00:00:01.350 --> 00:00:01.360 align:start position:0%
whether we're talking dollars in your
 

00:00:01.360 --> 00:00:03.350 align:start position:0%
whether we're talking dollars in your
bank<00:00:01.600><c> account</c><00:00:02.000><c> items</c><00:00:02.320><c> on</c><00:00:02.399><c> a</c><00:00:02.560><c> seafood</c><00:00:02.879><c> buffet</c>

00:00:03.350 --> 00:00:03.360 align:start position:0%
bank account items on a seafood buffet
 

00:00:03.360 --> 00:00:05.670 align:start position:0%
bank account items on a seafood buffet
or<00:00:03.679><c> dates</c><00:00:04.000><c> you've</c><00:00:04.080><c> got</c><00:00:04.319><c> lined</c><00:00:04.560><c> up</c><00:00:04.720><c> on</c><00:00:04.880><c> tinder</c>

00:00:05.670 --> 00:00:05.680 align:start position:0%
or dates you've got lined up on tinder
 

00:00:05.680 --> 00:00:08.230 align:start position:0%
or dates you've got lined up on tinder
more<00:00:06.160><c> is</c><00:00:06.400><c> generally</c><00:00:06.879><c> considered</c><00:00:07.279><c> to</c><00:00:07.440><c> be</c>

00:00:08.230 --> 00:00:08.240 align:start position:0%
more is generally considered to be
 

00:00:08.240 --> 00:00:10.470 align:start position:0%
more is generally considered to be
better<00:00:08.800><c> a</c><00:00:08.960><c> sentiment</c><00:00:09.360><c> that</c><00:00:09.679><c> also</c><00:00:10.080><c> seems</c><00:00:10.320><c> to</c>

00:00:10.470 --> 00:00:10.480 align:start position:0%
better a sentiment that also seems to
 

00:00:10.480 --> 00:00:12.390 align:start position:0%
better a sentiment that also seems to
hold<00:00:10.719><c> true</c><00:00:10.960><c> with</c><00:00:11.120><c> the</c><00:00:11.200><c> number</c><00:00:11.519><c> of</c><00:00:11.840><c> cores</c><00:00:12.320><c> in</c>

00:00:12.390 --> 00:00:12.400 align:start position:0%
hold true with the number of cores in
 

00:00:12.400 --> 00:00:14.870 align:start position:0%
hold true with the number of cores in
your<00:00:12.559><c> computer</c><00:00:13.040><c> cpu</c><00:00:14.080><c> at</c><00:00:14.160><c> least</c><00:00:14.400><c> if</c><00:00:14.559><c> you</c><00:00:14.639><c> buy</c>

00:00:14.870 --> 00:00:14.880 align:start position:0%
your computer cpu at least if you buy
 

00:00:14.880 --> 00:00:17.029 align:start position:0%
your computer cpu at least if you buy
into<00:00:15.120><c> the</c><00:00:15.200><c> marketing</c><00:00:15.839><c> hold</c><00:00:16.160><c> on</c><00:00:16.560><c> even</c><00:00:16.800><c> though</c>

00:00:17.029 --> 00:00:17.039 align:start position:0%
into the marketing hold on even though
 

00:00:17.039 --> 00:00:19.189 align:start position:0%
into the marketing hold on even though
having<00:00:17.359><c> many</c><00:00:17.680><c> cores</c><00:00:18.160><c> definitely</c><00:00:18.720><c> gives</c><00:00:18.960><c> you</c><00:00:19.119><c> a</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
having many cores definitely gives you a
 

00:00:19.199 --> 00:00:21.269 align:start position:0%
having many cores definitely gives you a
boost<00:00:19.520><c> in</c><00:00:19.760><c> multi-threaded</c><00:00:20.560><c> applications</c>

00:00:21.269 --> 00:00:21.279 align:start position:0%
boost in multi-threaded applications
 

00:00:21.279 --> 00:00:24.470 align:start position:0%
boost in multi-threaded applications
like<00:00:21.840><c> rendering</c><00:00:22.320><c> 3d</c><00:00:22.720><c> animations</c><00:00:23.680><c> there</c><00:00:24.080><c> are</c>

00:00:24.470 --> 00:00:24.480 align:start position:0%
like rendering 3d animations there are
 

00:00:24.480 --> 00:00:26.790 align:start position:0%
like rendering 3d animations there are
actually<00:00:24.880><c> situations</c><00:00:25.680><c> where</c><00:00:25.920><c> more</c><00:00:26.240><c> cores</c>

00:00:26.790 --> 00:00:26.800 align:start position:0%
actually situations where more cores
 

00:00:26.800 --> 00:00:29.349 align:start position:0%
actually situations where more cores
gives<00:00:27.119><c> no</c><00:00:27.279><c> benefit</c><00:00:27.680><c> whatsoever</c><00:00:28.400><c> or</c><00:00:28.640><c> can</c><00:00:28.960><c> even</c>

00:00:29.349 --> 00:00:29.359 align:start position:0%
gives no benefit whatsoever or can even
 

00:00:29.359 --> 00:00:32.470 align:start position:0%
gives no benefit whatsoever or can even
actually<00:00:30.000><c> hurt</c><00:00:30.560><c> your</c><00:00:30.720><c> system's</c><00:00:31.199><c> performance</c>

00:00:32.470 --> 00:00:32.480 align:start position:0%
actually hurt your system's performance
 

00:00:32.480 --> 00:00:34.549 align:start position:0%
actually hurt your system's performance
but<00:00:32.719><c> how</c><00:00:32.880><c> could</c><00:00:33.040><c> this</c><00:00:33.360><c> be</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
but how could this be
 

00:00:34.559 --> 00:00:36.549 align:start position:0%
but how could this be
well<00:00:34.719><c> to</c><00:00:34.960><c> start</c><00:00:35.200><c> off</c><00:00:35.360><c> with</c><00:00:35.760><c> the</c><00:00:35.920><c> more</c><00:00:36.239><c> cores</c>

00:00:36.549 --> 00:00:36.559 align:start position:0%
well to start off with the more cores
 

00:00:36.559 --> 00:00:39.110 align:start position:0%
well to start off with the more cores
you<00:00:36.719><c> pack</c><00:00:36.960><c> onto</c><00:00:37.200><c> a</c><00:00:37.280><c> cpu</c><00:00:38.079><c> the</c><00:00:38.239><c> more</c><00:00:38.559><c> power</c><00:00:38.960><c> they</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
you pack onto a cpu the more power they
 

00:00:39.120 --> 00:00:41.430 align:start position:0%
you pack onto a cpu the more power they
need<00:00:39.520><c> and</c><00:00:39.600><c> the</c><00:00:39.760><c> more</c><00:00:40.079><c> heat</c><00:00:40.320><c> they</c><00:00:40.559><c> generate</c><00:00:41.280><c> and</c>

00:00:41.430 --> 00:00:41.440 align:start position:0%
need and the more heat they generate and
 

00:00:41.440 --> 00:00:43.430 align:start position:0%
need and the more heat they generate and
remember<00:00:41.760><c> that</c><00:00:42.000><c> because</c><00:00:42.399><c> cpu</c><00:00:42.879><c> cores</c><00:00:43.280><c> are</c>

00:00:43.430 --> 00:00:43.440 align:start position:0%
remember that because cpu cores are
 

00:00:43.440 --> 00:00:46.310 align:start position:0%
remember that because cpu cores are
crammed<00:00:43.920><c> into</c><00:00:44.160><c> a</c><00:00:44.399><c> relatively</c><00:00:45.120><c> small</c><00:00:45.520><c> space</c>

00:00:46.310 --> 00:00:46.320 align:start position:0%
crammed into a relatively small space
 

00:00:46.320 --> 00:00:48.470 align:start position:0%
crammed into a relatively small space
manufacturers<00:00:47.360><c> end</c><00:00:47.600><c> up</c><00:00:47.760><c> working</c><00:00:48.079><c> against</c>

00:00:48.470 --> 00:00:48.480 align:start position:0%
manufacturers end up working against
 

00:00:48.480 --> 00:00:50.389 align:start position:0%
manufacturers end up working against
some<00:00:48.879><c> serious</c><00:00:49.360><c> limits</c><00:00:49.760><c> when</c><00:00:49.920><c> it</c><00:00:50.000><c> comes</c><00:00:50.239><c> to</c>

00:00:50.389 --> 00:00:50.399 align:start position:0%
some serious limits when it comes to
 

00:00:50.399 --> 00:00:53.029 align:start position:0%
some serious limits when it comes to
thermal<00:00:50.719><c> design</c><00:00:51.039><c> power</c><00:00:51.440><c> or</c><00:00:51.680><c> tdp</c>

00:00:53.029 --> 00:00:53.039 align:start position:0%
thermal design power or tdp
 

00:00:53.039 --> 00:00:55.430 align:start position:0%
thermal design power or tdp
this<00:00:53.280><c> means</c><00:00:53.680><c> that</c><00:00:53.920><c> to</c><00:00:54.079><c> prevent</c><00:00:54.480><c> the</c><00:00:54.559><c> cpu</c><00:00:55.120><c> from</c>

00:00:55.430 --> 00:00:55.440 align:start position:0%
this means that to prevent the cpu from
 

00:00:55.440 --> 00:00:57.430 align:start position:0%
this means that to prevent the cpu from
drawing<00:00:55.840><c> too</c><00:00:56.000><c> much</c><00:00:56.239><c> power</c><00:00:56.719><c> and</c><00:00:56.879><c> producing</c><00:00:57.280><c> too</c>

00:00:57.430 --> 00:00:57.440 align:start position:0%
drawing too much power and producing too
 

00:00:57.440 --> 00:01:00.389 align:start position:0%
drawing too much power and producing too
much<00:00:57.680><c> heat</c><00:00:58.320><c> the</c><00:00:58.640><c> individual</c><00:00:59.440><c> cores</c><00:01:00.160><c> have</c>

00:01:00.389 --> 00:01:00.399 align:start position:0%
much heat the individual cores have
 

00:01:00.399 --> 00:01:01.910 align:start position:0%
much heat the individual cores have
traditionally<00:01:01.199><c> run</c><00:01:01.359><c> their</c><00:01:01.600><c> clock</c>

00:01:01.910 --> 00:01:01.920 align:start position:0%
traditionally run their clock
 

00:01:01.920 --> 00:01:05.429 align:start position:0%
traditionally run their clock
frequencies<00:01:02.960><c> lower</c><00:01:03.680><c> to</c><00:01:03.920><c> improve</c><00:01:04.320><c> efficiency</c>

00:01:05.429 --> 00:01:05.439 align:start position:0%
frequencies lower to improve efficiency
 

00:01:05.439 --> 00:01:07.990 align:start position:0%
frequencies lower to improve efficiency
and<00:01:05.680><c> even</c><00:01:06.080><c> if</c><00:01:06.400><c> the</c><00:01:06.640><c> advertised</c><00:01:07.280><c> boost</c><00:01:07.600><c> clock</c>

00:01:07.990 --> 00:01:08.000 align:start position:0%
and even if the advertised boost clock
 

00:01:08.000 --> 00:01:10.550 align:start position:0%
and even if the advertised boost clock
for<00:01:08.240><c> a</c><00:01:08.320><c> cpu</c><00:01:08.799><c> with</c><00:01:09.040><c> lots</c><00:01:09.360><c> and</c><00:01:09.439><c> lots</c><00:01:09.680><c> of</c><00:01:09.840><c> course</c>

00:01:10.550 --> 00:01:10.560 align:start position:0%
for a cpu with lots and lots of course
 

00:01:10.560 --> 00:01:12.390 align:start position:0%
for a cpu with lots and lots of course
can<00:01:10.960><c> appear</c><00:01:11.360><c> to</c><00:01:11.439><c> be</c><00:01:11.680><c> high</c>

00:01:12.390 --> 00:01:12.400 align:start position:0%
can appear to be high
 

00:01:12.400 --> 00:01:14.230 align:start position:0%
can appear to be high
it's<00:01:12.720><c> often</c><00:01:12.960><c> the</c><00:01:13.119><c> case</c><00:01:13.439><c> that</c><00:01:13.520><c> they</c><00:01:13.760><c> cannot</c>

00:01:14.230 --> 00:01:14.240 align:start position:0%
it's often the case that they cannot
 

00:01:14.240 --> 00:01:16.469 align:start position:0%
it's often the case that they cannot
maintain<00:01:14.799><c> these</c><00:01:14.960><c> clocks</c><00:01:15.520><c> for</c><00:01:15.760><c> long</c><00:01:16.080><c> periods</c>

00:01:16.469 --> 00:01:16.479 align:start position:0%
maintain these clocks for long periods
 

00:01:16.479 --> 00:01:18.870 align:start position:0%
maintain these clocks for long periods
of<00:01:16.640><c> time</c><00:01:17.360><c> or</c><00:01:17.759><c> that</c><00:01:17.920><c> they</c><00:01:18.159><c> only</c><00:01:18.400><c> do</c><00:01:18.560><c> it</c><00:01:18.720><c> when</c>

00:01:18.870 --> 00:01:18.880 align:start position:0%
of time or that they only do it when
 

00:01:18.880 --> 00:01:21.109 align:start position:0%
of time or that they only do it when
you're<00:01:18.960><c> running</c><00:01:19.280><c> very</c><00:01:19.600><c> light</c><00:01:19.840><c> applications</c>

00:01:21.109 --> 00:01:21.119 align:start position:0%
you're running very light applications
 

00:01:21.119 --> 00:01:23.590 align:start position:0%
you're running very light applications
so<00:01:21.600><c> if</c><00:01:21.759><c> you're</c><00:01:21.920><c> using</c><00:01:22.240><c> your</c><00:01:22.400><c> computer</c><00:01:23.119><c> mostly</c>

00:01:23.590 --> 00:01:23.600 align:start position:0%
so if you're using your computer mostly
 

00:01:23.600 --> 00:01:25.510 align:start position:0%
so if you're using your computer mostly
for<00:01:23.840><c> applications</c><00:01:24.479><c> where</c><00:01:24.799><c> single</c><00:01:25.119><c> threaded</c>

00:01:25.510 --> 00:01:25.520 align:start position:0%
for applications where single threaded
 

00:01:25.520 --> 00:01:28.390 align:start position:0%
for applications where single threaded
performance<00:01:26.080><c> matters</c><00:01:26.479><c> more</c><00:01:27.119><c> such</c><00:01:27.439><c> as</c><00:01:27.600><c> games</c>

00:01:28.390 --> 00:01:28.400 align:start position:0%
performance matters more such as games
 

00:01:28.400 --> 00:01:32.870 align:start position:0%
performance matters more such as games
that<00:01:29.040><c> super</c><00:01:29.520><c> expensive</c><00:01:30.240><c> 18</c><00:01:30.960><c> core</c><00:01:31.439><c> cpu</c><00:01:32.479><c> might</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
that super expensive 18 core cpu might
 

00:01:32.880 --> 00:01:35.429 align:start position:0%
that super expensive 18 core cpu might
actually<00:01:33.439><c> yield</c><00:01:33.759><c> you</c><00:01:34.079><c> a</c><00:01:34.320><c> worse</c><00:01:34.799><c> experience</c>

00:01:35.429 --> 00:01:35.439 align:start position:0%
actually yield you a worse experience
 

00:01:35.439 --> 00:01:37.190 align:start position:0%
actually yield you a worse experience
than<00:01:35.759><c> something</c><00:01:36.159><c> cheaper</c>

00:01:37.190 --> 00:01:37.200 align:start position:0%
than something cheaper
 

00:01:37.200 --> 00:01:39.830 align:start position:0%
than something cheaper
and<00:01:37.920><c> if</c><00:01:38.159><c> you</c><00:01:38.320><c> go</c><00:01:38.479><c> with</c><00:01:38.720><c> a</c><00:01:39.040><c> really</c><00:01:39.360><c> high</c><00:01:39.600><c> core</c>

00:01:39.830 --> 00:01:39.840 align:start position:0%
and if you go with a really high core
 

00:01:39.840 --> 00:01:42.390 align:start position:0%
and if you go with a really high core
count<00:01:40.079><c> cpu</c><00:01:40.880><c> there's</c><00:01:41.200><c> another</c><00:01:41.600><c> wrinkle</c><00:01:42.159><c> with</c>

00:01:42.390 --> 00:01:42.400 align:start position:0%
count cpu there's another wrinkle with
 

00:01:42.400 --> 00:01:44.950 align:start position:0%
count cpu there's another wrinkle with
how<00:01:42.720><c> processors</c><00:01:43.360><c> with</c><00:01:43.680><c> that</c><00:01:43.920><c> many</c><00:01:44.240><c> cores</c>

00:01:44.950 --> 00:01:44.960 align:start position:0%
how processors with that many cores
 

00:01:44.960 --> 00:01:47.590 align:start position:0%
how processors with that many cores
access<00:01:45.439><c> the</c><00:01:45.600><c> system</c><00:01:46.000><c> memory</c><00:01:46.880><c> you</c><00:01:47.040><c> see</c><00:01:47.200><c> in</c><00:01:47.360><c> some</c>

00:01:47.590 --> 00:01:47.600 align:start position:0%
access the system memory you see in some
 

00:01:47.600 --> 00:01:50.310 align:start position:0%
access the system memory you see in some
cases<00:01:48.320><c> these</c><00:01:48.640><c> larger</c><00:01:49.040><c> cpus</c><00:01:49.840><c> need</c><00:01:50.000><c> to</c><00:01:50.079><c> have</c>

00:01:50.310 --> 00:01:50.320 align:start position:0%
cases these larger cpus need to have
 

00:01:50.320 --> 00:01:53.510 align:start position:0%
cases these larger cpus need to have
their<00:01:50.479><c> core</c><00:01:50.960><c> split</c><00:01:51.840><c> into</c><00:01:52.240><c> two</c><00:01:52.640><c> groups</c><00:01:53.040><c> or</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
their core split into two groups or
 

00:01:53.520 --> 00:01:56.149 align:start position:0%
their core split into two groups or
nodes<00:01:54.159><c> of</c><00:01:54.399><c> course</c><00:01:55.119><c> with</c><00:01:55.360><c> each</c><00:01:55.600><c> group</c><00:01:55.840><c> getting</c>

00:01:56.149 --> 00:01:56.159 align:start position:0%
nodes of course with each group getting
 

00:01:56.159 --> 00:01:58.709 align:start position:0%
nodes of course with each group getting
its<00:01:56.479><c> own</c><00:01:56.720><c> memory</c><00:01:57.040><c> controller</c><00:01:57.680><c> and</c><00:01:58.159><c> segment</c><00:01:58.640><c> of</c>

00:01:58.709 --> 00:01:58.719 align:start position:0%
its own memory controller and segment of
 

00:01:58.719 --> 00:02:00.950 align:start position:0%
its own memory controller and segment of
the<00:01:58.880><c> physical</c><00:01:59.280><c> memory</c><00:01:59.840><c> in</c><00:02:00.000><c> a</c><00:02:00.079><c> scheme</c><00:02:00.479><c> called</c>

00:02:00.950 --> 00:02:00.960 align:start position:0%
the physical memory in a scheme called
 

00:02:00.960 --> 00:02:03.910 align:start position:0%
the physical memory in a scheme called
non-uniform<00:02:01.840><c> memory</c><00:02:02.240><c> access</c><00:02:02.799><c> or</c><00:02:03.360><c> pneuma</c>

00:02:03.910 --> 00:02:03.920 align:start position:0%
non-uniform memory access or pneuma
 

00:02:03.920 --> 00:02:05.190 align:start position:0%
non-uniform memory access or pneuma
[Music]

00:02:05.190 --> 00:02:05.200 align:start position:0%
[Music]
 

00:02:05.200 --> 00:02:06.870 align:start position:0%
[Music]
this<00:02:05.439><c> is</c><00:02:05.600><c> generally</c><00:02:06.159><c> quicker</c><00:02:06.560><c> than</c><00:02:06.719><c> the</c>

00:02:06.870 --> 00:02:06.880 align:start position:0%
this is generally quicker than the
 

00:02:06.880 --> 00:02:09.270 align:start position:0%
this is generally quicker than the
opposite<00:02:07.360><c> solution</c><00:02:07.920><c> called</c><00:02:08.399><c> uniform</c><00:02:08.879><c> memory</c>

00:02:09.270 --> 00:02:09.280 align:start position:0%
opposite solution called uniform memory
 

00:02:09.280 --> 00:02:12.309 align:start position:0%
opposite solution called uniform memory
access<00:02:09.840><c> or</c><00:02:10.319><c> yuma</c><00:02:10.959><c> where</c><00:02:11.280><c> all</c><00:02:11.440><c> the</c><00:02:11.599><c> cores</c><00:02:11.920><c> share</c>

00:02:12.309 --> 00:02:12.319 align:start position:0%
access or yuma where all the cores share
 

00:02:12.319 --> 00:02:15.030 align:start position:0%
access or yuma where all the cores share
one<00:02:12.879><c> big</c><00:02:13.280><c> pool</c><00:02:13.520><c> of</c><00:02:13.680><c> memory</c><00:02:14.400><c> but</c><00:02:14.560><c> here's</c><00:02:14.879><c> the</c>

00:02:15.030 --> 00:02:15.040 align:start position:0%
one big pool of memory but here's the
 

00:02:15.040 --> 00:02:17.910 align:start position:0%
one big pool of memory but here's the
thing<00:02:15.680><c> a</c><00:02:15.840><c> cpu</c><00:02:16.239><c> that</c><00:02:16.400><c> uses</c><00:02:16.800><c> pneuma</c><00:02:17.360><c> which</c><00:02:17.599><c> is</c>

00:02:17.910 --> 00:02:17.920 align:start position:0%
thing a cpu that uses pneuma which is
 

00:02:17.920 --> 00:02:19.510 align:start position:0%
thing a cpu that uses pneuma which is
better<00:02:18.239><c> for</c><00:02:18.560><c> latency</c><00:02:19.040><c> sensitive</c>

00:02:19.510 --> 00:02:19.520 align:start position:0%
better for latency sensitive
 

00:02:19.520 --> 00:02:22.150 align:start position:0%
better for latency sensitive
applications<00:02:20.560><c> can</c><00:02:20.800><c> often</c><00:02:21.280><c> struggle</c><00:02:21.920><c> when</c>

00:02:22.150 --> 00:02:22.160 align:start position:0%
applications can often struggle when
 

00:02:22.160 --> 00:02:24.470 align:start position:0%
applications can often struggle when
running<00:02:22.480><c> a</c><00:02:22.720><c> single</c><00:02:23.120><c> program</c><00:02:23.599><c> that</c><00:02:23.840><c> uses</c><00:02:24.239><c> tons</c>

00:02:24.470 --> 00:02:24.480 align:start position:0%
running a single program that uses tons
 

00:02:24.480 --> 00:02:26.309 align:start position:0%
running a single program that uses tons
of<00:02:24.640><c> threads</c>

00:02:26.309 --> 00:02:26.319 align:start position:0%
of threads
 

00:02:26.319 --> 00:02:28.070 align:start position:0%
of threads
because<00:02:26.720><c> of</c><00:02:26.879><c> the</c><00:02:26.959><c> different</c><00:02:27.280><c> memory</c><00:02:27.680><c> access</c>

00:02:28.070 --> 00:02:28.080 align:start position:0%
because of the different memory access
 

00:02:28.080 --> 00:02:30.150 align:start position:0%
because of the different memory access
times<00:02:28.480><c> between</c><00:02:28.800><c> the</c><00:02:28.959><c> nodes</c><00:02:29.599><c> and</c><00:02:29.840><c> the</c><00:02:29.920><c> fact</c>

00:02:30.150 --> 00:02:30.160 align:start position:0%
times between the nodes and the fact
 

00:02:30.160 --> 00:02:31.750 align:start position:0%
times between the nodes and the fact
that<00:02:30.319><c> each</c><00:02:30.480><c> node</c><00:02:30.720><c> would</c><00:02:30.879><c> have</c><00:02:31.040><c> to</c><00:02:31.200><c> wait</c><00:02:31.520><c> on</c><00:02:31.599><c> the</c>

00:02:31.750 --> 00:02:31.760 align:start position:0%
that each node would have to wait on the
 

00:02:31.760 --> 00:02:33.350 align:start position:0%
that each node would have to wait on the
other<00:02:31.920><c> one</c><00:02:32.160><c> to</c><00:02:32.239><c> finish</c><00:02:32.640><c> working</c><00:02:32.959><c> on</c><00:02:33.040><c> the</c><00:02:33.120><c> same</c>

00:02:33.350 --> 00:02:33.360 align:start position:0%
other one to finish working on the same
 

00:02:33.360 --> 00:02:35.830 align:start position:0%
other one to finish working on the same
data<00:02:34.080><c> highly</c><00:02:34.480><c> multi-threaded</c><00:02:35.120><c> programs</c><00:02:35.599><c> like</c>

00:02:35.830 --> 00:02:35.840 align:start position:0%
data highly multi-threaded programs like
 

00:02:35.840 --> 00:02:38.710 align:start position:0%
data highly multi-threaded programs like
these<00:02:36.160><c> often</c><00:02:36.560><c> don't</c><00:02:36.879><c> want</c><00:02:37.120><c> to</c><00:02:37.440><c> cross</c><00:02:37.920><c> nodes</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
these often don't want to cross nodes
 

00:02:38.720 --> 00:02:40.470 align:start position:0%
these often don't want to cross nodes
even<00:02:38.959><c> if</c><00:02:39.120><c> it</c><00:02:39.200><c> would</c><00:02:39.440><c> mean</c><00:02:39.680><c> being</c><00:02:39.920><c> able</c><00:02:40.080><c> to</c><00:02:40.239><c> take</c>

00:02:40.470 --> 00:02:40.480 align:start position:0%
even if it would mean being able to take
 

00:02:40.480 --> 00:02:42.790 align:start position:0%
even if it would mean being able to take
advantage<00:02:40.959><c> of</c><00:02:41.040><c> the</c><00:02:41.280><c> entire</c><00:02:41.680><c> cpu</c>

00:02:42.790 --> 00:02:42.800 align:start position:0%
advantage of the entire cpu
 

00:02:42.800 --> 00:02:45.270 align:start position:0%
advantage of the entire cpu
so<00:02:43.440><c> back</c><00:02:43.680><c> to</c><00:02:43.760><c> yuma</c><00:02:44.160><c> then</c><00:02:44.480><c> right</c>

00:02:45.270 --> 00:02:45.280 align:start position:0%
so back to yuma then right
 

00:02:45.280 --> 00:02:46.390 align:start position:0%
so back to yuma then right
no

00:02:46.390 --> 00:02:46.400 align:start position:0%
no
 

00:02:46.400 --> 00:02:48.630 align:start position:0%
no
because<00:02:46.879><c> one</c><00:02:47.120><c> controller</c><00:02:47.599><c> manages</c><00:02:48.319><c> all</c><00:02:48.480><c> the</c>

00:02:48.630 --> 00:02:48.640 align:start position:0%
because one controller manages all the
 

00:02:48.640 --> 00:02:51.190 align:start position:0%
because one controller manages all the
memory<00:02:49.040><c> accesses</c><00:02:49.599><c> to</c><00:02:49.680><c> give</c><00:02:50.080><c> every</c><00:02:50.400><c> program</c>

00:02:51.190 --> 00:02:51.200 align:start position:0%
memory accesses to give every program
 

00:02:51.200 --> 00:02:53.830 align:start position:0%
memory accesses to give every program
equal<00:02:51.599><c> time</c><00:02:52.400><c> rather</c><00:02:52.720><c> than</c><00:02:52.879><c> allowing</c><00:02:53.440><c> access</c>

00:02:53.830 --> 00:02:53.840 align:start position:0%
equal time rather than allowing access
 

00:02:53.840 --> 00:02:57.110 align:start position:0%
equal time rather than allowing access
to<00:02:53.920><c> the</c><00:02:54.000><c> memory</c><00:02:54.319><c> more</c><00:02:54.640><c> directly</c><00:02:55.599><c> as</c><00:02:55.840><c> in</c><00:02:56.080><c> numa</c>

00:02:57.110 --> 00:02:57.120 align:start position:0%
to the memory more directly as in numa
 

00:02:57.120 --> 00:03:00.229 align:start position:0%
to the memory more directly as in numa
yuma<00:02:57.840><c> has</c><00:02:58.080><c> a</c><00:02:58.319><c> built-in</c><00:02:58.879><c> performance</c><00:02:59.519><c> penalty</c>

00:03:00.229 --> 00:03:00.239 align:start position:0%
yuma has a built-in performance penalty
 

00:03:00.239 --> 00:03:02.869 align:start position:0%
yuma has a built-in performance penalty
that<00:03:00.560><c> increases</c><00:03:01.680><c> the</c><00:03:01.920><c> more</c><00:03:02.239><c> nodes</c><00:03:02.720><c> your</c>

00:03:02.869 --> 00:03:02.879 align:start position:0%
that increases the more nodes your
 

00:03:02.879 --> 00:03:04.470 align:start position:0%
that increases the more nodes your
system<00:03:03.280><c> has</c><00:03:03.440><c> to</c><00:03:03.599><c> manage</c>

00:03:04.470 --> 00:03:04.480 align:start position:0%
system has to manage
 

00:03:04.480 --> 00:03:06.949 align:start position:0%
system has to manage
so<00:03:04.720><c> using</c><00:03:05.040><c> a</c><00:03:05.120><c> cpu</c><00:03:05.760><c> with</c><00:03:06.000><c> separate</c><00:03:06.480><c> groups</c><00:03:06.800><c> of</c>

00:03:06.949 --> 00:03:06.959 align:start position:0%
so using a cpu with separate groups of
 

00:03:06.959 --> 00:03:09.030 align:start position:0%
so using a cpu with separate groups of
cores<00:03:07.599><c> means</c><00:03:07.840><c> you're</c><00:03:08.080><c> going</c><00:03:08.159><c> to</c><00:03:08.239><c> be</c><00:03:08.400><c> subjected</c>

00:03:09.030 --> 00:03:09.040 align:start position:0%
cores means you're going to be subjected
 

00:03:09.040 --> 00:03:11.350 align:start position:0%
cores means you're going to be subjected
to<00:03:09.280><c> one</c><00:03:09.519><c> of</c><00:03:09.599><c> these</c><00:03:09.840><c> drawbacks</c><00:03:10.800><c> and</c><00:03:11.120><c> you're</c>

00:03:11.350 --> 00:03:11.360 align:start position:0%
to one of these drawbacks and you're
 

00:03:11.360 --> 00:03:13.589 align:start position:0%
to one of these drawbacks and you're
going<00:03:11.599><c> to</c><00:03:11.680><c> take</c><00:03:11.840><c> a</c><00:03:11.920><c> performance</c><00:03:12.400><c> hit</c><00:03:13.040><c> either</c>

00:03:13.589 --> 00:03:13.599 align:start position:0%
going to take a performance hit either
 

00:03:13.599 --> 00:03:15.030 align:start position:0%
going to take a performance hit either
way<00:03:13.840><c> and</c><00:03:13.920><c> these</c><00:03:14.159><c> are</c><00:03:14.239><c> problems</c><00:03:14.640><c> that</c><00:03:14.800><c> you</c>

00:03:15.030 --> 00:03:15.040 align:start position:0%
way and these are problems that you
 

00:03:15.040 --> 00:03:17.589 align:start position:0%
way and these are problems that you
simply<00:03:15.599><c> don't</c><00:03:15.840><c> run</c><00:03:16.080><c> into</c><00:03:16.480><c> on</c><00:03:16.720><c> smaller</c><00:03:17.200><c> chips</c>

00:03:17.589 --> 00:03:17.599 align:start position:0%
simply don't run into on smaller chips
 

00:03:17.599 --> 00:03:19.670 align:start position:0%
simply don't run into on smaller chips
with<00:03:17.920><c> fewer</c><00:03:18.319><c> cores</c><00:03:18.959><c> because</c><00:03:19.280><c> you're</c><00:03:19.440><c> not</c>

00:03:19.670 --> 00:03:19.680 align:start position:0%
with fewer cores because you're not
 

00:03:19.680 --> 00:03:21.750 align:start position:0%
with fewer cores because you're not
dealing<00:03:20.000><c> with</c><00:03:20.239><c> multiple</c><00:03:20.720><c> nodes</c>

00:03:21.750 --> 00:03:21.760 align:start position:0%
dealing with multiple nodes
 

00:03:21.760 --> 00:03:23.670 align:start position:0%
dealing with multiple nodes
but<00:03:21.920><c> getting</c><00:03:22.159><c> away</c><00:03:22.400><c> from</c><00:03:22.560><c> memory</c><00:03:22.959><c> access</c>

00:03:23.670 --> 00:03:23.680 align:start position:0%
but getting away from memory access
 

00:03:23.680 --> 00:03:26.149 align:start position:0%
but getting away from memory access
sometimes<00:03:24.239><c> the</c><00:03:24.400><c> cores</c><00:03:24.800><c> themselves</c><00:03:25.760><c> are</c><00:03:25.920><c> even</c>

00:03:26.149 --> 00:03:26.159 align:start position:0%
sometimes the cores themselves are even
 

00:03:26.159 --> 00:03:28.070 align:start position:0%
sometimes the cores themselves are even
designed<00:03:26.560><c> in</c><00:03:26.640><c> a</c><00:03:26.720><c> way</c><00:03:26.959><c> that</c><00:03:27.200><c> bottlenecks</c><00:03:27.840><c> them</c>

00:03:28.070 --> 00:03:28.080 align:start position:0%
designed in a way that bottlenecks them
 

00:03:28.080 --> 00:03:30.390 align:start position:0%
designed in a way that bottlenecks them
the<00:03:28.239><c> more</c><00:03:28.400><c> of</c><00:03:28.480><c> them</c><00:03:28.640><c> you</c><00:03:28.800><c> slap</c><00:03:29.120><c> onto</c><00:03:29.440><c> a</c><00:03:29.599><c> chip</c><00:03:30.319><c> do</c>

00:03:30.390 --> 00:03:30.400 align:start position:0%
the more of them you slap onto a chip do
 

00:03:30.400 --> 00:03:32.789 align:start position:0%
the more of them you slap onto a chip do
you<00:03:30.480><c> remember</c><00:03:30.799><c> how</c><00:03:31.040><c> before</c><00:03:31.599><c> ryzen</c><00:03:32.159><c> amd</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
you remember how before ryzen amd
 

00:03:32.799 --> 00:03:35.110 align:start position:0%
you remember how before ryzen amd
processors<00:03:33.519><c> seemed</c><00:03:33.840><c> to</c><00:03:33.920><c> be</c><00:03:34.239><c> significantly</c>

00:03:35.110 --> 00:03:35.120 align:start position:0%
processors seemed to be significantly
 

00:03:35.120 --> 00:03:37.509 align:start position:0%
processors seemed to be significantly
slower<00:03:35.519><c> than</c><00:03:35.760><c> intel</c><00:03:36.400><c> despite</c><00:03:36.879><c> having</c><00:03:37.200><c> more</c>

00:03:37.509 --> 00:03:37.519 align:start position:0%
slower than intel despite having more
 

00:03:37.519 --> 00:03:38.470 align:start position:0%
slower than intel despite having more
cores

00:03:38.470 --> 00:03:38.480 align:start position:0%
cores
 

00:03:38.480 --> 00:03:40.309 align:start position:0%
cores
well<00:03:38.720><c> a</c><00:03:38.799><c> big</c><00:03:39.040><c> reason</c><00:03:39.360><c> for</c><00:03:39.519><c> this</c><00:03:39.840><c> was</c><00:03:40.080><c> that</c>

00:03:40.309 --> 00:03:40.319 align:start position:0%
well a big reason for this was that
 

00:03:40.319 --> 00:03:43.350 align:start position:0%
well a big reason for this was that
those<00:03:40.640><c> old</c><00:03:41.040><c> bulldozer</c><00:03:41.760><c> fx</c><00:03:42.159><c> processors</c><00:03:43.040><c> didn't</c>

00:03:43.350 --> 00:03:43.360 align:start position:0%
those old bulldozer fx processors didn't
 

00:03:43.360 --> 00:03:45.350 align:start position:0%
those old bulldozer fx processors didn't
use<00:03:44.080><c> full</c><00:03:44.400><c> cores</c>

00:03:45.350 --> 00:03:45.360 align:start position:0%
use full cores
 

00:03:45.360 --> 00:03:49.030 align:start position:0%
use full cores
instead<00:03:46.239><c> an</c><00:03:46.480><c> fx</c><00:03:46.879><c> cpu</c><00:03:47.599><c> advertised</c><00:03:48.239><c> as</c><00:03:48.319><c> having</c><00:03:48.799><c> a</c>

00:03:49.030 --> 00:03:49.040 align:start position:0%
instead an fx cpu advertised as having a
 

00:03:49.040 --> 00:03:51.190 align:start position:0%
instead an fx cpu advertised as having a
cores<00:03:49.440><c> would</c><00:03:49.680><c> in</c><00:03:49.840><c> reality</c><00:03:50.480><c> have</c><00:03:50.720><c> eight</c>

00:03:51.190 --> 00:03:51.200 align:start position:0%
cores would in reality have eight
 

00:03:51.200 --> 00:03:53.670 align:start position:0%
cores would in reality have eight
integer<00:03:51.680><c> units</c><00:03:52.239><c> but</c><00:03:52.480><c> only</c><00:03:52.879><c> four</c><00:03:53.280><c> floating</c>

00:03:53.670 --> 00:03:53.680 align:start position:0%
integer units but only four floating
 

00:03:53.680 --> 00:03:55.750 align:start position:0%
integer units but only four floating
point<00:03:53.920><c> units</c><00:03:54.239><c> that</c><00:03:54.400><c> were</c><00:03:54.799><c> shared</c><00:03:55.280><c> between</c><00:03:55.599><c> the</c>

00:03:55.750 --> 00:03:55.760 align:start position:0%
point units that were shared between the
 

00:03:55.760 --> 00:03:57.589 align:start position:0%
point units that were shared between the
eight<00:03:56.080><c> cores</c><00:03:56.799><c> so</c><00:03:57.040><c> if</c><00:03:57.120><c> you</c><00:03:57.200><c> don't</c><00:03:57.280><c> know</c><00:03:57.360><c> what</c><00:03:57.439><c> a</c>

00:03:57.589 --> 00:03:57.599 align:start position:0%
eight cores so if you don't know what a
 

00:03:57.599 --> 00:03:58.869 align:start position:0%
eight cores so if you don't know what a
floating<00:03:57.840><c> point</c><00:03:58.080><c> unit</c><00:03:58.319><c> is</c><00:03:58.480><c> you</c><00:03:58.640><c> can</c><00:03:58.720><c> learn</c>

00:03:58.869 --> 00:03:58.879 align:start position:0%
floating point unit is you can learn
 

00:03:58.879 --> 00:04:00.070 align:start position:0%
floating point unit is you can learn
more<00:03:59.040><c> about</c><00:03:59.200><c> that</c><00:03:59.360><c> right</c><00:03:59.519><c> up</c><00:03:59.599><c> here</c><00:03:59.760><c> but</c><00:04:00.000><c> the</c>

00:04:00.070 --> 00:04:00.080 align:start position:0%
more about that right up here but the
 

00:04:00.080 --> 00:04:02.390 align:start position:0%
more about that right up here but the
point<00:04:00.400><c> is</c><00:04:00.879><c> you</c><00:04:01.040><c> could</c><00:04:01.200><c> think</c><00:04:01.439><c> of</c><00:04:01.519><c> these</c><00:04:01.760><c> cpus</c>

00:04:02.390 --> 00:04:02.400 align:start position:0%
point is you could think of these cpus
 

00:04:02.400 --> 00:04:03.509 align:start position:0%
point is you could think of these cpus
as<00:04:02.640><c> having</c>

00:04:03.509 --> 00:04:03.519 align:start position:0%
as having
 

00:04:03.519 --> 00:04:04.390 align:start position:0%
as having
four

00:04:04.390 --> 00:04:04.400 align:start position:0%
four
 

00:04:04.400 --> 00:04:06.309 align:start position:0%
four
half<00:04:04.720><c> cores</c><00:04:05.120><c> that</c><00:04:05.360><c> were</c><00:04:05.519><c> missing</c><00:04:05.920><c> which</c>

00:04:06.309 --> 00:04:06.319 align:start position:0%
half cores that were missing which
 

00:04:06.319 --> 00:04:08.149 align:start position:0%
half cores that were missing which
severely<00:04:06.959><c> hampered</c><00:04:07.360><c> their</c><00:04:07.519><c> single</c><00:04:07.760><c> threaded</c>

00:04:08.149 --> 00:04:08.159 align:start position:0%
severely hampered their single threaded
 

00:04:08.159 --> 00:04:11.110 align:start position:0%
severely hampered their single threaded
performance<00:04:09.040><c> in</c><00:04:09.200><c> some</c><00:04:09.599><c> key</c><00:04:09.840><c> applications</c>

00:04:11.110 --> 00:04:11.120 align:start position:0%
performance in some key applications
 

00:04:11.120 --> 00:04:13.509 align:start position:0%
performance in some key applications
now<00:04:11.360><c> this</c><00:04:11.599><c> design</c><00:04:12.159><c> allowed</c><00:04:12.560><c> amd</c><00:04:12.959><c> processors</c>

00:04:13.509 --> 00:04:13.519 align:start position:0%
now this design allowed amd processors
 

00:04:13.519 --> 00:04:15.110 align:start position:0%
now this design allowed amd processors
to<00:04:13.599><c> handle</c><00:04:14.000><c> more</c><00:04:14.239><c> threads</c><00:04:14.560><c> for</c><00:04:14.640><c> a</c><00:04:14.720><c> cheaper</c>

00:04:15.110 --> 00:04:15.120 align:start position:0%
to handle more threads for a cheaper
 

00:04:15.120 --> 00:04:16.870 align:start position:0%
to handle more threads for a cheaper
price<00:04:15.680><c> but</c><00:04:15.920><c> it</c><00:04:16.079><c> also</c><00:04:16.320><c> meant</c><00:04:16.479><c> that</c><00:04:16.639><c> their</c>

00:04:16.870 --> 00:04:16.880 align:start position:0%
price but it also meant that their
 

00:04:16.880 --> 00:04:19.270 align:start position:0%
price but it also meant that their
real-world<00:04:17.519><c> performance</c><00:04:18.160><c> legged</c><00:04:18.560><c> way</c><00:04:18.880><c> behind</c>

00:04:19.270 --> 00:04:19.280 align:start position:0%
real-world performance legged way behind
 

00:04:19.280 --> 00:04:21.349 align:start position:0%
real-world performance legged way behind
intel<00:04:19.840><c> and</c><00:04:20.000><c> the</c><00:04:20.160><c> only</c><00:04:20.320><c> way</c><00:04:20.479><c> amd</c><00:04:20.880><c> could</c><00:04:21.040><c> try</c><00:04:21.280><c> and</c>

00:04:21.349 --> 00:04:21.359 align:start position:0%
intel and the only way amd could try and
 

00:04:21.359 --> 00:04:23.909 align:start position:0%
intel and the only way amd could try and
compensate<00:04:22.000><c> was</c><00:04:22.240><c> to</c><00:04:22.560><c> increase</c><00:04:22.960><c> clock</c><00:04:23.280><c> speeds</c>

00:04:23.909 --> 00:04:23.919 align:start position:0%
compensate was to increase clock speeds
 

00:04:23.919 --> 00:04:25.830 align:start position:0%
compensate was to increase clock speeds
which<00:04:24.240><c> increased</c><00:04:24.720><c> heat</c><00:04:25.040><c> output</c><00:04:25.600><c> and</c>

00:04:25.830 --> 00:04:25.840 align:start position:0%
which increased heat output and
 

00:04:25.840 --> 00:04:27.909 align:start position:0%
which increased heat output and
contributed<00:04:26.320><c> to</c><00:04:26.479><c> amd's</c><00:04:26.880><c> reputation</c><00:04:27.520><c> for</c><00:04:27.759><c> hot</c>

00:04:27.909 --> 00:04:27.919 align:start position:0%
contributed to amd's reputation for hot
 

00:04:27.919 --> 00:04:30.550 align:start position:0%
contributed to amd's reputation for hot
running<00:04:28.240><c> cpus</c><00:04:28.960><c> for</c><00:04:29.120><c> many</c><00:04:29.440><c> years</c><00:04:30.160><c> so</c><00:04:30.320><c> what's</c>

00:04:30.550 --> 00:04:30.560 align:start position:0%
running cpus for many years so what's
 

00:04:30.560 --> 00:04:33.110 align:start position:0%
running cpus for many years so what's
our<00:04:30.639><c> bottom</c><00:04:30.960><c> line</c><00:04:31.199><c> then</c><00:04:31.680><c> although</c><00:04:32.160><c> both</c><00:04:32.479><c> amd</c>

00:04:33.110 --> 00:04:33.120 align:start position:0%
our bottom line then although both amd
 

00:04:33.120 --> 00:04:35.110 align:start position:0%
our bottom line then although both amd
and<00:04:33.360><c> intel</c><00:04:33.840><c> are</c><00:04:34.000><c> using</c><00:04:34.320><c> much</c><00:04:34.720><c> wiser</c>

00:04:35.110 --> 00:04:35.120 align:start position:0%
and intel are using much wiser
 

00:04:35.120 --> 00:04:37.909 align:start position:0%
and intel are using much wiser
strategies<00:04:35.680><c> for</c><00:04:35.840><c> their</c><00:04:36.000><c> many</c><00:04:36.240><c> core</c><00:04:36.560><c> cpus</c><00:04:37.360><c> and</c>

00:04:37.909 --> 00:04:37.919 align:start position:0%
strategies for their many core cpus and
 

00:04:37.919 --> 00:04:39.749 align:start position:0%
strategies for their many core cpus and
clever<00:04:38.320><c> boosting</c><00:04:38.800><c> techniques</c><00:04:39.199><c> to</c><00:04:39.360><c> give</c><00:04:39.520><c> them</c>

00:04:39.749 --> 00:04:39.759 align:start position:0%
clever boosting techniques to give them
 

00:04:39.759 --> 00:04:41.670 align:start position:0%
clever boosting techniques to give them
similar<00:04:40.160><c> single</c><00:04:40.479><c> threaded</c><00:04:40.800><c> performance</c><00:04:41.520><c> to</c>

00:04:41.670 --> 00:04:41.680 align:start position:0%
similar single threaded performance to
 

00:04:41.680 --> 00:04:44.230 align:start position:0%
similar single threaded performance to
their<00:04:42.080><c> less</c><00:04:42.400><c> costly</c><00:04:42.880><c> brethren</c>

00:04:44.230 --> 00:04:44.240 align:start position:0%
their less costly brethren
 

00:04:44.240 --> 00:04:46.469 align:start position:0%
their less costly brethren
if<00:04:44.400><c> the</c><00:04:44.560><c> best</c><00:04:44.880><c> sales</c><00:04:45.280><c> pitch</c><00:04:45.759><c> for</c><00:04:46.000><c> a</c><00:04:46.080><c> super</c>

00:04:46.469 --> 00:04:46.479 align:start position:0%
if the best sales pitch for a super
 

00:04:46.479 --> 00:04:48.790 align:start position:0%
if the best sales pitch for a super
premium<00:04:47.040><c> product</c><00:04:47.680><c> is</c><00:04:47.840><c> that</c><00:04:48.080><c> it</c><00:04:48.320><c> doesn't</c>

00:04:48.790 --> 00:04:48.800 align:start position:0%
premium product is that it doesn't
 

00:04:48.800 --> 00:04:51.189 align:start position:0%
premium product is that it doesn't
suffer<00:04:49.120><c> a</c><00:04:49.280><c> performance</c><00:04:50.000><c> penalty</c><00:04:50.880><c> in</c><00:04:51.040><c> the</c>

00:04:51.189 --> 00:04:51.199 align:start position:0%
suffer a performance penalty in the
 

00:04:51.199 --> 00:04:52.950 align:start position:0%
suffer a performance penalty in the
applications<00:04:51.840><c> that</c><00:04:52.000><c> you</c><00:04:52.160><c> use</c>

00:04:52.950 --> 00:04:52.960 align:start position:0%
applications that you use
 

00:04:52.960 --> 00:04:53.830 align:start position:0%
applications that you use
well

00:04:53.830 --> 00:04:53.840 align:start position:0%
well
 

00:04:53.840 --> 00:04:55.590 align:start position:0%
well
you'd<00:04:54.080><c> better</c><00:04:54.320><c> make</c><00:04:54.560><c> sure</c><00:04:54.720><c> you've</c><00:04:54.960><c> got</c><00:04:55.120><c> a</c><00:04:55.280><c> use</c>

00:04:55.590 --> 00:04:55.600 align:start position:0%
you'd better make sure you've got a use
 

00:04:55.600 --> 00:04:57.590 align:start position:0%
you'd better make sure you've got a use
case<00:04:55.919><c> for</c><00:04:56.160><c> it</c><00:04:56.400><c> before</c><00:04:56.800><c> spending</c><00:04:57.199><c> your</c><00:04:57.360><c> hard</c>

00:04:57.590 --> 00:04:57.600 align:start position:0%
case for it before spending your hard
 

00:04:57.600 --> 00:05:00.629 align:start position:0%
case for it before spending your hard
earned<00:04:57.840><c> cash</c><00:04:58.560><c> and</c><00:04:59.120><c> no</c><00:04:59.680><c> playing</c><00:05:00.000><c> fortnight</c><00:05:00.560><c> and</c>

00:05:00.629 --> 00:05:00.639 align:start position:0%
earned cash and no playing fortnight and
 

00:05:00.639 --> 00:05:04.230 align:start position:0%
earned cash and no playing fortnight and
watching<00:05:00.960><c> techwiki</c><00:05:02.080><c> definitely</c><00:05:02.560><c> don't</c><00:05:02.800><c> count</c>

00:05:04.230 --> 00:05:04.240 align:start position:0%
watching techwiki definitely don't count
 

00:05:04.240 --> 00:05:06.550 align:start position:0%
watching techwiki definitely don't count
and<00:05:04.479><c> neither</c><00:05:04.960><c> does</c><00:05:05.280><c> using</c><00:05:05.759><c> brilliant</c><00:05:06.400><c> because</c>

00:05:06.550 --> 00:05:06.560 align:start position:0%
and neither does using brilliant because
 

00:05:06.560 --> 00:05:08.550 align:start position:0%
and neither does using brilliant because
you<00:05:06.720><c> can</c><00:05:06.880><c> kind</c><00:05:07.039><c> of</c><00:05:07.120><c> do</c><00:05:07.280><c> it</c><00:05:07.440><c> anywhere</c><00:05:08.080><c> effective</c>

00:05:08.550 --> 00:05:08.560 align:start position:0%
you can kind of do it anywhere effective
 

00:05:08.560 --> 00:05:11.430 align:start position:0%
you can kind of do it anywhere effective
learning<00:05:08.960><c> guys</c><00:05:09.280><c> is</c><00:05:09.680><c> active</c><00:05:10.400><c> not</c><00:05:10.720><c> passive</c><00:05:11.280><c> so</c>

00:05:11.430 --> 00:05:11.440 align:start position:0%
learning guys is active not passive so
 

00:05:11.440 --> 00:05:13.749 align:start position:0%
learning guys is active not passive so
learning<00:05:11.759><c> from</c><00:05:12.160><c> lectures</c><00:05:12.639><c> and</c><00:05:12.720><c> videos</c><00:05:13.440><c> is</c>

00:05:13.749 --> 00:05:13.759 align:start position:0%
learning from lectures and videos is
 

00:05:13.759 --> 00:05:16.230 align:start position:0%
learning from lectures and videos is
just<00:05:14.160><c> not</c><00:05:14.400><c> as</c><00:05:14.560><c> fast</c><00:05:14.960><c> as</c><00:05:15.120><c> diving</c><00:05:15.520><c> in</c><00:05:15.759><c> and</c><00:05:15.919><c> doing</c>

00:05:16.230 --> 00:05:16.240 align:start position:0%
just not as fast as diving in and doing
 

00:05:16.240 --> 00:05:18.710 align:start position:0%
just not as fast as diving in and doing
things<00:05:16.639><c> yourself</c><00:05:17.600><c> and</c><00:05:17.840><c> brilliant</c><00:05:18.400><c> is</c><00:05:18.560><c> a</c>

00:05:18.710 --> 00:05:18.720 align:start position:0%
things yourself and brilliant is a
 

00:05:18.720 --> 00:05:20.950 align:start position:0%
things yourself and brilliant is a
problem-solving<00:05:19.440><c> based</c><00:05:19.680><c> website</c><00:05:20.240><c> and</c><00:05:20.560><c> app</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
problem-solving based website and app
 

00:05:20.960 --> 00:05:23.430 align:start position:0%
problem-solving based website and app
with<00:05:21.199><c> a</c><00:05:21.360><c> hands-on</c><00:05:21.840><c> approach</c><00:05:22.400><c> with</c><00:05:22.639><c> over</c><00:05:23.039><c> 60</c>

00:05:23.430 --> 00:05:23.440 align:start position:0%
with a hands-on approach with over 60
 

00:05:23.440 --> 00:05:25.749 align:start position:0%
with a hands-on approach with over 60
interactive<00:05:24.000><c> courses</c><00:05:24.400><c> in</c><00:05:24.560><c> math</c><00:05:25.120><c> science</c><00:05:25.600><c> and</c>

00:05:25.749 --> 00:05:25.759 align:start position:0%
interactive courses in math science and
 

00:05:25.759 --> 00:05:27.670 align:start position:0%
interactive courses in math science and
computer<00:05:26.240><c> science</c><00:05:26.880><c> brilliant</c><00:05:27.360><c> lets</c><00:05:27.520><c> you</c>

00:05:27.670 --> 00:05:27.680 align:start position:0%
computer science brilliant lets you
 

00:05:27.680 --> 00:05:29.749 align:start position:0%
computer science brilliant lets you
master<00:05:28.080><c> concepts</c><00:05:28.639><c> by</c><00:05:28.800><c> solving</c><00:05:29.199><c> fun</c>

00:05:29.749 --> 00:05:29.759 align:start position:0%
master concepts by solving fun
 

00:05:29.759 --> 00:05:32.230 align:start position:0%
master concepts by solving fun
challenging<00:05:30.320><c> problems</c><00:05:30.880><c> for</c><00:05:31.120><c> yourself</c><00:05:32.000><c> rather</c>

00:05:32.230 --> 00:05:32.240 align:start position:0%
challenging problems for yourself rather
 

00:05:32.240 --> 00:05:33.830 align:start position:0%
challenging problems for yourself rather
than<00:05:32.400><c> by</c><00:05:32.560><c> watching</c><00:05:33.039><c> someone</c><00:05:33.360><c> else</c><00:05:33.520><c> do</c><00:05:33.680><c> it</c><00:05:33.759><c> and</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
than by watching someone else do it and
 

00:05:33.840 --> 00:05:35.830 align:start position:0%
than by watching someone else do it and
this<00:05:34.080><c> is</c><00:05:34.400><c> really</c><00:05:34.720><c> useful</c><00:05:35.360><c> if</c><00:05:35.520><c> you're</c><00:05:35.680><c> in</c><00:05:35.759><c> a</c>

00:05:35.830 --> 00:05:35.840 align:start position:0%
this is really useful if you're in a
 

00:05:35.840 --> 00:05:37.909 align:start position:0%
this is really useful if you're in a
stem<00:05:36.160><c> course</c><00:05:36.880><c> their</c><00:05:37.120><c> courses</c><00:05:37.600><c> have</c>

00:05:37.909 --> 00:05:37.919 align:start position:0%
stem course their courses have
 

00:05:37.919 --> 00:05:40.070 align:start position:0%
stem course their courses have
storytelling<00:05:38.720><c> code</c><00:05:38.960><c> writing</c><00:05:39.600><c> interactive</c>

00:05:40.070 --> 00:05:40.080 align:start position:0%
storytelling code writing interactive
 

00:05:40.080 --> 00:05:42.469 align:start position:0%
storytelling code writing interactive
challenges<00:05:40.880><c> and</c><00:05:41.120><c> problems</c><00:05:41.520><c> to</c><00:05:41.680><c> solve</c><00:05:42.240><c> and</c><00:05:42.400><c> you</c>

00:05:42.469 --> 00:05:42.479 align:start position:0%
challenges and problems to solve and you
 

00:05:42.479 --> 00:05:44.230 align:start position:0%
challenges and problems to solve and you
can<00:05:42.639><c> check</c><00:05:42.880><c> out</c><00:05:43.199><c> great</c><00:05:43.520><c> courses</c><00:05:43.840><c> like</c><00:05:44.000><c> the</c><00:05:44.080><c> one</c>

00:05:44.230 --> 00:05:44.240 align:start position:0%
can check out great courses like the one
 

00:05:44.240 --> 00:05:46.550 align:start position:0%
can check out great courses like the one
on<00:05:44.479><c> search</c><00:05:44.800><c> engines</c><00:05:45.360><c> so</c><00:05:45.520><c> you</c><00:05:45.600><c> can</c><00:05:45.919><c> learn</c><00:05:46.400><c> how</c>

00:05:46.550 --> 00:05:46.560 align:start position:0%
on search engines so you can learn how
 

00:05:46.560 --> 00:05:48.790 align:start position:0%
on search engines so you can learn how
it<00:05:46.720><c> is</c><00:05:46.880><c> that</c><00:05:47.120><c> google</c><00:05:47.520><c> answers</c><00:05:47.919><c> a</c><00:05:48.080><c> question</c><00:05:48.639><c> in</c>

00:05:48.790 --> 00:05:48.800 align:start position:0%
it is that google answers a question in
 

00:05:48.800 --> 00:05:50.790 align:start position:0%
it is that google answers a question in
a<00:05:48.960><c> fraction</c><00:05:49.280><c> of</c><00:05:49.440><c> a</c><00:05:49.520><c> second</c><00:05:50.160><c> even</c><00:05:50.400><c> though</c><00:05:50.560><c> there</c>

00:05:50.790 --> 00:05:50.800 align:start position:0%
a fraction of a second even though there
 

00:05:50.800 --> 00:05:53.189 align:start position:0%
a fraction of a second even though there
are<00:05:50.960><c> so</c><00:05:51.120><c> many</c><00:05:51.520><c> billions</c><00:05:52.000><c> of</c><00:05:52.160><c> sites</c><00:05:52.720><c> to</c><00:05:52.880><c> search</c>

00:05:53.189 --> 00:05:53.199 align:start position:0%
are so many billions of sites to search
 

00:05:53.199 --> 00:05:54.070 align:start position:0%
are so many billions of sites to search
through

00:05:54.070 --> 00:05:54.080 align:start position:0%
through
 

00:05:54.080 --> 00:05:55.749 align:start position:0%
through
so<00:05:54.240><c> check</c><00:05:54.479><c> it</c><00:05:54.639><c> out</c><00:05:54.800><c> now</c><00:05:55.039><c> because</c><00:05:55.280><c> the</c><00:05:55.440><c> first</c>

00:05:55.749 --> 00:05:55.759 align:start position:0%
so check it out now because the first
 

00:05:55.759 --> 00:05:57.830 align:start position:0%
so check it out now because the first
200<00:05:56.240><c> of</c><00:05:56.320><c> you</c><00:05:56.479><c> to</c><00:05:56.560><c> head</c><00:05:56.720><c> to</c><00:05:56.880><c> brilliant.org</c>

00:05:57.830 --> 00:05:57.840 align:start position:0%
200 of you to head to brilliant.org
 

00:05:57.840 --> 00:05:59.430 align:start position:0%
200 of you to head to brilliant.org
techwiki<00:05:58.560><c> we're</c><00:05:58.720><c> going</c><00:05:58.800><c> to</c><00:05:58.880><c> have</c><00:05:59.039><c> that</c><00:05:59.199><c> linked</c>

00:05:59.430 --> 00:05:59.440 align:start position:0%
techwiki we're going to have that linked
 

00:05:59.440 --> 00:06:01.830 align:start position:0%
techwiki we're going to have that linked
below<00:06:00.000><c> are</c><00:06:00.160><c> going</c><00:06:00.240><c> to</c><00:06:00.320><c> get</c><00:06:00.639><c> 20</c><00:06:01.360><c> off</c><00:06:01.600><c> their</c>

00:06:01.830 --> 00:06:01.840 align:start position:0%
below are going to get 20 off their
 

00:06:01.840 --> 00:06:03.749 align:start position:0%
below are going to get 20 off their
annual<00:06:02.240><c> premium</c><00:06:02.560><c> subscription</c>

00:06:03.749 --> 00:06:03.759 align:start position:0%
annual premium subscription
 

00:06:03.759 --> 00:06:05.430 align:start position:0%
annual premium subscription
so<00:06:03.919><c> thanks</c><00:06:04.080><c> for</c><00:06:04.160><c> watching</c><00:06:04.479><c> guys</c><00:06:04.800><c> like</c><00:06:04.960><c> dislike</c>

00:06:05.430 --> 00:06:05.440 align:start position:0%
so thanks for watching guys like dislike
 

00:06:05.440 --> 00:06:07.909 align:start position:0%
so thanks for watching guys like dislike
check<00:06:05.600><c> out</c><00:06:05.759><c> our</c><00:06:05.919><c> other</c><00:06:06.160><c> videos</c><00:06:06.880><c> and</c><00:06:07.600><c> don't</c>

00:06:07.909 --> 00:06:07.919 align:start position:0%
check out our other videos and don't
 

00:06:07.919 --> 00:06:10.629 align:start position:0%
check out our other videos and don't
forget<00:06:08.319><c> to</c><00:06:08.560><c> subscribe</c>

00:06:10.629 --> 00:06:10.639 align:start position:0%
forget to subscribe
 

00:06:10.639 --> 00:06:15.000 align:start position:0%
forget to subscribe
that<00:06:10.800><c> wouldn't</c><00:06:11.039><c> be</c><00:06:11.120><c> brilliant</c><00:06:11.759><c> would</c><00:06:12.000><c> it</c>

