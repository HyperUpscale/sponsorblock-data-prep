WEBVTT
Kind: captions
Language: en

00:00:01.680 --> 00:00:03.990 align:start position:0%
 
following<00:00:02.080><c> up</c><00:00:02.159><c> on</c><00:00:02.320><c> our</c><00:00:02.480><c> clock</c><00:00:02.800><c> for</c><00:00:03.040><c> clock</c><00:00:03.280><c> 3100</c>

00:00:03.990 --> 00:00:04.000 align:start position:0%
following up on our clock for clock 3100
 

00:00:04.000 --> 00:00:06.150 align:start position:0%
following up on our clock for clock 3100
versus<00:00:04.319><c> 3300x</c><00:00:05.359><c> benchmarks</c>

00:00:06.150 --> 00:00:06.160 align:start position:0%
versus 3300x benchmarks
 

00:00:06.160 --> 00:00:08.230 align:start position:0%
versus 3300x benchmarks
we<00:00:06.560><c> wanted</c><00:00:06.799><c> to</c><00:00:06.960><c> see</c><00:00:07.120><c> if</c><00:00:07.279><c> it's</c><00:00:07.520><c> possible</c><00:00:08.000><c> to</c>

00:00:08.230 --> 00:00:08.240 align:start position:0%
we wanted to see if it's possible to
 

00:00:08.240 --> 00:00:09.750 align:start position:0%
we wanted to see if it's possible to
make<00:00:08.480><c> the</c><00:00:08.639><c> 3100</c>

00:00:09.750 --> 00:00:09.760 align:start position:0%
make the 3100
 

00:00:09.760 --> 00:00:12.070 align:start position:0%
make the 3100
equate<00:00:10.240><c> the</c><00:00:10.320><c> 3300x</c><00:00:11.280><c> with</c><00:00:11.519><c> a</c><00:00:11.599><c> little</c><00:00:11.759><c> bit</c><00:00:11.920><c> of</c>

00:00:12.070 --> 00:00:12.080 align:start position:0%
equate the 3300x with a little bit of
 

00:00:12.080 --> 00:00:12.870 align:start position:0%
equate the 3300x with a little bit of
extra<00:00:12.400><c> help</c>

00:00:12.870 --> 00:00:12.880 align:start position:0%
extra help
 

00:00:12.880 --> 00:00:14.070 align:start position:0%
extra help
so<00:00:13.040><c> for</c><00:00:13.200><c> this</c><00:00:13.280><c> one</c><00:00:13.519><c> we're</c><00:00:13.679><c> doing</c><00:00:13.840><c> some</c>

00:00:14.070 --> 00:00:14.080 align:start position:0%
so for this one we're doing some
 

00:00:14.080 --> 00:00:16.310 align:start position:0%
so for this one we're doing some
infinity<00:00:14.480><c> fabric</c><00:00:14.880><c> overclocking</c><00:00:15.839><c> and</c>

00:00:16.310 --> 00:00:16.320 align:start position:0%
infinity fabric overclocking and
 

00:00:16.320 --> 00:00:18.310 align:start position:0%
infinity fabric overclocking and
we<00:00:16.560><c> also</c><00:00:16.880><c> changed</c><00:00:17.199><c> up</c><00:00:17.279><c> the</c><00:00:17.440><c> memory</c><00:00:18.000><c> this</c><00:00:18.160><c> is</c>

00:00:18.310 --> 00:00:18.320 align:start position:0%
we also changed up the memory this is
 

00:00:18.320 --> 00:00:19.510 align:start position:0%
we also changed up the memory this is
getting<00:00:18.640><c> into</c><00:00:18.880><c> sort</c><00:00:19.119><c> of</c>

00:00:19.510 --> 00:00:19.520 align:start position:0%
getting into sort of
 

00:00:19.520 --> 00:00:21.590 align:start position:0%
getting into sort of
personal<00:00:20.000><c> curiosities</c><00:00:20.800><c> and</c><00:00:21.039><c> academic</c>

00:00:21.590 --> 00:00:21.600 align:start position:0%
personal curiosities and academic
 

00:00:21.600 --> 00:00:23.109 align:start position:0%
personal curiosities and academic
research<00:00:22.000><c> at</c><00:00:22.080><c> this</c><00:00:22.240><c> point</c><00:00:22.480><c> because</c>

00:00:23.109 --> 00:00:23.119 align:start position:0%
research at this point because
 

00:00:23.119 --> 00:00:25.189 align:start position:0%
research at this point because
realistically<00:00:24.160><c> you</c><00:00:24.320><c> shouldn't</c><00:00:24.640><c> be</c><00:00:24.800><c> trying</c><00:00:25.039><c> to</c>

00:00:25.189 --> 00:00:25.199 align:start position:0%
realistically you shouldn't be trying to
 

00:00:25.199 --> 00:00:26.150 align:start position:0%
realistically you shouldn't be trying to
save<00:00:25.519><c> 20</c>

00:00:26.150 --> 00:00:26.160 align:start position:0%
save 20
 

00:00:26.160 --> 00:00:28.230 align:start position:0%
save 20
off<00:00:26.320><c> the</c><00:00:26.400><c> cpu</c><00:00:26.880><c> difference</c><00:00:27.439><c> by</c><00:00:27.760><c> spending</c><00:00:28.160><c> a</c>

00:00:28.230 --> 00:00:28.240 align:start position:0%
off the cpu difference by spending a
 

00:00:28.240 --> 00:00:29.990 align:start position:0%
off the cpu difference by spending a
whole<00:00:28.400><c> lot</c><00:00:28.640><c> more</c><00:00:28.880><c> on</c><00:00:28.960><c> the</c><00:00:29.039><c> memory</c><00:00:29.519><c> instead</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
whole lot more on the memory instead
 

00:00:30.000 --> 00:00:31.750 align:start position:0%
whole lot more on the memory instead
but<00:00:30.560><c> we're</c><00:00:30.720><c> going</c><00:00:30.800><c> to</c><00:00:30.880><c> test</c><00:00:31.119><c> it</c><00:00:31.279><c> to</c><00:00:31.359><c> see</c><00:00:31.519><c> what</c>

00:00:31.750 --> 00:00:31.760 align:start position:0%
but we're going to test it to see what
 

00:00:31.760 --> 00:00:33.190 align:start position:0%
but we're going to test it to see what
happens<00:00:32.000><c> if</c><00:00:32.160><c> you</c><00:00:32.239><c> did</c><00:00:32.480><c> do</c><00:00:32.640><c> that</c>

00:00:33.190 --> 00:00:33.200 align:start position:0%
happens if you did do that
 

00:00:33.200 --> 00:00:35.590 align:start position:0%
happens if you did do that
and<00:00:33.600><c> we</c><00:00:33.920><c> also</c><00:00:34.160><c> have</c><00:00:34.480><c> the</c><00:00:34.800><c> infinity</c><00:00:35.200><c> fabric</c>

00:00:35.590 --> 00:00:35.600 align:start position:0%
and we also have the infinity fabric
 

00:00:35.600 --> 00:00:36.709 align:start position:0%
and we also have the infinity fabric
only<00:00:35.920><c> clocks</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
only clocks
 

00:00:36.719 --> 00:00:39.110 align:start position:0%
only clocks
separately<00:00:37.360><c> so</c><00:00:37.600><c> we</c><00:00:37.680><c> can</c><00:00:37.920><c> isolate</c><00:00:38.399><c> the</c><00:00:38.640><c> memory</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
separately so we can isolate the memory
 

00:00:39.120 --> 00:00:40.630 align:start position:0%
separately so we can isolate the memory
versus<00:00:39.440><c> the</c><00:00:39.520><c> if</c><00:00:39.920><c> changes</c>

00:00:40.630 --> 00:00:40.640 align:start position:0%
versus the if changes
 

00:00:40.640 --> 00:00:43.190 align:start position:0%
versus the if changes
and<00:00:40.879><c> see</c><00:00:41.120><c> if</c><00:00:41.360><c> it's</c><00:00:41.520><c> possible</c><00:00:41.840><c> to</c><00:00:42.000><c> get</c><00:00:42.079><c> the</c><00:00:42.160><c> 3100</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
and see if it's possible to get the 3100
 

00:00:43.200 --> 00:00:45.830 align:start position:0%
and see if it's possible to get the 3100
up<00:00:43.360><c> to</c><00:00:43.440><c> the</c><00:00:43.600><c> 3300x</c><00:00:44.480><c> and</c><00:00:44.640><c> amd's</c><00:00:44.960><c> new</c><00:00:45.120><c> ryzen</c><00:00:45.440><c> cpu</c>

00:00:45.830 --> 00:00:45.840 align:start position:0%
up to the 3300x and amd's new ryzen cpu
 

00:00:45.840 --> 00:00:47.430 align:start position:0%
up to the 3300x and amd's new ryzen cpu
line<00:00:46.160><c> before</c><00:00:46.480><c> that</c><00:00:46.719><c> this</c><00:00:46.879><c> video</c><00:00:47.120><c> is</c><00:00:47.200><c> brought</c>

00:00:47.430 --> 00:00:47.440 align:start position:0%
line before that this video is brought
 

00:00:47.440 --> 00:00:48.709 align:start position:0%
line before that this video is brought
to<00:00:47.520><c> you</c><00:00:47.600><c> by</c><00:00:47.840><c> cd</c><00:00:48.160><c> projekt</c>

00:00:48.709 --> 00:00:48.719 align:start position:0%
to you by cd projekt
 

00:00:48.719 --> 00:00:51.670 align:start position:0%
to you by cd projekt
red<00:00:49.120><c> and</c><00:00:49.280><c> the</c><00:00:49.520><c> cyberpunk</c><00:00:50.079><c> 2077</c><00:00:50.960><c> pc</c><00:00:51.360><c> modding</c>

00:00:51.670 --> 00:00:51.680 align:start position:0%
red and the cyberpunk 2077 pc modding
 

00:00:51.680 --> 00:00:52.389 align:start position:0%
red and the cyberpunk 2077 pc modding
contest

00:00:52.389 --> 00:00:52.399 align:start position:0%
contest
 

00:00:52.399 --> 00:00:54.709 align:start position:0%
contest
the<00:00:52.559><c> cyberpunk</c><00:00:53.120><c> 2077</c><00:00:53.920><c> team</c><00:00:54.160><c> is</c><00:00:54.239><c> hosting</c><00:00:54.640><c> a</c>

00:00:54.709 --> 00:00:54.719 align:start position:0%
the cyberpunk 2077 team is hosting a
 

00:00:54.719 --> 00:00:56.630 align:start position:0%
the cyberpunk 2077 team is hosting a
case<00:00:54.960><c> modding</c><00:00:55.280><c> contest</c><00:00:55.840><c> that</c><00:00:56.000><c> gives</c><00:00:56.239><c> winners</c>

00:00:56.630 --> 00:00:56.640 align:start position:0%
case modding contest that gives winners
 

00:00:56.640 --> 00:00:57.830 align:start position:0%
case modding contest that gives winners
the<00:00:56.800><c> opportunity</c><00:00:57.360><c> to</c><00:00:57.520><c> work</c><00:00:57.680><c> with</c>

00:00:57.830 --> 00:00:57.840 align:start position:0%
the opportunity to work with
 

00:00:57.840 --> 00:00:59.430 align:start position:0%
the opportunity to work with
professional<00:00:58.320><c> case</c><00:00:58.559><c> modders</c><00:00:58.960><c> to</c><00:00:59.039><c> build</c><00:00:59.280><c> the</c>

00:00:59.430 --> 00:00:59.440 align:start position:0%
professional case modders to build the
 

00:00:59.440 --> 00:01:01.110 align:start position:0%
professional case modders to build the
ultimate<00:00:59.840><c> system</c><00:01:00.239><c> you</c><00:01:00.320><c> don't</c><00:01:00.480><c> have</c><00:01:00.640><c> to</c><00:01:00.719><c> do</c><00:01:00.879><c> any</c>

00:01:01.110 --> 00:01:01.120 align:start position:0%
ultimate system you don't have to do any
 

00:01:01.120 --> 00:01:02.950 align:start position:0%
ultimate system you don't have to do any
physical<00:01:01.520><c> modding</c><00:01:01.840><c> to</c><00:01:02.000><c> enter</c><00:01:02.239><c> the</c><00:01:02.399><c> contest</c>

00:01:02.950 --> 00:01:02.960 align:start position:0%
physical modding to enter the contest
 

00:01:02.960 --> 00:01:04.710 align:start position:0%
physical modding to enter the contest
just<00:01:03.199><c> a</c><00:01:03.359><c> mock-up</c><00:01:03.840><c> with</c><00:01:04.000><c> three</c><00:01:04.159><c> views</c><00:01:04.479><c> of</c><00:01:04.559><c> the</c>

00:01:04.710 --> 00:01:04.720 align:start position:0%
just a mock-up with three views of the
 

00:01:04.720 --> 00:01:05.109 align:start position:0%
just a mock-up with three views of the
mod

00:01:05.109 --> 00:01:05.119 align:start position:0%
mod
 

00:01:05.119 --> 00:01:07.429 align:start position:0%
mod
the<00:01:05.280><c> theme</c><00:01:05.680><c> is</c><00:01:05.840><c> the</c><00:01:06.000><c> future</c><00:01:06.479><c> is</c><00:01:06.640><c> recyclable</c>

00:01:07.429 --> 00:01:07.439 align:start position:0%
the theme is the future is recyclable
 

00:01:07.439 --> 00:01:09.350 align:start position:0%
the theme is the future is recyclable
and<00:01:07.600><c> it</c><00:01:07.760><c> should</c><00:01:08.000><c> be</c><00:01:08.159><c> inspired</c><00:01:08.560><c> by</c><00:01:08.799><c> cyberpunk</c>

00:01:09.350 --> 00:01:09.360 align:start position:0%
and it should be inspired by cyberpunk
 

00:01:09.360 --> 00:01:11.190 align:start position:0%
and it should be inspired by cyberpunk
which<00:01:09.520><c> has</c><00:01:09.760><c> countless</c><00:01:10.240><c> sources</c><00:01:10.640><c> of</c><00:01:10.720><c> influence</c>

00:01:11.190 --> 00:01:11.200 align:start position:0%
which has countless sources of influence
 

00:01:11.200 --> 00:01:11.990 align:start position:0%
which has countless sources of influence
for<00:01:11.360><c> the</c><00:01:11.439><c> work</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
for the work
 

00:01:12.000 --> 00:01:14.149 align:start position:0%
for the work
the<00:01:12.159><c> contest</c><00:01:12.720><c> ends</c><00:01:12.880><c> on</c><00:01:13.040><c> may</c><00:01:13.200><c> 17th</c><00:01:14.000><c> and</c>

00:01:14.149 --> 00:01:14.159 align:start position:0%
the contest ends on may 17th and
 

00:01:14.159 --> 00:01:15.670 align:start position:0%
the contest ends on may 17th and
cyberpunk's<00:01:14.799><c> team</c><00:01:14.960><c> will</c><00:01:15.119><c> select</c><00:01:15.439><c> five</c>

00:01:15.670 --> 00:01:15.680 align:start position:0%
cyberpunk's team will select five
 

00:01:15.680 --> 00:01:17.429 align:start position:0%
cyberpunk's team will select five
winners<00:01:16.000><c> to</c><00:01:16.080><c> partner</c><00:01:16.400><c> with</c><00:01:16.560><c> pro</c><00:01:16.799><c> case</c><00:01:17.119><c> modders</c>

00:01:17.429 --> 00:01:17.439 align:start position:0%
winners to partner with pro case modders
 

00:01:17.439 --> 00:01:18.710 align:start position:0%
winners to partner with pro case modders
to<00:01:17.600><c> make</c><00:01:17.759><c> it</c><00:01:17.840><c> a</c><00:01:17.920><c> reality</c>

00:01:18.710 --> 00:01:18.720 align:start position:0%
to make it a reality
 

00:01:18.720 --> 00:01:20.310 align:start position:0%
to make it a reality
use<00:01:19.040><c> any</c><00:01:19.280><c> tools</c><00:01:19.520><c> you</c><00:01:19.680><c> want</c><00:01:19.920><c> to</c><00:01:20.000><c> make</c><00:01:20.159><c> the</c>

00:01:20.310 --> 00:01:20.320 align:start position:0%
use any tools you want to make the
 

00:01:20.320 --> 00:01:22.390 align:start position:0%
use any tools you want to make the
mock-up<00:01:20.720><c> of</c><00:01:20.880><c> a</c><00:01:20.960><c> cyberpunk-themed</c><00:01:21.840><c> build</c>

00:01:22.390 --> 00:01:22.400 align:start position:0%
mock-up of a cyberpunk-themed build
 

00:01:22.400 --> 00:01:24.870 align:start position:0%
mock-up of a cyberpunk-themed build
featuring<00:01:22.880><c> e-waste</c><00:01:23.360><c> or</c><00:01:23.600><c> recycled</c><00:01:24.080><c> materials</c>

00:01:24.870 --> 00:01:24.880 align:start position:0%
featuring e-waste or recycled materials
 

00:01:24.880 --> 00:01:26.710 align:start position:0%
featuring e-waste or recycled materials
and<00:01:24.960><c> then</c><00:01:25.200><c> submit</c><00:01:25.520><c> images</c><00:01:25.920><c> to</c><00:01:26.000><c> the</c><00:01:26.159><c> team</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
and then submit images to the team
 

00:01:26.720 --> 00:01:28.469 align:start position:0%
and then submit images to the team
learn<00:01:26.960><c> more</c><00:01:27.200><c> and</c><00:01:27.360><c> enter</c><00:01:27.600><c> the</c><00:01:27.759><c> contest</c><00:01:28.240><c> using</c>

00:01:28.469 --> 00:01:28.479 align:start position:0%
learn more and enter the contest using
 

00:01:28.479 --> 00:01:29.990 align:start position:0%
learn more and enter the contest using
the<00:01:28.560><c> link</c><00:01:28.799><c> in</c><00:01:28.880><c> the</c><00:01:28.960><c> description</c><00:01:29.360><c> below</c>

00:01:29.990 --> 00:01:30.000 align:start position:0%
the link in the description below
 

00:01:30.000 --> 00:01:33.270 align:start position:0%
the link in the description below
or<00:01:30.320><c> go</c><00:01:30.479><c> to</c><00:01:30.759><c> cyberpunk.net</c><00:01:32.240><c> cyberup</c><00:01:32.960><c> this</c><00:01:33.119><c> is</c>

00:01:33.270 --> 00:01:33.280 align:start position:0%
or go to cyberpunk.net cyberup this is
 

00:01:33.280 --> 00:01:36.230 align:start position:0%
or go to cyberpunk.net cyberup this is
following<00:01:33.680><c> up</c><00:01:33.840><c> on</c><00:01:34.079><c> our</c><00:01:34.320><c> r3</c><00:01:34.720><c> 3100</c><00:01:35.280><c> and</c><00:01:35.439><c> 3300x</c>

00:01:36.230 --> 00:01:36.240 align:start position:0%
following up on our r3 3100 and 3300x
 

00:01:36.240 --> 00:01:36.789 align:start position:0%
following up on our r3 3100 and 3300x
reviews

00:01:36.789 --> 00:01:36.799 align:start position:0%
reviews
 

00:01:36.799 --> 00:01:38.550 align:start position:0%
reviews
set<00:01:36.960><c> at</c><00:01:37.040><c> the</c><00:01:37.119><c> same</c><00:01:37.360><c> clocks</c><00:01:37.680><c> we</c><00:01:37.840><c> used</c><00:01:38.000><c> 4.4</c>

00:01:38.550 --> 00:01:38.560 align:start position:0%
set at the same clocks we used 4.4
 

00:01:38.560 --> 00:01:40.469 align:start position:0%
set at the same clocks we used 4.4
gigahertz<00:01:39.119><c> and</c><00:01:39.200><c> we</c><00:01:39.360><c> changed</c><00:01:39.759><c> nothing</c><00:01:40.079><c> else</c>

00:01:40.469 --> 00:01:40.479 align:start position:0%
gigahertz and we changed nothing else
 

00:01:40.479 --> 00:01:42.550 align:start position:0%
gigahertz and we changed nothing else
so<00:01:40.640><c> they</c><00:01:40.799><c> kept</c><00:01:41.119><c> exactly</c><00:01:41.520><c> the</c><00:01:41.680><c> same</c><00:01:41.920><c> memory</c>

00:01:42.550 --> 00:01:42.560 align:start position:0%
so they kept exactly the same memory
 

00:01:42.560 --> 00:01:43.510 align:start position:0%
so they kept exactly the same memory
same<00:01:42.880><c> timings</c>

00:01:43.510 --> 00:01:43.520 align:start position:0%
same timings
 

00:01:43.520 --> 00:01:46.149 align:start position:0%
same timings
same<00:01:43.840><c> frequency</c><00:01:44.799><c> everything</c><00:01:45.360><c> same</c><00:01:45.759><c> infinity</c>

00:01:46.149 --> 00:01:46.159 align:start position:0%
same frequency everything same infinity
 

00:01:46.159 --> 00:01:46.630 align:start position:0%
same frequency everything same infinity
fabric

00:01:46.630 --> 00:01:46.640 align:start position:0%
fabric
 

00:01:46.640 --> 00:01:49.510 align:start position:0%
fabric
the<00:01:46.799><c> only</c><00:01:47.040><c> change</c><00:01:47.200><c> was</c><00:01:47.360><c> in</c><00:01:47.520><c> all</c><00:01:47.680><c> core</c><00:01:47.920><c> oc</c><00:01:48.960><c> that</c>

00:01:49.510 --> 00:01:49.520 align:start position:0%
the only change was in all core oc that
 

00:01:49.520 --> 00:01:51.030 align:start position:0%
the only change was in all core oc that
brought<00:01:49.759><c> them</c><00:01:49.920><c> up</c><00:01:50.000><c> to</c><00:01:50.159><c> 4</c><00:01:50.399><c> 4.</c>

00:01:51.030 --> 00:01:51.040 align:start position:0%
brought them up to 4 4.
 

00:01:51.040 --> 00:01:52.950 align:start position:0%
brought them up to 4 4.
and<00:01:51.600><c> the</c><00:01:51.840><c> end</c><00:01:52.000><c> result</c><00:01:52.320><c> was</c><00:01:52.479><c> that</c><00:01:52.640><c> there</c><00:01:52.720><c> was</c>

00:01:52.950 --> 00:01:52.960 align:start position:0%
and the end result was that there was
 

00:01:52.960 --> 00:01:54.069 align:start position:0%
and the end result was that there was
actually<00:01:53.200><c> a</c><00:01:53.280><c> pretty</c><00:01:53.520><c> substantial</c>

00:01:54.069 --> 00:01:54.079 align:start position:0%
actually a pretty substantial
 

00:01:54.079 --> 00:01:55.990 align:start position:0%
actually a pretty substantial
difference<00:01:54.399><c> between</c><00:01:54.720><c> the</c><00:01:54.880><c> two</c><00:01:55.520><c> and</c><00:01:55.759><c> that</c>

00:01:55.990 --> 00:01:56.000 align:start position:0%
difference between the two and that
 

00:01:56.000 --> 00:01:57.190 align:start position:0%
difference between the two and that
difference<00:01:56.799><c> is</c>

00:01:57.190 --> 00:01:57.200 align:start position:0%
difference is
 

00:01:57.200 --> 00:01:59.350 align:start position:0%
difference is
thanks<00:01:57.439><c> to</c><00:01:57.600><c> the</c><00:01:57.840><c> four</c><00:01:58.159><c> plus</c><00:01:58.560><c> zero</c><00:01:59.119><c> core</c>

00:01:59.350 --> 00:01:59.360 align:start position:0%
thanks to the four plus zero core
 

00:01:59.360 --> 00:02:01.990 align:start position:0%
thanks to the four plus zero core
configuration<00:02:00.159><c> on</c><00:02:00.399><c> a</c><00:02:00.640><c> single</c><00:02:01.040><c> ccx</c>

00:02:01.990 --> 00:02:02.000 align:start position:0%
configuration on a single ccx
 

00:02:02.000 --> 00:02:04.149 align:start position:0%
configuration on a single ccx
as<00:02:02.159><c> opposed</c><00:02:02.479><c> to</c><00:02:02.640><c> a</c><00:02:02.799><c> two</c><00:02:03.040><c> plus</c><00:02:03.280><c> two</c><00:02:03.920><c> core</c>

00:02:04.149 --> 00:02:04.159 align:start position:0%
as opposed to a two plus two core
 

00:02:04.159 --> 00:02:05.350 align:start position:0%
as opposed to a two plus two core
configuration

00:02:05.350 --> 00:02:05.360 align:start position:0%
configuration
 

00:02:05.360 --> 00:02:08.389 align:start position:0%
configuration
on<00:02:06.000><c> uh</c><00:02:06.240><c> two</c><00:02:06.479><c> ccx's</c><00:02:07.200><c> for</c><00:02:07.360><c> the</c><00:02:07.439><c> 3100</c>

00:02:08.389 --> 00:02:08.399 align:start position:0%
on uh two ccx's for the 3100
 

00:02:08.399 --> 00:02:10.869 align:start position:0%
on uh two ccx's for the 3100
so<00:02:08.720><c> splitting</c><00:02:09.039><c> them</c><00:02:09.280><c> apart</c><00:02:09.599><c> like</c><00:02:09.759><c> that</c><00:02:10.560><c> adds</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
so splitting them apart like that adds
 

00:02:10.879 --> 00:02:11.910 align:start position:0%
so splitting them apart like that adds
some<00:02:11.120><c> latency</c>

00:02:11.910 --> 00:02:11.920 align:start position:0%
some latency
 

00:02:11.920 --> 00:02:14.309 align:start position:0%
some latency
where<00:02:12.080><c> you</c><00:02:12.160><c> have</c><00:02:12.319><c> ccx</c><00:02:12.959><c> to</c><00:02:13.120><c> ccx</c><00:02:13.680><c> latency</c>

00:02:14.309 --> 00:02:14.319 align:start position:0%
where you have ccx to ccx latency
 

00:02:14.319 --> 00:02:16.630 align:start position:0%
where you have ccx to ccx latency
there's<00:02:14.640><c> also</c><00:02:14.959><c> an</c><00:02:15.120><c> additional</c><00:02:15.599><c> interesting</c>

00:02:16.630 --> 00:02:16.640 align:start position:0%
there's also an additional interesting
 

00:02:16.640 --> 00:02:18.470 align:start position:0%
there's also an additional interesting
point<00:02:16.879><c> of</c><00:02:16.959><c> consideration</c><00:02:17.680><c> where</c><00:02:18.080><c> now</c><00:02:18.239><c> you're</c>

00:02:18.470 --> 00:02:18.480 align:start position:0%
point of consideration where now you're
 

00:02:18.480 --> 00:02:19.990 align:start position:0%
point of consideration where now you're
splitting<00:02:18.879><c> the</c><00:02:19.040><c> cache</c><00:02:19.520><c> too</c>

00:02:19.990 --> 00:02:20.000 align:start position:0%
splitting the cache too
 

00:02:20.000 --> 00:02:21.670 align:start position:0%
splitting the cache too
so<00:02:20.160><c> you</c><00:02:20.400><c> no</c><00:02:20.560><c> longer</c><00:02:20.879><c> do</c><00:02:21.040><c> you</c><00:02:21.120><c> have</c><00:02:21.360><c> all</c><00:02:21.520><c> the</c>

00:02:21.670 --> 00:02:21.680 align:start position:0%
so you no longer do you have all the
 

00:02:21.680 --> 00:02:23.510 align:start position:0%
so you no longer do you have all the
cash<00:02:22.000><c> on</c><00:02:22.160><c> a</c><00:02:22.239><c> single</c><00:02:22.560><c> ccx</c>

00:02:23.510 --> 00:02:23.520 align:start position:0%
cash on a single ccx
 

00:02:23.520 --> 00:02:25.910 align:start position:0%
cash on a single ccx
you<00:02:23.680><c> have</c><00:02:23.840><c> it</c><00:02:24.239><c> across</c><00:02:24.640><c> both</c><00:02:24.879><c> of</c><00:02:24.959><c> them</c><00:02:25.360><c> so</c><00:02:25.599><c> now</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
you have it across both of them so now
 

00:02:25.920 --> 00:02:28.470 align:start position:0%
you have it across both of them so now
if<00:02:26.080><c> you</c><00:02:26.160><c> have</c><00:02:26.480><c> cores</c><00:02:26.879><c> working</c><00:02:27.200><c> in</c><00:02:27.360><c> ccx</c>

00:02:28.470 --> 00:02:28.480 align:start position:0%
if you have cores working in ccx
 

00:02:28.480 --> 00:02:29.990 align:start position:0%
if you have cores working in ccx
one<00:02:28.959><c> and</c><00:02:29.040><c> they</c><00:02:29.200><c> need</c><00:02:29.360><c> to</c><00:02:29.440><c> get</c><00:02:29.599><c> something</c><00:02:29.840><c> out</c>

00:02:29.990 --> 00:02:30.000 align:start position:0%
one and they need to get something out
 

00:02:30.000 --> 00:02:31.750 align:start position:0%
one and they need to get something out
of<00:02:30.080><c> cash</c><00:02:30.400><c> and</c><00:02:30.560><c> ccx2</c>

00:02:31.750 --> 00:02:31.760 align:start position:0%
of cash and ccx2
 

00:02:31.760 --> 00:02:33.430 align:start position:0%
of cash and ccx2
there's<00:02:32.080><c> going</c><00:02:32.239><c> to</c><00:02:32.319><c> be</c><00:02:32.800><c> an</c><00:02:32.959><c> additional</c>

00:02:33.430 --> 00:02:33.440 align:start position:0%
there's going to be an additional
 

00:02:33.440 --> 00:02:35.350 align:start position:0%
there's going to be an additional
latency<00:02:33.920><c> hit</c><00:02:34.319><c> and</c><00:02:34.480><c> that's</c><00:02:34.720><c> the</c><00:02:34.800><c> penalty</c><00:02:35.200><c> that</c>

00:02:35.350 --> 00:02:35.360 align:start position:0%
latency hit and that's the penalty that
 

00:02:35.360 --> 00:02:37.110 align:start position:0%
latency hit and that's the penalty that
we're<00:02:35.519><c> trying</c><00:02:35.760><c> to</c><00:02:35.920><c> see</c><00:02:36.160><c> if</c><00:02:36.319><c> we</c><00:02:36.480><c> can</c>

00:02:37.110 --> 00:02:37.120 align:start position:0%
we're trying to see if we can
 

00:02:37.120 --> 00:02:39.270 align:start position:0%
we're trying to see if we can
overcome<00:02:37.680><c> by</c><00:02:38.319><c> overclocking</c><00:02:38.879><c> some</c><00:02:39.040><c> other</c>

00:02:39.270 --> 00:02:39.280 align:start position:0%
overcome by overclocking some other
 

00:02:39.280 --> 00:02:40.790 align:start position:0%
overcome by overclocking some other
things<00:02:39.519><c> in</c><00:02:39.599><c> the</c><00:02:39.680><c> system</c><00:02:40.000><c> to</c><00:02:40.160><c> see</c><00:02:40.400><c> really</c><00:02:40.640><c> how</c>

00:02:40.790 --> 00:02:40.800 align:start position:0%
things in the system to see really how
 

00:02:40.800 --> 00:02:42.470 align:start position:0%
things in the system to see really how
much<00:02:40.879><c> does</c><00:02:41.040><c> that</c><00:02:41.200><c> latency</c><00:02:41.599><c> impact</c><00:02:42.000><c> matter</c><00:02:42.319><c> and</c>

00:02:42.470 --> 00:02:42.480 align:start position:0%
much does that latency impact matter and
 

00:02:42.480 --> 00:02:44.150 align:start position:0%
much does that latency impact matter and
just<00:02:42.640><c> for</c><00:02:42.800><c> those</c><00:02:43.040><c> who</c><00:02:43.200><c> did</c><00:02:43.440><c> miss</c><00:02:43.680><c> the</c><00:02:43.760><c> reviews</c>

00:02:44.150 --> 00:02:44.160 align:start position:0%
just for those who did miss the reviews
 

00:02:44.160 --> 00:02:46.550 align:start position:0%
just for those who did miss the reviews
to<00:02:44.319><c> really</c><00:02:44.480><c> recap</c><00:02:44.879><c> the</c><00:02:45.040><c> most</c><00:02:45.280><c> important</c><00:02:45.680><c> point</c>

00:02:46.550 --> 00:02:46.560 align:start position:0%
to really recap the most important point
 

00:02:46.560 --> 00:02:48.550 align:start position:0%
to really recap the most important point
what<00:02:46.720><c> we</c><00:02:46.879><c> were</c><00:02:46.959><c> trying</c><00:02:47.200><c> to</c><00:02:47.280><c> point</c><00:02:47.519><c> out</c><00:02:47.760><c> is</c><00:02:47.920><c> that</c>

00:02:48.550 --> 00:02:48.560 align:start position:0%
what we were trying to point out is that
 

00:02:48.560 --> 00:02:49.990 align:start position:0%
what we were trying to point out is that
it's<00:02:48.800><c> not</c><00:02:48.959><c> like</c><00:02:49.200><c> the</c><00:02:49.280><c> 3600</c>

00:02:49.990 --> 00:02:50.000 align:start position:0%
it's not like the 3600
 

00:02:50.000 --> 00:02:52.229 align:start position:0%
it's not like the 3600
and<00:02:50.080><c> 3600</c><00:02:50.720><c> x</c><00:02:50.879><c> where</c><00:02:51.040><c> you're</c><00:02:51.120><c> paying</c><00:02:51.440><c> 50</c><00:02:52.000><c> for</c><00:02:52.160><c> a</c>

00:02:52.229 --> 00:02:52.239 align:start position:0%
and 3600 x where you're paying 50 for a
 

00:02:52.239 --> 00:02:54.710 align:start position:0%
and 3600 x where you're paying 50 for a
letter<00:02:52.560><c> that</c><00:02:52.800><c> effectively</c><00:02:53.280><c> means</c><00:02:53.599><c> nothing</c>

00:02:54.710 --> 00:02:54.720 align:start position:0%
letter that effectively means nothing
 

00:02:54.720 --> 00:02:56.949 align:start position:0%
letter that effectively means nothing
it's<00:02:54.959><c> actually</c><00:02:55.280><c> configured</c><00:02:55.760><c> differently</c><00:02:56.800><c> on</c>

00:02:56.949 --> 00:02:56.959 align:start position:0%
it's actually configured differently on
 

00:02:56.959 --> 00:02:58.149 align:start position:0%
it's actually configured differently on
a<00:02:57.120><c> silicon</c><00:02:57.599><c> level</c>

00:02:58.149 --> 00:02:58.159 align:start position:0%
a silicon level
 

00:02:58.159 --> 00:03:00.790 align:start position:0%
a silicon level
so<00:02:58.640><c> you</c><00:02:58.800><c> can't</c><00:02:58.959><c> just</c><00:02:59.120><c> buy</c><00:02:59.360><c> the</c><00:02:59.440><c> 3100</c><00:03:00.319><c> clock</c><00:03:00.640><c> it</c>

00:03:00.790 --> 00:03:00.800 align:start position:0%
so you can't just buy the 3100 clock it
 

00:03:00.800 --> 00:03:02.470 align:start position:0%
so you can't just buy the 3100 clock it
up<00:03:01.040><c> and</c><00:03:01.280><c> save</c><00:03:01.519><c> 20</c><00:03:01.760><c> bucks</c><00:03:02.000><c> doesn't</c><00:03:02.159><c> work</c><00:03:02.319><c> that</c>

00:03:02.470 --> 00:03:02.480 align:start position:0%
up and save 20 bucks doesn't work that
 

00:03:02.480 --> 00:03:03.190 align:start position:0%
up and save 20 bucks doesn't work that
way<00:03:02.640><c> this</c><00:03:02.800><c> time</c>

00:03:03.190 --> 00:03:03.200 align:start position:0%
way this time
 

00:03:03.200 --> 00:03:05.190 align:start position:0%
way this time
all<00:03:03.360><c> right</c><00:03:03.440><c> so</c><00:03:03.599><c> what</c><00:03:03.760><c> we</c><00:03:04.000><c> did</c><00:03:04.480><c> the</c><00:03:04.720><c> simplest</c>

00:03:05.190 --> 00:03:05.200 align:start position:0%
all right so what we did the simplest
 

00:03:05.200 --> 00:03:06.309 align:start position:0%
all right so what we did the simplest
answer<00:03:05.920><c> to</c>

00:03:06.309 --> 00:03:06.319 align:start position:0%
answer to
 

00:03:06.319 --> 00:03:07.910 align:start position:0%
answer to
do<00:03:06.480><c> something</c><00:03:06.800><c> other</c><00:03:06.959><c> than</c><00:03:07.200><c> core</c><00:03:07.440><c> is</c><00:03:07.519><c> to</c><00:03:07.680><c> raise</c>

00:03:07.910 --> 00:03:07.920 align:start position:0%
do something other than core is to raise
 

00:03:07.920 --> 00:03:09.910 align:start position:0%
do something other than core is to raise
infinity<00:03:08.319><c> fabric</c><00:03:08.800><c> we</c><00:03:08.959><c> have</c><00:03:09.200><c> a</c><00:03:09.280><c> whole</c><00:03:09.519><c> separate</c>

00:03:09.910 --> 00:03:09.920 align:start position:0%
infinity fabric we have a whole separate
 

00:03:09.920 --> 00:03:10.550 align:start position:0%
infinity fabric we have a whole separate
piece

00:03:10.550 --> 00:03:10.560 align:start position:0%
piece
 

00:03:10.560 --> 00:03:12.390 align:start position:0%
piece
on<00:03:10.959><c> infinity</c><00:03:11.440><c> fabric</c><00:03:11.920><c> and</c><00:03:12.080><c> memory</c>

00:03:12.390 --> 00:03:12.400 align:start position:0%
on infinity fabric and memory
 

00:03:12.400 --> 00:03:14.309 align:start position:0%
on infinity fabric and memory
overclocking<00:03:13.040><c> tuning</c><00:03:13.519><c> all</c><00:03:13.599><c> kinds</c><00:03:13.840><c> of</c><00:03:14.000><c> timing</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
overclocking tuning all kinds of timing
 

00:03:14.319 --> 00:03:15.110 align:start position:0%
overclocking tuning all kinds of timing
benchmarks

00:03:15.110 --> 00:03:15.120 align:start position:0%
benchmarks
 

00:03:15.120 --> 00:03:16.790 align:start position:0%
benchmarks
it<00:03:15.280><c> was</c><00:03:15.680><c> really</c><00:03:15.920><c> in</c><00:03:16.000><c> depth</c><00:03:16.319><c> with</c><00:03:16.560><c> a</c><00:03:16.640><c> whole</c>

00:03:16.790 --> 00:03:16.800 align:start position:0%
it was really in depth with a whole
 

00:03:16.800 --> 00:03:18.149 align:start position:0%
it was really in depth with a whole
bunch<00:03:16.959><c> of</c><00:03:17.040><c> different</c><00:03:17.280><c> memory</c><00:03:17.599><c> kits</c>

00:03:18.149 --> 00:03:18.159 align:start position:0%
bunch of different memory kits
 

00:03:18.159 --> 00:03:19.910 align:start position:0%
bunch of different memory kits
and<00:03:18.319><c> we</c><00:03:18.480><c> did</c><00:03:18.640><c> that</c><00:03:18.879><c> last</c><00:03:19.200><c> year</c><00:03:19.360><c> with</c><00:03:19.519><c> the</c><00:03:19.599><c> ryzen</c>

00:03:19.910 --> 00:03:19.920 align:start position:0%
and we did that last year with the ryzen
 

00:03:19.920 --> 00:03:21.430 align:start position:0%
and we did that last year with the ryzen
3000<00:03:20.319><c> series</c><00:03:20.640><c> launch</c>

00:03:21.430 --> 00:03:21.440 align:start position:0%
3000 series launch
 

00:03:21.440 --> 00:03:23.190 align:start position:0%
3000 series launch
that<00:03:21.840><c> those</c><00:03:22.159><c> numbers</c><00:03:22.480><c> that</c><00:03:22.720><c> scaling</c><00:03:23.120><c> that</c>

00:03:23.190 --> 00:03:23.200 align:start position:0%
that those numbers that scaling that
 

00:03:23.200 --> 00:03:24.949 align:start position:0%
that those numbers that scaling that
hasn't<00:03:23.519><c> changed</c><00:03:24.000><c> so</c><00:03:24.159><c> you</c><00:03:24.319><c> can</c><00:03:24.400><c> check</c><00:03:24.640><c> that</c>

00:03:24.949 --> 00:03:24.959 align:start position:0%
hasn't changed so you can check that
 

00:03:24.959 --> 00:03:26.309 align:start position:0%
hasn't changed so you can check that
content<00:03:25.360><c> out</c><00:03:25.519><c> we'll</c><00:03:25.760><c> try</c><00:03:25.920><c> to</c><00:03:26.000><c> remember</c><00:03:26.239><c> to</c>

00:03:26.309 --> 00:03:26.319 align:start position:0%
content out we'll try to remember to
 

00:03:26.319 --> 00:03:28.149 align:start position:0%
content out we'll try to remember to
link<00:03:26.480><c> it</c><00:03:26.560><c> below</c><00:03:27.280><c> if</c><00:03:27.440><c> you</c><00:03:27.519><c> want</c><00:03:27.680><c> to</c><00:03:27.760><c> learn</c><00:03:28.000><c> more</c>

00:03:28.149 --> 00:03:28.159 align:start position:0%
link it below if you want to learn more
 

00:03:28.159 --> 00:03:29.030 align:start position:0%
link it below if you want to learn more
about<00:03:28.400><c> that</c>

00:03:29.030 --> 00:03:29.040 align:start position:0%
about that
 

00:03:29.040 --> 00:03:30.630 align:start position:0%
about that
but<00:03:29.280><c> we're</c><00:03:29.519><c> taking</c><00:03:29.840><c> those</c><00:03:30.080><c> concepts</c><00:03:30.560><c> and</c>

00:03:30.630 --> 00:03:30.640 align:start position:0%
but we're taking those concepts and
 

00:03:30.640 --> 00:03:32.390 align:start position:0%
but we're taking those concepts and
bringing<00:03:30.879><c> them</c><00:03:31.040><c> forward</c><00:03:31.280><c> to</c><00:03:31.360><c> this</c><00:03:31.519><c> content</c>

00:03:32.390 --> 00:03:32.400 align:start position:0%
bringing them forward to this content
 

00:03:32.400 --> 00:03:34.390 align:start position:0%
bringing them forward to this content
and<00:03:33.200><c> the</c><00:03:33.280><c> first</c><00:03:33.519><c> thing</c><00:03:33.680><c> we</c><00:03:33.760><c> did</c><00:03:33.920><c> was</c><00:03:34.080><c> keep</c><00:03:34.319><c> the</c>

00:03:34.390 --> 00:03:34.400 align:start position:0%
and the first thing we did was keep the
 

00:03:34.400 --> 00:03:36.229 align:start position:0%
and the first thing we did was keep the
4<00:03:34.560><c> 4</c><00:03:34.799><c> gigahertz</c><00:03:35.200><c> cpu</c><00:03:35.519><c> overclock</c><00:03:36.000><c> from</c><00:03:36.159><c> the</c>

00:03:36.229 --> 00:03:36.239 align:start position:0%
4 4 gigahertz cpu overclock from the
 

00:03:36.239 --> 00:03:37.589 align:start position:0%
4 4 gigahertz cpu overclock from the
review<00:03:36.640><c> unchanged</c>

00:03:37.589 --> 00:03:37.599 align:start position:0%
review unchanged
 

00:03:37.599 --> 00:03:40.070 align:start position:0%
review unchanged
and<00:03:37.760><c> we</c><00:03:38.000><c> added</c><00:03:38.239><c> an</c><00:03:38.480><c> 1866</c><00:03:39.200><c> megahertz</c><00:03:39.680><c> infinity</c>

00:03:40.070 --> 00:03:40.080 align:start position:0%
and we added an 1866 megahertz infinity
 

00:03:40.080 --> 00:03:41.270 align:start position:0%
and we added an 1866 megahertz infinity
fabric<00:03:40.400><c> overclock</c><00:03:40.799><c> we</c><00:03:40.879><c> couldn't</c><00:03:41.120><c> get</c><00:03:41.200><c> it</c>

00:03:41.270 --> 00:03:41.280 align:start position:0%
fabric overclock we couldn't get it
 

00:03:41.280 --> 00:03:42.470 align:start position:0%
fabric overclock we couldn't get it
higher<00:03:41.519><c> than</c><00:03:41.680><c> that</c><00:03:41.840><c> that</c><00:03:42.000><c> seems</c><00:03:42.159><c> to</c><00:03:42.239><c> be</c><00:03:42.400><c> out</c>

00:03:42.470 --> 00:03:42.480 align:start position:0%
higher than that that seems to be out
 

00:03:42.480 --> 00:03:43.190 align:start position:0%
higher than that that seems to be out
where<00:03:42.640><c> these</c>

00:03:43.190 --> 00:03:43.200 align:start position:0%
where these
 

00:03:43.200 --> 00:03:45.990 align:start position:0%
where these
stop<00:03:43.440><c> being</c><00:03:43.680><c> stable</c><00:03:44.480><c> if</c><00:03:44.640><c> you</c><00:03:44.799><c> went</c><00:03:44.959><c> to</c><00:03:45.120><c> ln2</c><00:03:45.840><c> you</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
stop being stable if you went to ln2 you
 

00:03:46.000 --> 00:03:47.270 align:start position:0%
stop being stable if you went to ln2 you
have<00:03:46.080><c> the</c><00:03:46.239><c> additional</c><00:03:46.640><c> challenge</c><00:03:46.959><c> of</c><00:03:47.040><c> having</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
have the additional challenge of having
 

00:03:47.280 --> 00:03:48.630 align:start position:0%
have the additional challenge of having
to<00:03:47.360><c> bring</c><00:03:47.519><c> down</c><00:03:47.760><c> the</c><00:03:47.840><c> infinity</c><00:03:48.239><c> fabric</c><00:03:48.560><c> to</c>

00:03:48.630 --> 00:03:48.640 align:start position:0%
to bring down the infinity fabric to
 

00:03:48.640 --> 00:03:50.390 align:start position:0%
to bring down the infinity fabric to
something<00:03:48.879><c> like</c><00:03:49.040><c> 1467</c>

00:03:50.390 --> 00:03:50.400 align:start position:0%
something like 1467
 

00:03:50.400 --> 00:03:53.429 align:start position:0%
something like 1467
because<00:03:51.280><c> uh</c><00:03:51.920><c> there's</c><00:03:52.560><c> an</c><00:03:52.720><c> issue</c><00:03:52.959><c> with</c><00:03:53.120><c> cold</c>

00:03:53.429 --> 00:03:53.439 align:start position:0%
because uh there's an issue with cold
 

00:03:53.439 --> 00:03:54.949 align:start position:0%
because uh there's an issue with cold
where<00:03:53.599><c> once</c><00:03:53.840><c> you</c><00:03:53.920><c> go</c><00:03:54.159><c> past</c><00:03:54.480><c> it's</c><00:03:54.720><c> different</c>

00:03:54.949 --> 00:03:54.959 align:start position:0%
where once you go past it's different
 

00:03:54.959 --> 00:03:56.550 align:start position:0%
where once you go past it's different
every<00:03:55.200><c> chip</c><00:03:55.360><c> but</c><00:03:55.439><c> something</c><00:03:55.680><c> like</c><00:03:55.760><c> minus</c><00:03:56.080><c> 90</c>

00:03:56.550 --> 00:03:56.560 align:start position:0%
every chip but something like minus 90
 

00:03:56.560 --> 00:03:59.030 align:start position:0%
every chip but something like minus 90
minus<00:03:56.879><c> 80</c><00:03:57.439><c> you</c><00:03:57.519><c> can't</c><00:03:57.680><c> get</c><00:03:57.840><c> down</c><00:03:58.000><c> to</c><00:03:58.080><c> minus</c><00:03:58.400><c> 150</c>

00:03:59.030 --> 00:03:59.040 align:start position:0%
minus 80 you can't get down to minus 150
 

00:03:59.040 --> 00:03:59.830 align:start position:0%
minus 80 you can't get down to minus 150
without<00:03:59.439><c> dropping</c>

00:03:59.830 --> 00:03:59.840 align:start position:0%
without dropping
 

00:03:59.840 --> 00:04:02.229 align:start position:0%
without dropping
if<00:04:00.239><c> so</c><00:04:01.040><c> that's</c><00:04:01.280><c> a</c><00:04:01.439><c> significant</c><00:04:01.920><c> challenge</c>

00:04:02.229 --> 00:04:02.239 align:start position:0%
if so that's a significant challenge
 

00:04:02.239 --> 00:04:03.509 align:start position:0%
if so that's a significant challenge
that<00:04:02.400><c> will</c><00:04:02.560><c> present</c><00:04:02.799><c> itself</c><00:04:03.120><c> when</c><00:04:03.280><c> we</c><00:04:03.360><c> do</c>

00:04:03.509 --> 00:04:03.519 align:start position:0%
that will present itself when we do
 

00:04:03.519 --> 00:04:04.869 align:start position:0%
that will present itself when we do
eventually<00:04:03.840><c> go</c><00:04:04.000><c> to</c><00:04:04.080><c> ln2</c>

00:04:04.869 --> 00:04:04.879 align:start position:0%
eventually go to ln2
 

00:04:04.879 --> 00:04:07.110 align:start position:0%
eventually go to ln2
but<00:04:05.360><c> moving</c><00:04:05.680><c> on</c><00:04:05.760><c> from</c><00:04:05.920><c> that</c><00:04:06.159><c> we</c><00:04:06.959><c> the</c>

00:04:07.110 --> 00:04:07.120 align:start position:0%
but moving on from that we the
 

00:04:07.120 --> 00:04:08.869 align:start position:0%
but moving on from that we the
difference<00:04:07.439><c> there</c><00:04:07.680><c> was</c><00:04:07.920><c> going</c><00:04:08.159><c> up</c><00:04:08.239><c> from</c><00:04:08.400><c> 1600</c>

00:04:08.869 --> 00:04:08.879 align:start position:0%
difference there was going up from 1600
 

00:04:08.879 --> 00:04:10.550 align:start position:0%
difference there was going up from 1600
megahertz<00:04:09.280><c> to</c><00:04:09.439><c> 1866</c>

00:04:10.550 --> 00:04:10.560 align:start position:0%
megahertz to 1866
 

00:04:10.560 --> 00:04:12.789 align:start position:0%
megahertz to 1866
m<00:04:10.799><c> clock</c><00:04:11.120><c> and</c><00:04:11.200><c> du</c><00:04:11.519><c> clock</c><00:04:11.760><c> were</c><00:04:11.920><c> left</c><00:04:12.239><c> unchanged</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
m clock and du clock were left unchanged
 

00:04:12.799 --> 00:04:14.070 align:start position:0%
m clock and du clock were left unchanged
at<00:04:12.959><c> one</c><00:04:13.200><c> to</c><00:04:13.439><c> one</c>

00:04:14.070 --> 00:04:14.080 align:start position:0%
at one to one
 

00:04:14.080 --> 00:04:16.150 align:start position:0%
at one to one
and<00:04:14.239><c> then</c><00:04:14.480><c> 1600</c><00:04:14.959><c> megahertz</c><00:04:15.680><c> this</c><00:04:15.840><c> doesn't</c>

00:04:16.150 --> 00:04:16.160 align:start position:0%
and then 1600 megahertz this doesn't
 

00:04:16.160 --> 00:04:17.830 align:start position:0%
and then 1600 megahertz this doesn't
require<00:04:16.479><c> much</c><00:04:16.880><c> explanation</c><00:04:17.519><c> we</c>

00:04:17.830 --> 00:04:17.840 align:start position:0%
require much explanation we
 

00:04:17.840 --> 00:04:19.189 align:start position:0%
require much explanation we
basically<00:04:18.160><c> just</c><00:04:18.320><c> boosted</c><00:04:18.639><c> one</c><00:04:18.720><c> number</c><00:04:19.040><c> here</c>

00:04:19.189 --> 00:04:19.199 align:start position:0%
basically just boosted one number here
 

00:04:19.199 --> 00:04:21.189 align:start position:0%
basically just boosted one number here
however<00:04:19.519><c> we</c><00:04:19.759><c> know</c><00:04:20.000><c> from</c><00:04:20.239><c> our</c><00:04:20.400><c> ryzen</c><00:04:20.720><c> 3000</c>

00:04:21.189 --> 00:04:21.199 align:start position:0%
however we know from our ryzen 3000
 

00:04:21.199 --> 00:04:23.030 align:start position:0%
however we know from our ryzen 3000
memory<00:04:21.600><c> overclocking</c><00:04:22.160><c> piece</c><00:04:22.479><c> that</c><00:04:22.720><c> even</c>

00:04:23.030 --> 00:04:23.040 align:start position:0%
memory overclocking piece that even
 

00:04:23.040 --> 00:04:24.390 align:start position:0%
memory overclocking piece that even
better<00:04:23.280><c> performance</c><00:04:23.680><c> can</c><00:04:23.840><c> be</c><00:04:23.919><c> achieved</c><00:04:24.240><c> by</c>

00:04:24.390 --> 00:04:24.400 align:start position:0%
better performance can be achieved by
 

00:04:24.400 --> 00:04:25.749 align:start position:0%
better performance can be achieved by
increasing<00:04:24.880><c> f</c><00:04:25.040><c> clock</c>

00:04:25.749 --> 00:04:25.759 align:start position:0%
increasing f clock
 

00:04:25.759 --> 00:04:28.550 align:start position:0%
increasing f clock
m<00:04:26.000><c> clock</c><00:04:26.400><c> and</c><00:04:26.639><c> u</c><00:04:26.800><c> clock</c><00:04:27.199><c> in</c><00:04:27.360><c> lockstep</c><00:04:28.240><c> as</c><00:04:28.400><c> well</c>

00:04:28.550 --> 00:04:28.560 align:start position:0%
m clock and u clock in lockstep as well
 

00:04:28.560 --> 00:04:30.310 align:start position:0%
m clock and u clock in lockstep as well
as<00:04:28.720><c> optimizing</c><00:04:29.280><c> memory</c><00:04:29.600><c> timings</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
as optimizing memory timings
 

00:04:30.320 --> 00:04:32.230 align:start position:0%
as optimizing memory timings
this<00:04:30.560><c> memory</c><00:04:30.880><c> overclocking</c><00:04:31.520><c> piece</c><00:04:31.840><c> is</c><00:04:32.000><c> still</c>

00:04:32.230 --> 00:04:32.240 align:start position:0%
this memory overclocking piece is still
 

00:04:32.240 --> 00:04:34.390 align:start position:0%
this memory overclocking piece is still
valid<00:04:32.560><c> and</c><00:04:32.720><c> still</c><00:04:32.960><c> accurate</c><00:04:33.360><c> to</c><00:04:33.600><c> scaling</c>

00:04:34.390 --> 00:04:34.400 align:start position:0%
valid and still accurate to scaling
 

00:04:34.400 --> 00:04:35.830 align:start position:0%
valid and still accurate to scaling
so<00:04:34.560><c> again</c><00:04:34.800><c> that'll</c><00:04:35.120><c> be</c><00:04:35.280><c> linked</c><00:04:35.520><c> if</c><00:04:35.600><c> you</c><00:04:35.680><c> want</c>

00:04:35.830 --> 00:04:35.840 align:start position:0%
so again that'll be linked if you want
 

00:04:35.840 --> 00:04:37.830 align:start position:0%
so again that'll be linked if you want
more<00:04:36.080><c> info</c><00:04:36.400><c> we're</c><00:04:36.479><c> not</c><00:04:36.639><c> going</c><00:04:36.720><c> to</c><00:04:36.800><c> go</c><00:04:37.280><c> as</c><00:04:37.520><c> deep</c>

00:04:37.830 --> 00:04:37.840 align:start position:0%
more info we're not going to go as deep
 

00:04:37.840 --> 00:04:38.790 align:start position:0%
more info we're not going to go as deep
into<00:04:38.080><c> it</c><00:04:38.240><c> in</c><00:04:38.320><c> this</c><00:04:38.479><c> piece</c>

00:04:38.790 --> 00:04:38.800 align:start position:0%
into it in this piece
 

00:04:38.800 --> 00:04:40.790 align:start position:0%
into it in this piece
ryzen<00:04:39.120><c> dram</c><00:04:39.520><c> calculator</c><00:04:40.080><c> is</c><00:04:40.240><c> a</c><00:04:40.320><c> well-known</c>

00:04:40.790 --> 00:04:40.800 align:start position:0%
ryzen dram calculator is a well-known
 

00:04:40.800 --> 00:04:42.629 align:start position:0%
ryzen dram calculator is a well-known
and<00:04:40.960><c> accepted</c><00:04:41.440><c> tool</c><00:04:41.680><c> for</c><00:04:41.840><c> memory</c><00:04:42.160><c> tuning</c><00:04:42.479><c> on</c>

00:04:42.629 --> 00:04:42.639 align:start position:0%
and accepted tool for memory tuning on
 

00:04:42.639 --> 00:04:43.990 align:start position:0%
and accepted tool for memory tuning on
ryzen<00:04:43.040><c> at</c><00:04:43.120><c> this</c><00:04:43.280><c> point</c><00:04:43.520><c> so</c>

00:04:43.990 --> 00:04:44.000 align:start position:0%
ryzen at this point so
 

00:04:44.000 --> 00:04:47.510 align:start position:0%
ryzen at this point so
using<00:04:44.520><c> 1.7.0</c><00:04:45.840><c> we</c><00:04:46.080><c> calculated</c><00:04:46.720><c> ideal</c><00:04:47.040><c> settings</c>

00:04:47.510 --> 00:04:47.520 align:start position:0%
using 1.7.0 we calculated ideal settings
 

00:04:47.520 --> 00:04:47.830 align:start position:0%
using 1.7.0 we calculated ideal settings
for

00:04:47.830 --> 00:04:47.840 align:start position:0%
for
 

00:04:47.840 --> 00:04:51.510 align:start position:0%
for
our<00:04:48.560><c> two</c><00:04:48.720><c> sticks</c><00:04:49.280><c> of</c><00:04:49.840><c> eight</c><00:04:50.000><c> gigabyte</c><00:04:50.560><c> 3866</c>

00:04:51.510 --> 00:04:51.520 align:start position:0%
our two sticks of eight gigabyte 3866
 

00:04:51.520 --> 00:04:53.430 align:start position:0%
our two sticks of eight gigabyte 3866
megahertz<00:04:52.000><c> g-skill</c><00:04:52.400><c> trident</c><00:04:52.720><c> z</c><00:04:52.880><c> memory</c><00:04:53.280><c> we</c>

00:04:53.430 --> 00:04:53.440 align:start position:0%
megahertz g-skill trident z memory we
 

00:04:53.440 --> 00:04:55.749 align:start position:0%
megahertz g-skill trident z memory we
used<00:04:53.680><c> the</c><00:04:53.840><c> same</c><00:04:54.080><c> gigabyte</c><00:04:54.479><c> x570</c><00:04:55.199><c> master</c><00:04:55.520><c> board</c>

00:04:55.749 --> 00:04:55.759 align:start position:0%
used the same gigabyte x570 master board
 

00:04:55.759 --> 00:04:57.189 align:start position:0%
used the same gigabyte x570 master board
that<00:04:55.919><c> we</c><00:04:56.080><c> used</c><00:04:56.320><c> in</c><00:04:56.400><c> the</c><00:04:56.479><c> cpu</c><00:04:56.880><c> review</c>

00:04:57.189 --> 00:04:57.199 align:start position:0%
that we used in the cpu review
 

00:04:57.199 --> 00:04:58.870 align:start position:0%
that we used in the cpu review
previously<00:04:57.759><c> so</c><00:04:58.000><c> we'll</c><00:04:58.160><c> be</c><00:04:58.240><c> able</c><00:04:58.400><c> to</c><00:04:58.479><c> compare</c>

00:04:58.870 --> 00:04:58.880 align:start position:0%
previously so we'll be able to compare
 

00:04:58.880 --> 00:05:00.469 align:start position:0%
previously so we'll be able to compare
our<00:04:59.040><c> results</c><00:04:59.440><c> to</c><00:04:59.520><c> the</c><00:04:59.680><c> previously</c><00:05:00.160><c> logged</c>

00:05:00.469 --> 00:05:00.479 align:start position:0%
our results to the previously logged
 

00:05:00.479 --> 00:05:01.110 align:start position:0%
our results to the previously logged
results

00:05:01.110 --> 00:05:01.120 align:start position:0%
results
 

00:05:01.120 --> 00:05:03.909 align:start position:0%
results
although<00:05:01.520><c> we've</c><00:05:01.759><c> found</c><00:05:02.160><c> that</c><00:05:02.720><c> the</c><00:05:02.880><c> msi</c><00:05:03.280><c> x570</c>

00:05:03.909 --> 00:05:03.919 align:start position:0%
although we've found that the msi x570
 

00:05:03.919 --> 00:05:05.430 align:start position:0%
although we've found that the msi x570
godlike<00:05:04.400><c> is</c><00:05:04.479><c> superior</c><00:05:04.960><c> for</c><00:05:05.120><c> memory</c>

00:05:05.430 --> 00:05:05.440 align:start position:0%
godlike is superior for memory
 

00:05:05.440 --> 00:05:06.710 align:start position:0%
godlike is superior for memory
overclocking<00:05:06.080><c> in</c><00:05:06.160><c> general</c>

00:05:06.710 --> 00:05:06.720 align:start position:0%
overclocking in general
 

00:05:06.720 --> 00:05:08.870 align:start position:0%
overclocking in general
the<00:05:06.880><c> 4.4</c><00:05:07.440><c> gigahertz</c><00:05:07.919><c> cpu</c><00:05:08.320><c> overclock</c><00:05:08.720><c> we</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
the 4.4 gigahertz cpu overclock we
 

00:05:08.880 --> 00:05:10.950 align:start position:0%
the 4.4 gigahertz cpu overclock we
tested<00:05:09.280><c> in</c><00:05:09.360><c> the</c><00:05:09.440><c> review</c><00:05:09.680><c> was</c><00:05:09.919><c> left</c><00:05:10.240><c> in</c><00:05:10.400><c> place</c>

00:05:10.950 --> 00:05:10.960 align:start position:0%
tested in the review was left in place
 

00:05:10.960 --> 00:05:13.029 align:start position:0%
tested in the review was left in place
with<00:05:11.199><c> an</c><00:05:11.360><c> unnecessarily</c><00:05:12.240><c> high</c><00:05:12.560><c> but</c><00:05:12.800><c> still</c>

00:05:13.029 --> 00:05:13.039 align:start position:0%
with an unnecessarily high but still
 

00:05:13.039 --> 00:05:15.430 align:start position:0%
with an unnecessarily high but still
thermally<00:05:13.520><c> safe</c><00:05:13.840><c> on</c><00:05:14.000><c> our</c><00:05:14.160><c> bench</c><00:05:14.479><c> vcore</c><00:05:14.960><c> set</c>

00:05:15.430 --> 00:05:15.440 align:start position:0%
thermally safe on our bench vcore set
 

00:05:15.440 --> 00:05:16.950 align:start position:0%
thermally safe on our bench vcore set
to<00:05:15.680><c> ensure</c><00:05:15.919><c> no</c><00:05:16.160><c> instability</c><00:05:16.639><c> from</c><00:05:16.800><c> that</c>

00:05:16.950 --> 00:05:16.960 align:start position:0%
to ensure no instability from that
 

00:05:16.960 --> 00:05:19.350 align:start position:0%
to ensure no instability from that
change<00:05:17.440><c> during</c><00:05:17.840><c> original</c><00:05:18.160><c> testing</c><00:05:18.639><c> our</c><00:05:18.800><c> 3100</c>

00:05:19.350 --> 00:05:19.360 align:start position:0%
change during original testing our 3100
 

00:05:19.360 --> 00:05:21.909 align:start position:0%
change during original testing our 3100
was<00:05:19.600><c> stable</c><00:05:20.080><c> with</c><00:05:20.320><c> a</c><00:05:20.400><c> set</c><00:05:20.639><c> voltage</c><00:05:20.960><c> of</c><00:05:21.039><c> 1.343</c>

00:05:21.909 --> 00:05:21.919 align:start position:0%
was stable with a set voltage of 1.343
 

00:05:21.919 --> 00:05:22.390 align:start position:0%
was stable with a set voltage of 1.343
volts

00:05:22.390 --> 00:05:22.400 align:start position:0%
volts
 

00:05:22.400 --> 00:05:24.310 align:start position:0%
volts
and<00:05:22.560><c> could</c><00:05:22.800><c> perhaps</c><00:05:23.280><c> have</c><00:05:23.440><c> gone</c><00:05:23.680><c> even</c><00:05:23.919><c> lower</c>

00:05:24.310 --> 00:05:24.320 align:start position:0%
and could perhaps have gone even lower
 

00:05:24.320 --> 00:05:25.510 align:start position:0%
and could perhaps have gone even lower
we<00:05:24.400><c> found</c><00:05:24.639><c> that</c><00:05:24.800><c> setting</c><00:05:25.039><c> the</c><00:05:25.120><c> memory</c><00:05:25.360><c> to</c>

00:05:25.510 --> 00:05:25.520 align:start position:0%
we found that setting the memory to
 

00:05:25.520 --> 00:05:28.070 align:start position:0%
we found that setting the memory to
38.66<00:05:26.560><c> megahertz</c><00:05:27.039><c> was</c><00:05:27.120><c> forcing</c><00:05:27.520><c> us</c><00:05:27.680><c> into</c><00:05:27.919><c> two</c>

00:05:28.070 --> 00:05:28.080 align:start position:0%
38.66 megahertz was forcing us into two
 

00:05:28.080 --> 00:05:30.070 align:start position:0%
38.66 megahertz was forcing us into two
to<00:05:28.160><c> one</c><00:05:28.320><c> mode</c><00:05:28.560><c> whether</c><00:05:28.800><c> we</c><00:05:28.960><c> wanted</c><00:05:29.280><c> it</c><00:05:29.440><c> or</c><00:05:29.600><c> not</c>

00:05:30.070 --> 00:05:30.080 align:start position:0%
to one mode whether we wanted it or not
 

00:05:30.080 --> 00:05:31.990 align:start position:0%
to one mode whether we wanted it or not
so<00:05:30.400><c> retaining</c><00:05:30.880><c> these</c><00:05:31.039><c> same</c><00:05:31.280><c> settings</c><00:05:31.600><c> we</c><00:05:31.759><c> down</c>

00:05:31.990 --> 00:05:32.000 align:start position:0%
so retaining these same settings we down
 

00:05:32.000 --> 00:05:34.550 align:start position:0%
so retaining these same settings we down
clocked<00:05:32.400><c> to</c><00:05:32.639><c> 36</c><00:05:33.120><c> 66</c><00:05:33.600><c> megahertz</c>

00:05:34.550 --> 00:05:34.560 align:start position:0%
clocked to 36 66 megahertz
 

00:05:34.560 --> 00:05:37.270 align:start position:0%
clocked to 36 66 megahertz
ddr<00:05:35.120><c> and</c><00:05:35.280><c> successfully</c><00:05:35.840><c> booted</c><00:05:36.560><c> with</c><00:05:36.800><c> a</c><00:05:37.039><c> one</c>

00:05:37.270 --> 00:05:37.280 align:start position:0%
ddr and successfully booted with a one
 

00:05:37.280 --> 00:05:38.469 align:start position:0%
ddr and successfully booted with a one
to<00:05:37.440><c> one</c><00:05:37.600><c> to</c><00:05:37.840><c> one</c>

00:05:38.469 --> 00:05:38.479 align:start position:0%
to one to one
 

00:05:38.479 --> 00:05:39.749 align:start position:0%
to one to one
which<00:05:38.639><c> is</c><00:05:38.720><c> the</c><00:05:38.800><c> most</c><00:05:39.039><c> important</c><00:05:39.360><c> part</c><00:05:39.600><c> for</c>

00:05:39.749 --> 00:05:39.759 align:start position:0%
which is the most important part for
 

00:05:39.759 --> 00:05:41.670 align:start position:0%
which is the most important part for
ryzen<00:05:40.560><c> overclocking</c><00:05:41.199><c> in</c><00:05:41.280><c> this</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
ryzen overclocking in this
 

00:05:41.680 --> 00:05:44.950 align:start position:0%
ryzen overclocking in this
aspect<00:05:42.720><c> 1833</c><00:05:43.600><c> speed</c><00:05:43.840><c> for</c><00:05:44.000><c> infinity</c><00:05:44.400><c> fabric</c>

00:05:44.950 --> 00:05:44.960 align:start position:0%
aspect 1833 speed for infinity fabric
 

00:05:44.960 --> 00:05:46.870 align:start position:0%
aspect 1833 speed for infinity fabric
memory<00:05:45.280><c> clock</c><00:05:45.680><c> and</c><00:05:45.840><c> memory</c><00:05:46.160><c> controller</c><00:05:46.560><c> clock</c>

00:05:46.870 --> 00:05:46.880 align:start position:0%
memory clock and memory controller clock
 

00:05:46.880 --> 00:05:48.790 align:start position:0%
memory clock and memory controller clock
that<00:05:47.199><c> should</c><00:05:47.440><c> give</c><00:05:47.600><c> us</c><00:05:47.759><c> the</c><00:05:47.840><c> best</c><00:05:48.080><c> results</c>

00:05:48.790 --> 00:05:48.800 align:start position:0%
that should give us the best results
 

00:05:48.800 --> 00:05:51.189 align:start position:0%
that should give us the best results
within<00:05:49.199><c> reason</c><00:05:49.759><c> andy's</c><00:05:50.160><c> latest</c><00:05:50.479><c> ryzen</c><00:05:50.800><c> master</c>

00:05:51.189 --> 00:05:51.199 align:start position:0%
within reason andy's latest ryzen master
 

00:05:51.199 --> 00:05:51.990 align:start position:0%
within reason andy's latest ryzen master
guide<00:05:51.520><c> says</c><00:05:51.680><c> that</c>

00:05:51.990 --> 00:05:52.000 align:start position:0%
guide says that
 

00:05:52.000 --> 00:05:55.029 align:start position:0%
guide says that
quote<00:05:53.039><c> above</c><00:05:53.360><c> a</c><00:05:53.520><c> memory</c><00:05:53.840><c> clock</c><00:05:54.160><c> of</c><00:05:54.240><c> 1866</c>

00:05:55.029 --> 00:05:55.039 align:start position:0%
quote above a memory clock of 1866
 

00:05:55.039 --> 00:05:57.110 align:start position:0%
quote above a memory clock of 1866
megahertz<00:05:55.680><c> turning</c><00:05:56.000><c> coupled</c><00:05:56.319><c> mode</c><00:05:56.639><c> off</c>

00:05:57.110 --> 00:05:57.120 align:start position:0%
megahertz turning coupled mode off
 

00:05:57.120 --> 00:05:58.790 align:start position:0%
megahertz turning coupled mode off
and<00:05:57.360><c> setting</c><00:05:57.680><c> fabric</c><00:05:58.000><c> clock</c><00:05:58.319><c> to</c><00:05:58.479><c> half</c><00:05:58.720><c> the</c>

00:05:58.790 --> 00:05:58.800 align:start position:0%
and setting fabric clock to half the
 

00:05:58.800 --> 00:06:00.790 align:start position:0%
and setting fabric clock to half the
memory<00:05:59.120><c> clock</c><00:05:59.600><c> will</c><00:05:59.840><c> likely</c><00:06:00.160><c> be</c><00:06:00.319><c> necessary</c>

00:06:00.790 --> 00:06:00.800 align:start position:0%
memory clock will likely be necessary
 

00:06:00.800 --> 00:06:02.469 align:start position:0%
memory clock will likely be necessary
for<00:06:00.960><c> further</c><00:06:01.280><c> memory</c><00:06:01.600><c> timing</c><00:06:01.919><c> parameter</c>

00:06:02.469 --> 00:06:02.479 align:start position:0%
for further memory timing parameter
 

00:06:02.479 --> 00:06:03.830 align:start position:0%
for further memory timing parameter
optimization

00:06:03.830 --> 00:06:03.840 align:start position:0%
optimization
 

00:06:03.840 --> 00:06:06.309 align:start position:0%
optimization
toward<00:06:04.160><c> system</c><00:06:04.479><c> stability</c><00:06:05.440><c> hence</c><00:06:05.759><c> our</c><00:06:06.000><c> chosen</c>

00:06:06.309 --> 00:06:06.319 align:start position:0%
toward system stability hence our chosen
 

00:06:06.319 --> 00:06:08.309 align:start position:0%
toward system stability hence our chosen
clock<00:06:06.639><c> speed</c><00:06:06.880><c> below</c><00:06:07.120><c> 1866.</c>

00:06:08.309 --> 00:06:08.319 align:start position:0%
clock speed below 1866.
 

00:06:08.319 --> 00:06:10.629 align:start position:0%
clock speed below 1866.
we<00:06:08.560><c> managed</c><00:06:08.960><c> at</c><00:06:09.120><c> 1900</c><00:06:09.840><c> one</c><00:06:10.000><c> to</c><00:06:10.080><c> one</c><00:06:10.240><c> to</c><00:06:10.319><c> one</c><00:06:10.560><c> in</c>

00:06:10.629 --> 00:06:10.639 align:start position:0%
we managed at 1900 one to one to one in
 

00:06:10.639 --> 00:06:12.710 align:start position:0%
we managed at 1900 one to one to one in
the<00:06:10.720><c> original</c><00:06:11.039><c> ryzen</c><00:06:11.360><c> 3000</c><00:06:11.680><c> memory</c><00:06:12.000><c> oc</c><00:06:12.319><c> guide</c>

00:06:12.710 --> 00:06:12.720 align:start position:0%
the original ryzen 3000 memory oc guide
 

00:06:12.720 --> 00:06:13.990 align:start position:0%
the original ryzen 3000 memory oc guide
but<00:06:12.880><c> that</c><00:06:13.039><c> was</c><00:06:13.120><c> a</c><00:06:13.199><c> different</c><00:06:13.440><c> cpu</c>

00:06:13.990 --> 00:06:14.000 align:start position:0%
but that was a different cpu
 

00:06:14.000 --> 00:06:15.590 align:start position:0%
but that was a different cpu
different<00:06:14.240><c> motherboard</c><00:06:14.880><c> and</c><00:06:15.039><c> mileage</c><00:06:15.440><c> may</c>

00:06:15.590 --> 00:06:15.600 align:start position:0%
different motherboard and mileage may
 

00:06:15.600 --> 00:06:17.670 align:start position:0%
different motherboard and mileage may
vary<00:06:16.000><c> okay</c><00:06:16.240><c> enough</c><00:06:16.560><c> explaining</c><00:06:16.960><c> the</c><00:06:17.120><c> testing</c>

00:06:17.670 --> 00:06:17.680 align:start position:0%
vary okay enough explaining the testing
 

00:06:17.680 --> 00:06:19.029 align:start position:0%
vary okay enough explaining the testing
we'll<00:06:18.000><c> get</c><00:06:18.160><c> into</c><00:06:18.400><c> the</c>

00:06:19.029 --> 00:06:19.039 align:start position:0%
we'll get into the
 

00:06:19.039 --> 00:06:21.430 align:start position:0%
we'll get into the
actual<00:06:19.600><c> benchmarks</c><00:06:20.160><c> now</c><00:06:20.479><c> and</c><00:06:20.720><c> another</c><00:06:21.120><c> final</c>

00:06:21.430 --> 00:06:21.440 align:start position:0%
actual benchmarks now and another final
 

00:06:21.440 --> 00:06:22.309 align:start position:0%
actual benchmarks now and another final
note<00:06:21.680><c> here</c>

00:06:22.309 --> 00:06:22.319 align:start position:0%
note here
 

00:06:22.319 --> 00:06:24.230 align:start position:0%
note here
that<00:06:22.800><c> we're</c><00:06:22.960><c> trying</c><00:06:23.199><c> to</c><00:06:23.280><c> look</c><00:06:23.520><c> at</c><00:06:23.919><c> can</c><00:06:24.160><c> the</c>

00:06:24.230 --> 00:06:24.240 align:start position:0%
that we're trying to look at can the
 

00:06:24.240 --> 00:06:27.029 align:start position:0%
that we're trying to look at can the
3100<00:06:25.120><c> meet</c><00:06:25.280><c> the</c><00:06:25.440><c> 3300x</c><00:06:26.400><c> so</c><00:06:26.639><c> we're</c><00:06:26.800><c> going</c><00:06:26.960><c> to</c>

00:06:27.029 --> 00:06:27.039 align:start position:0%
3100 meet the 3300x so we're going to
 

00:06:27.039 --> 00:06:28.870 align:start position:0%
3100 meet the 3300x so we're going to
focus<00:06:27.360><c> on</c><00:06:27.520><c> some</c><00:06:27.680><c> of</c><00:06:27.759><c> the</c><00:06:28.000><c> games</c><00:06:28.240><c> and</c><00:06:28.319><c> scenarios</c>

00:06:28.870 --> 00:06:28.880 align:start position:0%
focus on some of the games and scenarios
 

00:06:28.880 --> 00:06:29.350 align:start position:0%
focus on some of the games and scenarios
where

00:06:29.350 --> 00:06:29.360 align:start position:0%
where
 

00:06:29.360 --> 00:06:31.029 align:start position:0%
where
the<00:06:29.520><c> gap</c><00:06:29.759><c> was</c><00:06:29.919><c> wider</c><00:06:30.319><c> we</c><00:06:30.479><c> have</c><00:06:30.560><c> a</c><00:06:30.639><c> couple</c><00:06:30.960><c> in</c>

00:06:31.029 --> 00:06:31.039 align:start position:0%
the gap was wider we have a couple in
 

00:06:31.039 --> 00:06:32.070 align:start position:0%
the gap was wider we have a couple in
there<00:06:31.199><c> where</c><00:06:31.360><c> it's</c><00:06:31.440><c> smaller</c><00:06:31.840><c> like</c>

00:06:32.070 --> 00:06:32.080 align:start position:0%
there where it's smaller like
 

00:06:32.080 --> 00:06:33.430 align:start position:0%
there where it's smaller like
civilization<00:06:32.800><c> 6</c>

00:06:33.430 --> 00:06:33.440 align:start position:0%
civilization 6
 

00:06:33.440 --> 00:06:35.749 align:start position:0%
civilization 6
just<00:06:33.680><c> for</c><00:06:33.840><c> perspective</c><00:06:34.800><c> but</c><00:06:35.039><c> the</c><00:06:35.199><c> focus</c><00:06:35.520><c> here</c>

00:06:35.749 --> 00:06:35.759 align:start position:0%
just for perspective but the focus here
 

00:06:35.759 --> 00:06:36.550 align:start position:0%
just for perspective but the focus here
is<00:06:35.840><c> going</c><00:06:36.000><c> to</c><00:06:36.080><c> be</c><00:06:36.240><c> on</c>

00:06:36.550 --> 00:06:36.560 align:start position:0%
is going to be on
 

00:06:36.560 --> 00:06:39.749 align:start position:0%
is going to be on
those<00:06:37.280><c> uh</c><00:06:38.080><c> wider</c><00:06:38.800><c> gap</c><00:06:39.120><c> games</c>

00:06:39.749 --> 00:06:39.759 align:start position:0%
those uh wider gap games
 

00:06:39.759 --> 00:06:42.070 align:start position:0%
those uh wider gap games
and<00:06:40.080><c> finally</c><00:06:40.479><c> the</c><00:06:40.560><c> 3300x</c><00:06:41.440><c> is</c><00:06:41.520><c> obviously</c><00:06:41.840><c> just</c>

00:06:42.070 --> 00:06:42.080 align:start position:0%
and finally the 3300x is obviously just
 

00:06:42.080 --> 00:06:43.510 align:start position:0%
and finally the 3300x is obviously just
as<00:06:42.160><c> capable</c><00:06:42.560><c> of</c><00:06:42.639><c> doing</c><00:06:42.880><c> all</c><00:06:42.960><c> these</c><00:06:43.120><c> things</c><00:06:43.360><c> as</c>

00:06:43.510 --> 00:06:43.520 align:start position:0%
as capable of doing all these things as
 

00:06:43.520 --> 00:06:44.790 align:start position:0%
as capable of doing all these things as
the<00:06:43.600><c> 3100</c>

00:06:44.790 --> 00:06:44.800 align:start position:0%
the 3100
 

00:06:44.800 --> 00:06:46.710 align:start position:0%
the 3100
so<00:06:45.199><c> we</c><00:06:45.360><c> have</c><00:06:45.600><c> those</c><00:06:45.759><c> numbers</c><00:06:46.080><c> in</c><00:06:46.240><c> a</c><00:06:46.319><c> couple</c><00:06:46.560><c> of</c>

00:06:46.710 --> 00:06:46.720 align:start position:0%
so we have those numbers in a couple of
 

00:06:46.720 --> 00:06:48.550 align:start position:0%
so we have those numbers in a couple of
the<00:06:46.800><c> games</c><00:06:47.280><c> but</c><00:06:47.440><c> not</c><00:06:47.680><c> all</c><00:06:47.840><c> of</c><00:06:47.919><c> them</c>

00:06:48.550 --> 00:06:48.560 align:start position:0%
the games but not all of them
 

00:06:48.560 --> 00:06:50.230 align:start position:0%
the games but not all of them
the<00:06:48.639><c> focus</c><00:06:48.880><c> again</c><00:06:49.120><c> is</c><00:06:49.199><c> on</c><00:06:49.280><c> the</c><00:06:49.360><c> 3100</c><00:06:49.919><c> let's</c><00:06:50.080><c> get</c>

00:06:50.230 --> 00:06:50.240 align:start position:0%
the focus again is on the 3100 let's get
 

00:06:50.240 --> 00:06:51.749 align:start position:0%
the focus again is on the 3100 let's get
started<00:06:50.479><c> with</c><00:06:50.560><c> the</c><00:06:50.639><c> gaming</c><00:06:50.880><c> benchmarks</c><00:06:51.440><c> f1</c>

00:06:51.749 --> 00:06:51.759 align:start position:0%
started with the gaming benchmarks f1
 

00:06:51.759 --> 00:06:53.589 align:start position:0%
started with the gaming benchmarks f1
2019<00:06:52.400><c> is</c><00:06:52.560><c> up</c><00:06:52.639><c> first</c><00:06:52.960><c> this</c><00:06:53.120><c> one</c><00:06:53.280><c> does</c><00:06:53.440><c> an</c>

00:06:53.589 --> 00:06:53.599 align:start position:0%
2019 is up first this one does an
 

00:06:53.599 --> 00:06:54.790 align:start position:0%
2019 is up first this one does an
excellent<00:06:53.919><c> job</c><00:06:54.160><c> of</c><00:06:54.319><c> highlighting</c>

00:06:54.790 --> 00:06:54.800 align:start position:0%
excellent job of highlighting
 

00:06:54.800 --> 00:06:56.550 align:start position:0%
excellent job of highlighting
differences<00:06:55.199><c> between</c><00:06:55.520><c> cpus</c><00:06:55.919><c> in</c><00:06:56.080><c> general</c><00:06:56.400><c> but</c>

00:06:56.550 --> 00:06:56.560 align:start position:0%
differences between cpus in general but
 

00:06:56.560 --> 00:06:58.230 align:start position:0%
differences between cpus in general but
the<00:06:56.720><c> high</c><00:06:56.960><c> fps</c><00:06:57.440><c> averages</c><00:06:57.840><c> can</c><00:06:58.000><c> make</c>

00:06:58.230 --> 00:06:58.240 align:start position:0%
the high fps averages can make
 

00:06:58.240 --> 00:06:59.990 align:start position:0%
the high fps averages can make
differences<00:06:58.639><c> seem</c><00:06:58.880><c> more</c><00:06:59.120><c> dramatic</c><00:06:59.599><c> than</c><00:06:59.759><c> they</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
differences seem more dramatic than they
 

00:07:00.000 --> 00:07:02.390 align:start position:0%
differences seem more dramatic than they
actually<00:07:00.319><c> are</c><00:07:00.479><c> 200</c><00:07:00.880><c> fps</c><00:07:01.360><c> average</c><00:07:01.599><c> for</c><00:07:01.680><c> the</c><00:07:01.840><c> 4.4</c>

00:07:02.390 --> 00:07:02.400 align:start position:0%
actually are 200 fps average for the 4.4
 

00:07:02.400 --> 00:07:05.430 align:start position:0%
actually are 200 fps average for the 4.4
gigahertz<00:07:02.960><c> 3100</c><00:07:03.680><c> versus</c><00:07:04.080><c> 239</c><00:07:04.800><c> fps</c><00:07:05.199><c> average</c>

00:07:05.430 --> 00:07:05.440 align:start position:0%
gigahertz 3100 versus 239 fps average
 

00:07:05.440 --> 00:07:06.950 align:start position:0%
gigahertz 3100 versus 239 fps average
for<00:07:05.599><c> the</c><00:07:05.680><c> 4.4</c><00:07:06.240><c> gigahertz</c>

00:07:06.950 --> 00:07:06.960 align:start position:0%
for the 4.4 gigahertz
 

00:07:06.960 --> 00:07:10.070 align:start position:0%
for the 4.4 gigahertz
3300x<00:07:07.919><c> is</c><00:07:08.160><c> a</c><00:07:08.240><c> big</c><00:07:08.479><c> difference</c><00:07:09.360><c> but</c><00:07:09.680><c> it's</c>

00:07:10.070 --> 00:07:10.080 align:start position:0%
3300x is a big difference but it's
 

00:07:10.080 --> 00:07:13.029 align:start position:0%
3300x is a big difference but it's
still<00:07:10.400><c> a</c><00:07:10.479><c> 19.3</c><00:07:11.520><c> uplift</c><00:07:12.160><c> so</c><00:07:12.400><c> not</c><00:07:12.639><c> quite</c><00:07:12.880><c> as</c>

00:07:13.029 --> 00:07:13.039 align:start position:0%
still a 19.3 uplift so not quite as
 

00:07:13.039 --> 00:07:14.550 align:start position:0%
still a 19.3 uplift so not quite as
dramatic<00:07:13.440><c> as</c><00:07:13.599><c> with</c><00:07:13.759><c> the</c><00:07:13.840><c> three</c><00:07:14.080><c> kingdoms</c>

00:07:14.550 --> 00:07:14.560 align:start position:0%
dramatic as with the three kingdoms
 

00:07:14.560 --> 00:07:15.510 align:start position:0%
dramatic as with the three kingdoms
campaign<00:07:14.960><c> benchmark</c>

00:07:15.510 --> 00:07:15.520 align:start position:0%
campaign benchmark
 

00:07:15.520 --> 00:07:17.749 align:start position:0%
campaign benchmark
unlike<00:07:15.840><c> three</c><00:07:16.080><c> kingdoms</c><00:07:16.560><c> f-119</c><00:07:17.360><c> proved</c><00:07:17.680><c> at</c>

00:07:17.749 --> 00:07:17.759 align:start position:0%
unlike three kingdoms f-119 proved at
 

00:07:17.759 --> 00:07:19.830 align:start position:0%
unlike three kingdoms f-119 proved at
least<00:07:18.000><c> somewhat</c><00:07:18.319><c> responsive</c><00:07:18.880><c> to</c><00:07:19.039><c> our</c><00:07:19.199><c> tuning</c>

00:07:19.830 --> 00:07:19.840 align:start position:0%
least somewhat responsive to our tuning
 

00:07:19.840 --> 00:07:22.150 align:start position:0%
least somewhat responsive to our tuning
with<00:07:20.000><c> a</c><00:07:20.160><c> 2.9</c><00:07:20.720><c> percent</c><00:07:21.120><c> uplift</c><00:07:21.520><c> from</c><00:07:21.680><c> a</c><00:07:21.759><c> plane</c>

00:07:22.150 --> 00:07:22.160 align:start position:0%
with a 2.9 percent uplift from a plane
 

00:07:22.160 --> 00:07:23.430 align:start position:0%
with a 2.9 percent uplift from a plane
f-clock<00:07:22.720><c> increase</c>

00:07:23.430 --> 00:07:23.440 align:start position:0%
f-clock increase
 

00:07:23.440 --> 00:07:26.230 align:start position:0%
f-clock increase
going<00:07:23.680><c> from</c><00:07:23.840><c> 200</c><00:07:24.319><c> fps</c><00:07:24.639><c> average</c><00:07:24.880><c> to</c><00:07:25.039><c> 206</c><00:07:26.000><c> and</c><00:07:26.160><c> a</c>

00:07:26.230 --> 00:07:26.240 align:start position:0%
going from 200 fps average to 206 and a
 

00:07:26.240 --> 00:07:27.830 align:start position:0%
going from 200 fps average to 206 and a
4.7<00:07:26.960><c> percent</c><00:07:27.360><c> increase</c>

00:07:27.830 --> 00:07:27.840 align:start position:0%
4.7 percent increase
 

00:07:27.840 --> 00:07:30.070 align:start position:0%
4.7 percent increase
from<00:07:28.000><c> the</c><00:07:28.080><c> full</c><00:07:28.319><c> suite</c><00:07:28.560><c> of</c><00:07:28.720><c> tuning</c><00:07:29.440><c> and</c><00:07:29.680><c> clock</c>

00:07:30.070 --> 00:07:30.080 align:start position:0%
from the full suite of tuning and clock
 

00:07:30.080 --> 00:07:32.629 align:start position:0%
from the full suite of tuning and clock
adjustments<00:07:30.639><c> up</c><00:07:30.800><c> to</c><00:07:30.880><c> 209</c><00:07:31.520><c> fps</c><00:07:31.919><c> average</c>

00:07:32.629 --> 00:07:32.639 align:start position:0%
adjustments up to 209 fps average
 

00:07:32.639 --> 00:07:35.909 align:start position:0%
adjustments up to 209 fps average
that<00:07:32.800><c> reduces</c><00:07:33.360><c> the</c><00:07:33.440><c> 3300</c><00:07:34.160><c> x's</c><00:07:34.479><c> lead</c><00:07:34.720><c> to</c><00:07:34.880><c> 14</c>

00:07:35.909 --> 00:07:35.919 align:start position:0%
that reduces the 3300 x's lead to 14
 

00:07:35.919 --> 00:07:37.909 align:start position:0%
that reduces the 3300 x's lead to 14
but<00:07:36.160><c> frankly</c><00:07:36.639><c> speaking</c><00:07:37.120><c> that's</c><00:07:37.520><c> still</c><00:07:37.759><c> a</c>

00:07:37.909 --> 00:07:37.919 align:start position:0%
but frankly speaking that's still a
 

00:07:37.919 --> 00:07:38.950 align:start position:0%
but frankly speaking that's still a
massive<00:07:38.319><c> difference</c>

00:07:38.950 --> 00:07:38.960 align:start position:0%
massive difference
 

00:07:38.960 --> 00:07:41.270 align:start position:0%
massive difference
for<00:07:39.199><c> two</c><00:07:39.360><c> amd</c><00:07:39.759><c> cpus</c><00:07:40.400><c> that</c><00:07:40.560><c> are</c><00:07:40.800><c> nominally</c>

00:07:41.270 --> 00:07:41.280 align:start position:0%
for two amd cpus that are nominally
 

00:07:41.280 --> 00:07:42.710 align:start position:0%
for two amd cpus that are nominally
running<00:07:41.599><c> at</c><00:07:41.680><c> the</c><00:07:41.759><c> same</c><00:07:42.080><c> speed</c>

00:07:42.710 --> 00:07:42.720 align:start position:0%
running at the same speed
 

00:07:42.720 --> 00:07:45.110 align:start position:0%
running at the same speed
the<00:07:42.960><c> 3300x</c><00:07:43.759><c> remains</c><00:07:44.160><c> the</c><00:07:44.319><c> better</c><00:07:44.560><c> buy</c>

00:07:45.110 --> 00:07:45.120 align:start position:0%
the 3300x remains the better buy
 

00:07:45.120 --> 00:07:47.510 align:start position:0%
the 3300x remains the better buy
especially<00:07:45.599><c> since</c><00:07:45.840><c> we</c><00:07:46.000><c> ran</c><00:07:46.160><c> the</c><00:07:46.319><c> 3300x</c><00:07:47.280><c> with</c>

00:07:47.510 --> 00:07:47.520 align:start position:0%
especially since we ran the 3300x with
 

00:07:47.520 --> 00:07:49.589 align:start position:0%
especially since we ran the 3300x with
the<00:07:47.759><c> 3200</c><00:07:48.400><c> megahertz</c><00:07:48.800><c> standardized</c><00:07:49.280><c> memory</c>

00:07:49.589 --> 00:07:49.599 align:start position:0%
the 3200 megahertz standardized memory
 

00:07:49.599 --> 00:07:51.510 align:start position:0%
the 3200 megahertz standardized memory
test<00:07:49.840><c> kit</c><00:07:50.000><c> that</c><00:07:50.080><c> we</c><00:07:50.160><c> use</c><00:07:50.319><c> on</c><00:07:50.479><c> all</c><00:07:50.639><c> platforms</c>

00:07:51.510 --> 00:07:51.520 align:start position:0%
test kit that we use on all platforms
 

00:07:51.520 --> 00:07:53.589 align:start position:0%
test kit that we use on all platforms
you'd<00:07:51.759><c> be</c><00:07:51.919><c> better</c><00:07:52.160><c> off</c><00:07:52.319><c> spending</c><00:07:52.639><c> the</c><00:07:52.720><c> 20</c><00:07:53.280><c> more</c>

00:07:53.589 --> 00:07:53.599 align:start position:0%
you'd be better off spending the 20 more
 

00:07:53.599 --> 00:07:54.950 align:start position:0%
you'd be better off spending the 20 more
on<00:07:53.840><c> the</c><00:07:54.000><c> cpu</c>

00:07:54.950 --> 00:07:54.960 align:start position:0%
on the cpu
 

00:07:54.960 --> 00:07:56.790 align:start position:0%
on the cpu
and<00:07:55.120><c> then</c><00:07:55.360><c> less</c><00:07:55.599><c> money</c><00:07:55.840><c> on</c><00:07:56.000><c> memory</c><00:07:56.560><c> even</c>

00:07:56.790 --> 00:07:56.800 align:start position:0%
and then less money on memory even
 

00:07:56.800 --> 00:07:57.990 align:start position:0%
and then less money on memory even
running<00:07:57.120><c> its</c><00:07:57.280><c> stock</c>

00:07:57.990 --> 00:07:58.000 align:start position:0%
running its stock
 

00:07:58.000 --> 00:08:00.550 align:start position:0%
running its stock
the<00:07:58.240><c> tune</c><00:07:58.639><c> on</c><00:07:58.879><c> the</c><00:07:59.120><c> 3300x</c><00:08:00.000><c> didn't</c><00:08:00.240><c> change</c><00:08:00.479><c> the</c>

00:08:00.550 --> 00:08:00.560 align:start position:0%
the tune on the 3300x didn't change the
 

00:08:00.560 --> 00:08:01.589 align:start position:0%
the tune on the 3300x didn't change the
results<00:08:00.960><c> too</c><00:08:01.120><c> much</c>

00:08:01.589 --> 00:08:01.599 align:start position:0%
results too much
 

00:08:01.599 --> 00:08:04.150 align:start position:0%
results too much
especially<00:08:02.080><c> given</c><00:08:02.400><c> f1's</c><00:08:02.879><c> higher</c><00:08:03.199><c> fps</c><00:08:03.759><c> and</c>

00:08:04.150 --> 00:08:04.160 align:start position:0%
especially given f1's higher fps and
 

00:08:04.160 --> 00:08:05.990 align:start position:0%
especially given f1's higher fps and
therefore<00:08:04.639><c> higher</c><00:08:04.879><c> volatility</c><00:08:05.599><c> in</c><00:08:05.680><c> the</c><00:08:05.759><c> finer</c>

00:08:05.990 --> 00:08:06.000 align:start position:0%
therefore higher volatility in the finer
 

00:08:06.000 --> 00:08:07.990 align:start position:0%
therefore higher volatility in the finer
details<00:08:06.560><c> the</c><00:08:06.720><c> campaign</c><00:08:07.120><c> benchmark</c><00:08:07.520><c> for</c><00:08:07.759><c> total</c>

00:08:07.990 --> 00:08:08.000 align:start position:0%
details the campaign benchmark for total
 

00:08:08.000 --> 00:08:09.909 align:start position:0%
details the campaign benchmark for total
war<00:08:08.240><c> 3</c><00:08:08.400><c> kingdoms</c><00:08:08.800><c> tells</c><00:08:09.039><c> a</c><00:08:09.120><c> similar</c><00:08:09.520><c> story</c>

00:08:09.909 --> 00:08:09.919 align:start position:0%
war 3 kingdoms tells a similar story
 

00:08:09.919 --> 00:08:12.790 align:start position:0%
war 3 kingdoms tells a similar story
with<00:08:10.080><c> the</c><00:08:10.240><c> 3300x</c><00:08:11.120><c> scoring</c><00:08:11.440><c> a</c><00:08:11.599><c> 25.2</c>

00:08:12.790 --> 00:08:12.800 align:start position:0%
with the 3300x scoring a 25.2
 

00:08:12.800 --> 00:08:15.670 align:start position:0%
with the 3300x scoring a 25.2
advantage<00:08:13.360><c> at</c><00:08:13.520><c> 124fps</c><00:08:14.560><c> average</c><00:08:15.280><c> and</c><00:08:15.440><c> that's</c>

00:08:15.670 --> 00:08:15.680 align:start position:0%
advantage at 124fps average and that's
 

00:08:15.680 --> 00:08:17.749 align:start position:0%
advantage at 124fps average and that's
when<00:08:16.000><c> overclocked</c><00:08:16.639><c> versus</c><00:08:16.960><c> the</c><00:08:17.120><c> overclocked</c>

00:08:17.749 --> 00:08:17.759 align:start position:0%
when overclocked versus the overclocked
 

00:08:17.759 --> 00:08:18.790 align:start position:0%
when overclocked versus the overclocked
3100

00:08:18.790 --> 00:08:18.800 align:start position:0%
3100
 

00:08:18.800 --> 00:08:21.670 align:start position:0%
3100
at<00:08:19.039><c> 99.4</c><00:08:19.919><c> fps</c><00:08:20.319><c> average</c><00:08:20.879><c> there's</c><00:08:21.120><c> only</c><00:08:21.280><c> a</c><00:08:21.360><c> small</c>

00:08:21.670 --> 00:08:21.680 align:start position:0%
at 99.4 fps average there's only a small
 

00:08:21.680 --> 00:08:22.469 align:start position:0%
at 99.4 fps average there's only a small
2.1

00:08:22.469 --> 00:08:22.479 align:start position:0%
2.1
 

00:08:22.479 --> 00:08:24.390 align:start position:0%
2.1
boost<00:08:23.120><c> over</c><00:08:23.360><c> the</c><00:08:23.520><c> original</c><00:08:23.919><c> overclocked</c>

00:08:24.390 --> 00:08:24.400 align:start position:0%
boost over the original overclocked
 

00:08:24.400 --> 00:08:26.629 align:start position:0%
boost over the original overclocked
result<00:08:24.720><c> for</c><00:08:24.879><c> the</c><00:08:24.960><c> 3100</c><00:08:25.919><c> resulting</c><00:08:26.400><c> from</c><00:08:26.560><c> the</c>

00:08:26.629 --> 00:08:26.639 align:start position:0%
result for the 3100 resulting from the
 

00:08:26.639 --> 00:08:28.710 align:start position:0%
result for the 3100 resulting from the
memory<00:08:26.960><c> tuning</c><00:08:27.360><c> and</c><00:08:27.440><c> that's</c><00:08:27.680><c> at</c><00:08:27.840><c> 102</c><00:08:28.319><c> fps</c>

00:08:28.710 --> 00:08:28.720 align:start position:0%
memory tuning and that's at 102 fps
 

00:08:28.720 --> 00:08:29.350 align:start position:0%
memory tuning and that's at 102 fps
average

00:08:29.350 --> 00:08:29.360 align:start position:0%
average
 

00:08:29.360 --> 00:08:30.950 align:start position:0%
average
this<00:08:29.599><c> is</c><00:08:29.680><c> one</c><00:08:29.840><c> of</c><00:08:30.000><c> the</c><00:08:30.080><c> titles</c><00:08:30.400><c> with</c><00:08:30.639><c> the</c><00:08:30.720><c> most</c>

00:08:30.950 --> 00:08:30.960 align:start position:0%
this is one of the titles with the most
 

00:08:30.960 --> 00:08:33.430 align:start position:0%
this is one of the titles with the most
dramatic<00:08:31.360><c> differences</c><00:08:31.840><c> between</c><00:08:32.159><c> the</c><00:08:32.240><c> two</c><00:08:32.479><c> r3s</c>

00:08:33.430 --> 00:08:33.440 align:start position:0%
dramatic differences between the two r3s
 

00:08:33.440 --> 00:08:35.829 align:start position:0%
dramatic differences between the two r3s
and<00:08:33.919><c> one</c><00:08:34.159><c> where</c><00:08:34.320><c> we</c><00:08:34.719><c> most</c><00:08:35.120><c> expected</c><00:08:35.519><c> to</c><00:08:35.599><c> see</c>

00:08:35.829 --> 00:08:35.839 align:start position:0%
and one where we most expected to see
 

00:08:35.839 --> 00:08:37.350 align:start position:0%
and one where we most expected to see
infinity<00:08:36.240><c> fabric</c><00:08:36.560><c> overclocking</c>

00:08:37.350 --> 00:08:37.360 align:start position:0%
infinity fabric overclocking
 

00:08:37.360 --> 00:08:39.110 align:start position:0%
infinity fabric overclocking
and<00:08:37.760><c> the</c><00:08:37.919><c> memory</c><00:08:38.240><c> tune</c><00:08:38.560><c> have</c><00:08:38.719><c> more</c><00:08:38.880><c> of</c><00:08:38.959><c> an</c>

00:08:39.110 --> 00:08:39.120 align:start position:0%
and the memory tune have more of an
 

00:08:39.120 --> 00:08:41.430 align:start position:0%
and the memory tune have more of an
effect<00:08:39.839><c> but</c><00:08:40.000><c> a</c><00:08:40.080><c> factor</c><00:08:40.560><c> other</c><00:08:40.800><c> than</c><00:08:40.959><c> playing</c>

00:08:41.430 --> 00:08:41.440 align:start position:0%
effect but a factor other than playing
 

00:08:41.440 --> 00:08:44.070 align:start position:0%
effect but a factor other than playing
clock<00:08:41.680><c> speeds</c><00:08:42.080><c> is</c><00:08:42.159><c> at</c><00:08:42.320><c> work</c><00:08:42.560><c> here</c><00:08:42.959><c> the</c><00:08:43.200><c> 3300x</c>

00:08:44.070 --> 00:08:44.080 align:start position:0%
clock speeds is at work here the 3300x
 

00:08:44.080 --> 00:08:45.750 align:start position:0%
clock speeds is at work here the 3300x
with<00:08:44.159><c> 3666</c><00:08:45.200><c> memory</c>

00:08:45.750 --> 00:08:45.760 align:start position:0%
with 3666 memory
 

00:08:45.760 --> 00:08:47.670 align:start position:0%
with 3666 memory
and<00:08:45.920><c> one</c><00:08:46.160><c> to</c><00:08:46.240><c> one</c><00:08:46.399><c> to</c><00:08:46.560><c> one</c><00:08:46.800><c> mode</c><00:08:47.120><c> scored</c><00:08:47.440><c> within</c>

00:08:47.670 --> 00:08:47.680 align:start position:0%
and one to one to one mode scored within
 

00:08:47.680 --> 00:08:49.509 align:start position:0%
and one to one to one mode scored within
test<00:08:47.920><c> variants</c><00:08:48.320><c> of</c><00:08:48.399><c> the</c><00:08:48.480><c> 4.4</c><00:08:49.040><c> gigahertz</c>

00:08:49.509 --> 00:08:49.519 align:start position:0%
test variants of the 4.4 gigahertz
 

00:08:49.519 --> 00:08:50.470 align:start position:0%
test variants of the 4.4 gigahertz
all-core<00:08:49.839><c> result</c>

00:08:50.470 --> 00:08:50.480 align:start position:0%
all-core result
 

00:08:50.480 --> 00:08:52.790 align:start position:0%
all-core result
both<00:08:50.720><c> at</c><00:08:50.880><c> around</c><00:08:51.120><c> 124</c><00:08:51.760><c> fps</c><00:08:52.160><c> average</c><00:08:52.560><c> total</c>

00:08:52.790 --> 00:08:52.800 align:start position:0%
both at around 124 fps average total
 

00:08:52.800 --> 00:08:54.470 align:start position:0%
both at around 124 fps average total
wars<00:08:53.120><c> battle</c><00:08:53.360><c> benchmark</c><00:08:53.760><c> is</c><00:08:53.920><c> next</c><00:08:54.240><c> the</c>

00:08:54.470 --> 00:08:54.480 align:start position:0%
wars battle benchmark is next the
 

00:08:54.480 --> 00:08:56.710 align:start position:0%
wars battle benchmark is next the
overclocked<00:08:55.040><c> r3</c><00:08:55.440><c> 3300x</c><00:08:56.320><c> scored</c><00:08:56.560><c> an</c>

00:08:56.710 --> 00:08:56.720 align:start position:0%
overclocked r3 3300x scored an
 

00:08:56.720 --> 00:08:59.030 align:start position:0%
overclocked r3 3300x scored an
especially<00:08:57.200><c> high</c><00:08:57.519><c> 13.9</c><00:08:58.240><c> percent</c><00:08:58.560><c> higher</c><00:08:58.880><c> than</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
especially high 13.9 percent higher than
 

00:08:59.040 --> 00:09:01.190 align:start position:0%
especially high 13.9 percent higher than
the<00:08:59.279><c> overclocked</c><00:08:59.760><c> 3100</c><00:09:00.480><c> in</c><00:09:00.560><c> total</c><00:09:00.800><c> war</c><00:09:01.040><c> 3</c>

00:09:01.190 --> 00:09:01.200 align:start position:0%
the overclocked 3100 in total war 3
 

00:09:01.200 --> 00:09:03.350 align:start position:0%
the overclocked 3100 in total war 3
kingdoms<00:09:01.600><c> battle</c><00:09:01.760><c> benchmark</c><00:09:02.240><c> at</c><00:09:02.320><c> 1080p</c>

00:09:03.350 --> 00:09:03.360 align:start position:0%
kingdoms battle benchmark at 1080p
 

00:09:03.360 --> 00:09:05.509 align:start position:0%
kingdoms battle benchmark at 1080p
but<00:09:03.600><c> neither</c><00:09:03.920><c> raising</c><00:09:04.320><c> f</c><00:09:04.560><c> clock</c><00:09:04.880><c> nor</c><00:09:05.120><c> tuning</c>

00:09:05.509 --> 00:09:05.519 align:start position:0%
but neither raising f clock nor tuning
 

00:09:05.519 --> 00:09:06.389 align:start position:0%
but neither raising f clock nor tuning
memory<00:09:05.839><c> with</c><00:09:06.160><c> f</c>

00:09:06.389 --> 00:09:06.399 align:start position:0%
memory with f
 

00:09:06.399 --> 00:09:09.990 align:start position:0%
memory with f
clock<00:09:07.040><c> m</c><00:09:07.200><c> clock</c><00:09:07.600><c> and</c><00:09:07.680><c> u</c><00:09:08.000><c> clock</c><00:09:09.040><c> all</c><00:09:09.279><c> increased</c>

00:09:09.990 --> 00:09:10.000 align:start position:0%
clock m clock and u clock all increased
 

00:09:10.000 --> 00:09:11.269 align:start position:0%
clock m clock and u clock all increased
caused<00:09:10.320><c> the</c><00:09:10.480><c> results</c><00:09:10.800><c> to</c><00:09:10.959><c> stray</c>

00:09:11.269 --> 00:09:11.279 align:start position:0%
caused the results to stray
 

00:09:11.279 --> 00:09:13.750 align:start position:0%
caused the results to stray
significantly<00:09:11.920><c> from</c><00:09:12.160><c> 1</c><00:09:12.399><c> 13</c><00:09:12.720><c> fps</c><00:09:13.120><c> average</c>

00:09:13.750 --> 00:09:13.760 align:start position:0%
significantly from 1 13 fps average
 

00:09:13.760 --> 00:09:15.509 align:start position:0%
significantly from 1 13 fps average
the<00:09:13.839><c> results</c><00:09:14.240><c> were</c><00:09:14.399><c> within</c><00:09:14.800><c> test</c><00:09:15.040><c> to</c><00:09:15.200><c> test</c>

00:09:15.509 --> 00:09:15.519 align:start position:0%
the results were within test to test
 

00:09:15.519 --> 00:09:17.590 align:start position:0%
the results were within test to test
variants<00:09:16.000><c> of</c><00:09:16.080><c> the</c><00:09:16.240><c> 4.4</c><00:09:16.720><c> gigahertz</c><00:09:17.200><c> all-core</c>

00:09:17.590 --> 00:09:17.600 align:start position:0%
variants of the 4.4 gigahertz all-core
 

00:09:17.600 --> 00:09:19.350 align:start position:0%
variants of the 4.4 gigahertz all-core
overclock<00:09:18.160><c> without</c><00:09:18.399><c> any</c><00:09:18.640><c> tuning</c>

00:09:19.350 --> 00:09:19.360 align:start position:0%
overclock without any tuning
 

00:09:19.360 --> 00:09:21.110 align:start position:0%
overclock without any tuning
these<00:09:19.600><c> are</c><00:09:19.760><c> within</c><00:09:20.160><c> error</c><00:09:20.560><c> and</c><00:09:20.720><c> we</c><00:09:20.880><c> can't</c>

00:09:21.110 --> 00:09:21.120 align:start position:0%
these are within error and we can't
 

00:09:21.120 --> 00:09:22.790 align:start position:0%
these are within error and we can't
measure<00:09:21.440><c> any</c><00:09:21.600><c> difference</c><00:09:22.080><c> outside</c><00:09:22.399><c> of</c><00:09:22.560><c> test</c>

00:09:22.790 --> 00:09:22.800 align:start position:0%
measure any difference outside of test
 

00:09:22.800 --> 00:09:24.470 align:start position:0%
measure any difference outside of test
variants<00:09:23.279><c> so</c><00:09:23.519><c> they're</c><00:09:23.760><c> functionally</c><00:09:24.320><c> the</c>

00:09:24.470 --> 00:09:24.480 align:start position:0%
variants so they're functionally the
 

00:09:24.480 --> 00:09:26.150 align:start position:0%
variants so they're functionally the
same<00:09:24.720><c> in</c><00:09:24.800><c> this</c><00:09:24.959><c> particular</c><00:09:25.440><c> benchmark</c><00:09:26.000><c> the</c>

00:09:26.150 --> 00:09:26.160 align:start position:0%
same in this particular benchmark the
 

00:09:26.160 --> 00:09:28.070 align:start position:0%
same in this particular benchmark the
division<00:09:26.560><c> 2</c><00:09:26.800><c> chart</c><00:09:27.120><c> still</c><00:09:27.360><c> has</c><00:09:27.680><c> slightly</c>

00:09:28.070 --> 00:09:28.080 align:start position:0%
division 2 chart still has slightly
 

00:09:28.080 --> 00:09:30.150 align:start position:0%
division 2 chart still has slightly
fewer<00:09:28.320><c> cpus</c><00:09:28.800><c> on</c><00:09:28.959><c> it</c><00:09:29.040><c> than</c><00:09:29.200><c> the</c><00:09:29.360><c> rest</c><00:09:29.680><c> as</c><00:09:29.839><c> we</c>

00:09:30.150 --> 00:09:30.160 align:start position:0%
fewer cpus on it than the rest as we
 

00:09:30.160 --> 00:09:31.590 align:start position:0%
fewer cpus on it than the rest as we
catch<00:09:30.480><c> up</c><00:09:30.640><c> following</c><00:09:30.959><c> our</c><00:09:31.120><c> decision</c><00:09:31.440><c> to</c>

00:09:31.590 --> 00:09:31.600 align:start position:0%
catch up following our decision to
 

00:09:31.600 --> 00:09:32.870 align:start position:0%
catch up following our decision to
switch<00:09:31.760><c> to</c><00:09:31.920><c> medium</c><00:09:32.240><c> settings</c>

00:09:32.870 --> 00:09:32.880 align:start position:0%
switch to medium settings
 

00:09:32.880 --> 00:09:34.949 align:start position:0%
switch to medium settings
but<00:09:33.120><c> all</c><00:09:33.360><c> the</c><00:09:33.519><c> r3</c><00:09:34.000><c> tests</c><00:09:34.320><c> were</c><00:09:34.480><c> run</c><00:09:34.720><c> through</c>

00:09:34.949 --> 00:09:34.959 align:start position:0%
but all the r3 tests were run through
 

00:09:34.959 --> 00:09:36.070 align:start position:0%
but all the r3 tests were run through
this<00:09:35.279><c> benchmark</c>

00:09:36.070 --> 00:09:36.080 align:start position:0%
this benchmark
 

00:09:36.080 --> 00:09:39.030 align:start position:0%
this benchmark
the<00:09:36.240><c> overclocked</c><00:09:37.240><c> r33300x</c><00:09:38.320><c> had</c><00:09:38.560><c> a</c><00:09:38.800><c> now</c>

00:09:39.030 --> 00:09:39.040 align:start position:0%
the overclocked r33300x had a now
 

00:09:39.040 --> 00:09:41.670 align:start position:0%
the overclocked r33300x had a now
typical<00:09:39.519><c> advantage</c><00:09:40.000><c> of</c><00:09:40.080><c> 14.8</c>

00:09:41.670 --> 00:09:41.680 align:start position:0%
typical advantage of 14.8
 

00:09:41.680 --> 00:09:44.150 align:start position:0%
typical advantage of 14.8
over<00:09:41.920><c> the</c><00:09:42.000><c> overclocked</c><00:09:42.480><c> 3100</c><00:09:43.120><c> at</c><00:09:43.200><c> 1080p</c>

00:09:44.150 --> 00:09:44.160 align:start position:0%
over the overclocked 3100 at 1080p
 

00:09:44.160 --> 00:09:46.230 align:start position:0%
over the overclocked 3100 at 1080p
that's<00:09:44.399><c> with</c><00:09:44.640><c> both</c><00:09:44.880><c> at</c><00:09:45.040><c> 4.4</c><00:09:45.600><c> gigahertz</c><00:09:46.080><c> all</c>

00:09:46.230 --> 00:09:46.240 align:start position:0%
that's with both at 4.4 gigahertz all
 

00:09:46.240 --> 00:09:46.949 align:start position:0%
that's with both at 4.4 gigahertz all
core

00:09:46.949 --> 00:09:46.959 align:start position:0%
core
 

00:09:46.959 --> 00:09:49.750 align:start position:0%
core
raising<00:09:47.360><c> f</c><00:09:47.600><c> clock</c><00:09:47.920><c> gave</c><00:09:48.240><c> minor</c><00:09:48.560><c> uplift</c><00:09:48.959><c> to</c><00:09:49.120><c> 164</c>

00:09:49.750 --> 00:09:49.760 align:start position:0%
raising f clock gave minor uplift to 164
 

00:09:49.760 --> 00:09:51.509 align:start position:0%
raising f clock gave minor uplift to 164
fps<00:09:50.080><c> average</c><00:09:50.399><c> on</c><00:09:50.480><c> the</c><00:09:50.560><c> 3100</c>

00:09:51.509 --> 00:09:51.519 align:start position:0%
fps average on the 3100
 

00:09:51.519 --> 00:09:53.030 align:start position:0%
fps average on the 3100
and<00:09:51.760><c> the</c><00:09:51.839><c> full</c><00:09:52.080><c> set</c><00:09:52.240><c> of</c><00:09:52.399><c> tunings</c><00:09:52.880><c> and</c>

00:09:53.030 --> 00:09:53.040 align:start position:0%
and the full set of tunings and
 

00:09:53.040 --> 00:09:55.110 align:start position:0%
and the full set of tunings and
overclocks<00:09:53.680><c> raised</c><00:09:53.920><c> performance</c><00:09:54.320><c> 2</c><00:09:54.480><c> percent</c>

00:09:55.110 --> 00:09:55.120 align:start position:0%
overclocks raised performance 2 percent
 

00:09:55.120 --> 00:09:57.430 align:start position:0%
overclocks raised performance 2 percent
versus<00:09:55.519><c> the</c><00:09:55.600><c> plain</c><00:09:56.000><c> all-core</c><00:09:56.480><c> overclock</c>

00:09:57.430 --> 00:09:57.440 align:start position:0%
versus the plain all-core overclock
 

00:09:57.440 --> 00:10:00.389 align:start position:0%
versus the plain all-core overclock
again<00:09:57.839><c> the</c><00:09:58.000><c> 3300x</c><00:09:58.959><c> maintains</c><00:09:59.440><c> a</c><00:09:59.519><c> solid</c><00:09:59.920><c> lead</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
again the 3300x maintains a solid lead
 

00:10:00.399 --> 00:10:01.990 align:start position:0%
again the 3300x maintains a solid lead
even<00:10:00.720><c> as</c><00:10:00.880><c> we</c><00:10:01.040><c> attempt</c><00:10:01.360><c> to</c><00:10:01.519><c> counter</c><00:10:01.839><c> the</c>

00:10:01.990 --> 00:10:02.000 align:start position:0%
even as we attempt to counter the
 

00:10:02.000 --> 00:10:04.069 align:start position:0%
even as we attempt to counter the
disadvantages<00:10:02.800><c> of</c><00:10:02.959><c> the</c><00:10:03.040><c> 3100</c>

00:10:04.069 --> 00:10:04.079 align:start position:0%
disadvantages of the 3100
 

00:10:04.079 --> 00:10:06.310 align:start position:0%
disadvantages of the 3100
the<00:10:04.240><c> gap</c><00:10:04.480><c> is</c><00:10:04.640><c> now</c><00:10:04.800><c> 12.5</c><00:10:05.519><c> percent</c><00:10:05.920><c> instead</c><00:10:06.240><c> of</c>

00:10:06.310 --> 00:10:06.320 align:start position:0%
the gap is now 12.5 percent instead of
 

00:10:06.320 --> 00:10:07.750 align:start position:0%
the gap is now 12.5 percent instead of
14.8<00:10:07.040><c> percent</c>

00:10:07.750 --> 00:10:07.760 align:start position:0%
14.8 percent
 

00:10:07.760 --> 00:10:10.069 align:start position:0%
14.8 percent
and<00:10:07.839><c> that's</c><00:10:08.079><c> with</c><00:10:08.240><c> the</c><00:10:08.320><c> 3300x</c><00:10:09.200><c> still</c><00:10:09.440><c> on</c><00:10:09.600><c> 3200</c>

00:10:10.069 --> 00:10:10.079 align:start position:0%
and that's with the 3300x still on 3200
 

00:10:10.079 --> 00:10:11.269 align:start position:0%
and that's with the 3300x still on 3200
megahertz<00:10:10.560><c> memory</c>

00:10:11.269 --> 00:10:11.279 align:start position:0%
megahertz memory
 

00:10:11.279 --> 00:10:13.670 align:start position:0%
megahertz memory
for<00:10:11.519><c> our</c><00:10:11.760><c> standard</c><00:10:12.079><c> reviews</c><00:10:12.640><c> so</c><00:10:12.880><c> still</c><00:10:13.600><c> a</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
for our standard reviews so still a
 

00:10:13.680 --> 00:10:15.110 align:start position:0%
for our standard reviews so still a
plenty<00:10:14.160><c> wide</c><00:10:14.480><c> gap</c>

00:10:15.110 --> 00:10:15.120 align:start position:0%
plenty wide gap
 

00:10:15.120 --> 00:10:16.949 align:start position:0%
plenty wide gap
it<00:10:15.279><c> may</c><00:10:15.680><c> again</c><00:10:16.000><c> just</c><00:10:16.240><c> be</c><00:10:16.399><c> better</c><00:10:16.640><c> to</c><00:10:16.720><c> buy</c><00:10:16.880><c> the</c>

00:10:16.949 --> 00:10:16.959 align:start position:0%
it may again just be better to buy the
 

00:10:16.959 --> 00:10:19.030 align:start position:0%
it may again just be better to buy the
3300<00:10:17.680><c> x</c><00:10:18.079><c> shadow</c><00:10:18.320><c> of</c><00:10:18.399><c> the</c><00:10:18.480><c> tomb</c><00:10:18.640><c> raider</c><00:10:18.959><c> at</c>

00:10:19.030 --> 00:10:19.040 align:start position:0%
3300 x shadow of the tomb raider at
 

00:10:19.040 --> 00:10:20.949 align:start position:0%
3300 x shadow of the tomb raider at
1080p<00:10:19.519><c> is</c><00:10:19.680><c> next</c><00:10:19.920><c> and</c><00:10:20.079><c> it</c><00:10:20.160><c> lines</c><00:10:20.480><c> up</c><00:10:20.560><c> closely</c>

00:10:20.949 --> 00:10:20.959 align:start position:0%
1080p is next and it lines up closely
 

00:10:20.959 --> 00:10:22.550 align:start position:0%
1080p is next and it lines up closely
with<00:10:21.120><c> the</c><00:10:21.200><c> results</c><00:10:21.519><c> we've</c><00:10:21.600><c> seen</c><00:10:21.839><c> so</c><00:10:22.079><c> far</c>

00:10:22.550 --> 00:10:22.560 align:start position:0%
with the results we've seen so far
 

00:10:22.560 --> 00:10:25.509 align:start position:0%
with the results we've seen so far
the<00:10:22.720><c> original</c><00:10:23.040><c> 3300x</c><00:10:23.920><c> overclock</c><00:10:24.399><c> had</c><00:10:24.640><c> a</c><00:10:24.800><c> 15.4</c>

00:10:25.509 --> 00:10:25.519 align:start position:0%
the original 3300x overclock had a 15.4
 

00:10:25.519 --> 00:10:27.990 align:start position:0%
the original 3300x overclock had a 15.4
percent<00:10:25.920><c> lead</c><00:10:26.240><c> over</c><00:10:26.399><c> the</c><00:10:26.560><c> 3100s</c><00:10:27.200><c> overclock</c>

00:10:27.990 --> 00:10:28.000 align:start position:0%
percent lead over the 3100s overclock
 

00:10:28.000 --> 00:10:30.630 align:start position:0%
percent lead over the 3100s overclock
of<00:10:28.640><c> a</c><00:10:28.800><c> 121</c><00:10:29.440><c> fps</c><00:10:29.839><c> average</c><00:10:30.079><c> for</c><00:10:30.160><c> the</c><00:10:30.240><c> results</c>

00:10:30.630 --> 00:10:30.640 align:start position:0%
of a 121 fps average for the results
 

00:10:30.640 --> 00:10:32.389 align:start position:0%
of a 121 fps average for the results
raising<00:10:31.040><c> f</c><00:10:31.200><c> clock</c><00:10:31.440><c> had</c><00:10:31.600><c> no</c><00:10:31.839><c> significant</c>

00:10:32.389 --> 00:10:32.399 align:start position:0%
raising f clock had no significant
 

00:10:32.399 --> 00:10:34.150 align:start position:0%
raising f clock had no significant
impact<00:10:32.880><c> and</c><00:10:32.959><c> was</c><00:10:33.120><c> within</c><00:10:33.440><c> variance</c><00:10:34.000><c> and</c>

00:10:34.150 --> 00:10:34.160 align:start position:0%
impact and was within variance and
 

00:10:34.160 --> 00:10:35.750 align:start position:0%
impact and was within variance and
memory<00:10:34.480><c> tuning</c><00:10:34.880><c> in</c><00:10:34.959><c> combination</c><00:10:35.519><c> with</c><00:10:35.600><c> the</c>

00:10:35.750 --> 00:10:35.760 align:start position:0%
memory tuning in combination with the
 

00:10:35.760 --> 00:10:36.550 align:start position:0%
memory tuning in combination with the
overclock

00:10:36.550 --> 00:10:36.560 align:start position:0%
overclock
 

00:10:36.560 --> 00:10:38.630 align:start position:0%
overclock
raised<00:10:36.800><c> performance</c><00:10:37.200><c> 4.1</c><00:10:37.760><c> percent</c><00:10:38.240><c> over</c><00:10:38.480><c> the</c>

00:10:38.630 --> 00:10:38.640 align:start position:0%
raised performance 4.1 percent over the
 

00:10:38.640 --> 00:10:40.389 align:start position:0%
raised performance 4.1 percent over the
all-core<00:10:39.279><c> only</c><00:10:39.600><c> oc</c>

00:10:40.389 --> 00:10:40.399 align:start position:0%
all-core only oc
 

00:10:40.399 --> 00:10:42.230 align:start position:0%
all-core only oc
the<00:10:40.560><c> typical</c><00:10:40.959><c> pattern</c><00:10:41.279><c> we've</c><00:10:41.519><c> seen</c><00:10:41.920><c> is</c><00:10:42.000><c> that</c>

00:10:42.230 --> 00:10:42.240 align:start position:0%
the typical pattern we've seen is that
 

00:10:42.240 --> 00:10:44.870 align:start position:0%
the typical pattern we've seen is that
the<00:10:42.399><c> 3300x</c><00:10:43.279><c> outperforms</c><00:10:43.760><c> the</c><00:10:43.839><c> 3100</c>

00:10:44.870 --> 00:10:44.880 align:start position:0%
the 3300x outperforms the 3100
 

00:10:44.880 --> 00:10:47.509 align:start position:0%
the 3300x outperforms the 3100
at<00:10:45.120><c> the</c><00:10:45.200><c> same</c><00:10:45.519><c> static</c><00:10:45.839><c> multiplier</c><00:10:46.800><c> raising</c><00:10:47.360><c> f</c>

00:10:47.509 --> 00:10:47.519 align:start position:0%
at the same static multiplier raising f
 

00:10:47.519 --> 00:10:49.509 align:start position:0%
at the same static multiplier raising f
clock<00:10:47.839><c> alone</c><00:10:48.160><c> has</c><00:10:48.399><c> little</c><00:10:48.640><c> to</c><00:10:48.800><c> no</c><00:10:49.040><c> effect</c><00:10:49.360><c> on</c>

00:10:49.509 --> 00:10:49.519 align:start position:0%
clock alone has little to no effect on
 

00:10:49.519 --> 00:10:49.910 align:start position:0%
clock alone has little to no effect on
this

00:10:49.910 --> 00:10:49.920 align:start position:0%
this
 

00:10:49.920 --> 00:10:51.509 align:start position:0%
this
and<00:10:50.160><c> running</c><00:10:50.480><c> faster</c><00:10:50.880><c> memory</c><00:10:51.279><c> while</c>

00:10:51.509 --> 00:10:51.519 align:start position:0%
and running faster memory while
 

00:10:51.519 --> 00:10:53.509 align:start position:0%
and running faster memory while
simultaneously<00:10:52.399><c> raising</c><00:10:52.800><c> f</c><00:10:52.959><c> clock</c><00:10:53.200><c> and</c><00:10:53.279><c> u</c>

00:10:53.509 --> 00:10:53.519 align:start position:0%
simultaneously raising f clock and u
 

00:10:53.519 --> 00:10:54.150 align:start position:0%
simultaneously raising f clock and u
clock

00:10:54.150 --> 00:10:54.160 align:start position:0%
clock
 

00:10:54.160 --> 00:10:56.550 align:start position:0%
clock
offers<00:10:54.640><c> a</c><00:10:54.880><c> minor</c><00:10:55.200><c> performance</c><00:10:55.600><c> advantage</c><00:10:56.320><c> but</c>

00:10:56.550 --> 00:10:56.560 align:start position:0%
offers a minor performance advantage but
 

00:10:56.560 --> 00:10:58.230 align:start position:0%
offers a minor performance advantage but
still<00:10:56.800><c> doesn't</c><00:10:57.040><c> put</c><00:10:57.200><c> the</c><00:10:57.279><c> 3100</c><00:10:57.920><c> at</c><00:10:58.000><c> the</c><00:10:58.079><c> same</c>

00:10:58.230 --> 00:10:58.240 align:start position:0%
still doesn't put the 3100 at the same
 

00:10:58.240 --> 00:11:01.190 align:start position:0%
still doesn't put the 3100 at the same
level<00:10:58.560><c> as</c><00:10:58.640><c> the</c><00:10:58.839><c> 3300x</c><00:10:59.920><c> the</c><00:11:00.079><c> 3300x</c><00:11:00.959><c> is</c>

00:11:01.190 --> 00:11:01.200 align:start position:0%
level as the 3300x the 3300x is
 

00:11:01.200 --> 00:11:03.190 align:start position:0%
level as the 3300x the 3300x is
equally<00:11:01.600><c> capable</c><00:11:02.079><c> of</c><00:11:02.240><c> running</c><00:11:02.560><c> faster</c><00:11:02.880><c> memory</c>

00:11:03.190 --> 00:11:03.200 align:start position:0%
equally capable of running faster memory
 

00:11:03.200 --> 00:11:05.990 align:start position:0%
equally capable of running faster memory
and<00:11:03.440><c> clocks</c><00:11:04.079><c> and</c><00:11:04.240><c> it</c><00:11:04.320><c> benefited</c><00:11:04.880><c> at</c><00:11:04.959><c> 141</c><00:11:05.600><c> fps</c>

00:11:05.990 --> 00:11:06.000 align:start position:0%
and clocks and it benefited at 141 fps
 

00:11:06.000 --> 00:11:08.389 align:start position:0%
and clocks and it benefited at 141 fps
average<00:11:06.399><c> from</c><00:11:06.839><c> 139.7</c>

00:11:08.389 --> 00:11:08.399 align:start position:0%
average from 139.7
 

00:11:08.399 --> 00:11:10.790 align:start position:0%
average from 139.7
previously<00:11:09.120><c> so</c><00:11:09.519><c> even</c><00:11:09.760><c> that</c><00:11:10.000><c> small</c><00:11:10.320><c> bump</c><00:11:10.640><c> for</c>

00:11:10.790 --> 00:11:10.800 align:start position:0%
previously so even that small bump for
 

00:11:10.800 --> 00:11:12.949 align:start position:0%
previously so even that small bump for
the<00:11:10.880><c> 3100</c><00:11:11.519><c> doesn't</c><00:11:11.760><c> mean</c><00:11:12.079><c> that</c><00:11:12.320><c> much</c>

00:11:12.949 --> 00:11:12.959 align:start position:0%
the 3100 doesn't mean that much
 

00:11:12.959 --> 00:11:14.949 align:start position:0%
the 3100 doesn't mean that much
not<00:11:13.120><c> that</c><00:11:13.360><c> it</c><00:11:13.440><c> means</c><00:11:13.600><c> much</c><00:11:13.839><c> for</c><00:11:14.000><c> the</c><00:11:14.079><c> 3300x</c>

00:11:14.949 --> 00:11:14.959 align:start position:0%
not that it means much for the 3300x
 

00:11:14.959 --> 00:11:16.790 align:start position:0%
not that it means much for the 3300x
either<00:11:15.279><c> of</c><00:11:15.440><c> course</c><00:11:15.760><c> hitman</c><00:11:16.160><c> 2</c><00:11:16.399><c> is</c><00:11:16.560><c> one</c><00:11:16.720><c> of</c>

00:11:16.790 --> 00:11:16.800 align:start position:0%
either of course hitman 2 is one of
 

00:11:16.800 --> 00:11:18.069 align:start position:0%
either of course hitman 2 is one of
those<00:11:17.120><c> several</c><00:11:17.440><c> tests</c><00:11:17.760><c> where</c><00:11:17.920><c> the</c>

00:11:18.069 --> 00:11:18.079 align:start position:0%
those several tests where the
 

00:11:18.079 --> 00:11:20.069 align:start position:0%
those several tests where the
overclocked<00:11:18.560><c> 3100</c><00:11:19.120><c> couldn't</c><00:11:19.440><c> beat</c><00:11:19.680><c> the</c><00:11:19.760><c> stock</c>

00:11:20.069 --> 00:11:20.079 align:start position:0%
overclocked 3100 couldn't beat the stock
 

00:11:20.079 --> 00:11:21.190 align:start position:0%
overclocked 3100 couldn't beat the stock
3300x

00:11:21.190 --> 00:11:21.200 align:start position:0%
3300x
 

00:11:21.200 --> 00:11:23.750 align:start position:0%
3300x
at<00:11:21.360><c> 103</c><00:11:21.839><c> fps</c><00:11:22.240><c> average</c><00:11:22.480><c> versus</c><00:11:22.720><c> 114</c><00:11:23.360><c> fps</c>

00:11:23.750 --> 00:11:23.760 align:start position:0%
at 103 fps average versus 114 fps
 

00:11:23.760 --> 00:11:26.150 align:start position:0%
at 103 fps average versus 114 fps
average<00:11:24.160><c> the</c><00:11:24.240><c> 3300x</c><00:11:25.200><c> obviously</c><00:11:25.600><c> maintains</c><00:11:26.079><c> a</c>

00:11:26.150 --> 00:11:26.160 align:start position:0%
average the 3300x obviously maintains a
 

00:11:26.160 --> 00:11:26.710 align:start position:0%
average the 3300x obviously maintains a
lead

00:11:26.710 --> 00:11:26.720 align:start position:0%
lead
 

00:11:26.720 --> 00:11:28.710 align:start position:0%
lead
simply<00:11:27.120><c> raising</c><00:11:27.519><c> f</c><00:11:27.680><c> clock</c><00:11:28.079><c> caused</c><00:11:28.480><c> no</c>

00:11:28.710 --> 00:11:28.720 align:start position:0%
simply raising f clock caused no
 

00:11:28.720 --> 00:11:30.870 align:start position:0%
simply raising f clock caused no
measurable<00:11:29.279><c> change</c><00:11:29.600><c> in</c><00:11:29.680><c> the</c><00:11:29.839><c> overall</c><00:11:30.240><c> average</c>

00:11:30.870 --> 00:11:30.880 align:start position:0%
measurable change in the overall average
 

00:11:30.880 --> 00:11:32.949 align:start position:0%
measurable change in the overall average
but<00:11:31.040><c> raising</c><00:11:31.440><c> the</c><00:11:31.519><c> memory</c><00:11:31.839><c> speed</c><00:11:32.160><c> as</c><00:11:32.320><c> well</c><00:11:32.720><c> did</c>

00:11:32.949 --> 00:11:32.959 align:start position:0%
but raising the memory speed as well did
 

00:11:32.959 --> 00:11:34.310 align:start position:0%
but raising the memory speed as well did
cause<00:11:33.200><c> a</c><00:11:33.360><c> 3.5</c><00:11:33.920><c> percent</c>

00:11:34.310 --> 00:11:34.320 align:start position:0%
cause a 3.5 percent
 

00:11:34.320 --> 00:11:36.069 align:start position:0%
cause a 3.5 percent
uplift<00:11:34.720><c> versus</c><00:11:35.040><c> the</c><00:11:35.120><c> original</c><00:11:35.519><c> overclocked</c>

00:11:36.069 --> 00:11:36.079 align:start position:0%
uplift versus the original overclocked
 

00:11:36.079 --> 00:11:38.790 align:start position:0%
uplift versus the original overclocked
result<00:11:36.800><c> that's</c><00:11:37.200><c> not</c><00:11:37.440><c> exactly</c><00:11:37.920><c> mind-blowing</c>

00:11:38.790 --> 00:11:38.800 align:start position:0%
result that's not exactly mind-blowing
 

00:11:38.800 --> 00:11:40.630 align:start position:0%
result that's not exactly mind-blowing
and<00:11:38.959><c> the</c><00:11:39.120><c> fact</c><00:11:39.360><c> that</c><00:11:39.519><c> the</c><00:11:39.680><c> f-clock</c><00:11:40.240><c> increase</c>

00:11:40.630 --> 00:11:40.640 align:start position:0%
and the fact that the f-clock increase
 

00:11:40.640 --> 00:11:42.069 align:start position:0%
and the fact that the f-clock increase
alone<00:11:41.040><c> didn't</c><00:11:41.440><c> help</c>

00:11:42.069 --> 00:11:42.079 align:start position:0%
alone didn't help
 

00:11:42.079 --> 00:11:43.829 align:start position:0%
alone didn't help
is<00:11:42.399><c> a</c><00:11:42.480><c> good</c><00:11:42.720><c> indicator</c><00:11:43.200><c> that</c><00:11:43.360><c> the</c><00:11:43.440><c> memory</c>

00:11:43.829 --> 00:11:43.839 align:start position:0%
is a good indicator that the memory
 

00:11:43.839 --> 00:11:45.350 align:start position:0%
is a good indicator that the memory
tuning<00:11:44.240><c> is</c><00:11:44.320><c> more</c><00:11:44.480><c> responsible</c><00:11:45.040><c> for</c><00:11:45.200><c> the</c>

00:11:45.350 --> 00:11:45.360 align:start position:0%
tuning is more responsible for the
 

00:11:45.360 --> 00:11:46.069 align:start position:0%
tuning is more responsible for the
improvement

00:11:46.069 --> 00:11:46.079 align:start position:0%
improvement
 

00:11:46.079 --> 00:11:48.310 align:start position:0%
improvement
and<00:11:46.320><c> also</c><00:11:46.640><c> potentially</c><00:11:47.360><c> more</c><00:11:47.519><c> expensive</c><00:11:48.079><c> of</c><00:11:48.240><c> a</c>

00:11:48.310 --> 00:11:48.320 align:start position:0%
and also potentially more expensive of a
 

00:11:48.320 --> 00:11:50.710 align:start position:0%
and also potentially more expensive of a
jump<00:11:48.800><c> than</c><00:11:49.040><c> just</c><00:11:49.360><c> the</c><00:11:49.440><c> 3300x</c><00:11:50.240><c> with</c><00:11:50.399><c> the</c><00:11:50.480><c> same</c>

00:11:50.710 --> 00:11:50.720 align:start position:0%
jump than just the 3300x with the same
 

00:11:50.720 --> 00:11:51.350 align:start position:0%
jump than just the 3300x with the same
memory

00:11:51.350 --> 00:11:51.360 align:start position:0%
memory
 

00:11:51.360 --> 00:11:54.069 align:start position:0%
memory
the<00:11:51.519><c> 3300x</c><00:11:52.480><c> remains</c><00:11:52.880><c> solidly</c><00:11:53.360><c> ahead</c><00:11:53.600><c> here</c><00:11:53.920><c> our</c>

00:11:54.069 --> 00:11:54.079 align:start position:0%
the 3300x remains solidly ahead here our
 

00:11:54.079 --> 00:11:55.990 align:start position:0%
the 3300x remains solidly ahead here our
civ6<00:11:54.639><c> turntime</c><00:11:55.040><c> benchmark</c><00:11:55.519><c> is</c><00:11:55.600><c> next</c>

00:11:55.990 --> 00:11:56.000 align:start position:0%
civ6 turntime benchmark is next
 

00:11:56.000 --> 00:11:57.829 align:start position:0%
civ6 turntime benchmark is next
looking<00:11:56.240><c> at</c><00:11:56.399><c> the</c><00:11:56.560><c> time</c><00:11:56.880><c> and</c><00:11:57.040><c> seconds</c><00:11:57.440><c> required</c>

00:11:57.829 --> 00:11:57.839 align:start position:0%
looking at the time and seconds required
 

00:11:57.839 --> 00:11:59.590 align:start position:0%
looking at the time and seconds required
to<00:11:57.920><c> complete</c><00:11:58.240><c> the</c><00:11:58.399><c> average</c><00:11:58.720><c> turn</c><00:11:59.040><c> for</c><00:11:59.120><c> an</c><00:11:59.279><c> ai</c>

00:11:59.590 --> 00:11:59.600 align:start position:0%
to complete the average turn for an ai
 

00:11:59.600 --> 00:12:00.069 align:start position:0%
to complete the average turn for an ai
player

00:12:00.069 --> 00:12:00.079 align:start position:0%
player
 

00:12:00.079 --> 00:12:02.550 align:start position:0%
player
the<00:12:00.320><c> r3</c><00:12:00.720><c> 3100</c><00:12:01.279><c> decreased</c><00:12:01.680><c> time</c><00:12:01.920><c> required</c><00:12:02.399><c> from</c>

00:12:02.550 --> 00:12:02.560 align:start position:0%
the r3 3100 decreased time required from
 

00:12:02.560 --> 00:12:05.030 align:start position:0%
the r3 3100 decreased time required from
40.3<00:12:03.279><c> seconds</c><00:12:03.600><c> to</c><00:12:03.760><c> 38.3</c>

00:12:05.030 --> 00:12:05.040 align:start position:0%
40.3 seconds to 38.3
 

00:12:05.040 --> 00:12:06.710 align:start position:0%
40.3 seconds to 38.3
which<00:12:05.279><c> is</c><00:12:05.519><c> a</c><00:12:05.600><c> meaningful</c><00:12:06.079><c> difference</c><00:12:06.480><c> in</c><00:12:06.560><c> this</c>

00:12:06.710 --> 00:12:06.720 align:start position:0%
which is a meaningful difference in this
 

00:12:06.720 --> 00:12:08.710 align:start position:0%
which is a meaningful difference in this
highly<00:12:07.040><c> accurate</c><00:12:07.440><c> and</c><00:12:07.600><c> consistent</c><00:12:08.160><c> bench</c>

00:12:08.710 --> 00:12:08.720 align:start position:0%
highly accurate and consistent bench
 

00:12:08.720 --> 00:12:10.310 align:start position:0%
highly accurate and consistent bench
so<00:12:08.880><c> we</c><00:12:09.040><c> saw</c><00:12:09.200><c> a</c><00:12:09.279><c> reduction</c><00:12:09.680><c> of</c><00:12:09.760><c> five</c><00:12:09.920><c> percent</c>

00:12:10.310 --> 00:12:10.320 align:start position:0%
so we saw a reduction of five percent
 

00:12:10.320 --> 00:12:13.110 align:start position:0%
so we saw a reduction of five percent
time<00:12:10.560><c> required</c><00:12:11.360><c> the</c><00:12:11.600><c> f</c><00:12:11.760><c> clock</c><00:12:12.079><c> oc</c><00:12:12.480><c> and</c><00:12:12.560><c> memoc</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
time required the f clock oc and memoc
 

00:12:13.120 --> 00:12:15.030 align:start position:0%
time required the f clock oc and memoc
results<00:12:13.519><c> move</c><00:12:13.680><c> to</c><00:12:13.839><c> about</c><00:12:14.079><c> 38</c>

00:12:15.030 --> 00:12:15.040 align:start position:0%
results move to about 38
 

00:12:15.040 --> 00:12:17.829 align:start position:0%
results move to about 38
and<00:12:15.279><c> 38.2</c><00:12:16.160><c> seconds</c><00:12:16.560><c> so</c><00:12:16.720><c> not</c><00:12:16.880><c> a</c><00:12:16.959><c> huge</c><00:12:17.279><c> change</c>

00:12:17.829 --> 00:12:17.839 align:start position:0%
and 38.2 seconds so not a huge change
 

00:12:17.839 --> 00:12:20.870 align:start position:0%
and 38.2 seconds so not a huge change
the<00:12:18.000><c> 3300x</c><00:12:18.880><c> remains</c><00:12:19.279><c> at</c><00:12:19.360><c> 35.3</c><00:12:20.240><c> seconds</c>

00:12:20.870 --> 00:12:20.880 align:start position:0%
the 3300x remains at 35.3 seconds
 

00:12:20.880 --> 00:12:23.430 align:start position:0%
the 3300x remains at 35.3 seconds
for<00:12:21.680><c> both</c><00:12:22.079><c> of</c><00:12:22.240><c> its</c><00:12:22.399><c> oc</c><00:12:22.800><c> results</c><00:12:23.120><c> memory</c>

00:12:23.430 --> 00:12:23.440 align:start position:0%
for both of its oc results memory
 

00:12:23.440 --> 00:12:25.430 align:start position:0%
for both of its oc results memory
timings<00:12:23.920><c> also</c><00:12:24.240><c> play</c><00:12:24.399><c> a</c><00:12:24.480><c> role</c><00:12:24.800><c> here</c><00:12:25.040><c> for</c><00:12:25.279><c> the</c>

00:12:25.430 --> 00:12:25.440 align:start position:0%
timings also play a role here for the
 

00:12:25.440 --> 00:12:27.190 align:start position:0%
timings also play a role here for the
simpler<00:12:25.839><c> f</c><00:12:26.079><c> clock</c><00:12:26.399><c> overclock</c>

00:12:27.190 --> 00:12:27.200 align:start position:0%
simpler f clock overclock
 

00:12:27.200 --> 00:12:30.230 align:start position:0%
simpler f clock overclock
where<00:12:27.440><c> the</c><00:12:27.600><c> cl</c><00:12:27.920><c> 14</c><00:12:28.320><c> 3200</c><00:12:28.880><c> result</c><00:12:29.279><c> is</c><00:12:29.519><c> plotting</c>

00:12:30.230 --> 00:12:30.240 align:start position:0%
where the cl 14 3200 result is plotting
 

00:12:30.240 --> 00:12:32.870 align:start position:0%
where the cl 14 3200 result is plotting
marginally<00:12:30.800><c> better</c><00:12:31.040><c> than</c><00:12:31.120><c> the</c><00:12:31.279><c> cl16</c><00:12:31.920><c> 3666</c>

00:12:32.870 --> 00:12:32.880 align:start position:0%
marginally better than the cl16 3666
 

00:12:32.880 --> 00:12:33.350 align:start position:0%
marginally better than the cl16 3666
result

00:12:33.350 --> 00:12:33.360 align:start position:0%
result
 

00:12:33.360 --> 00:12:35.670 align:start position:0%
result
this<00:12:33.680><c> chart</c><00:12:34.000><c> is</c><00:12:34.240><c> for</c><00:12:34.480><c> red</c><00:12:34.720><c> dead</c><00:12:34.880><c> redemption</c><00:12:35.440><c> 2</c>

00:12:35.670 --> 00:12:35.680 align:start position:0%
this chart is for red dead redemption 2
 

00:12:35.680 --> 00:12:37.750 align:start position:0%
this chart is for red dead redemption 2
with<00:12:35.839><c> dx12</c><00:12:36.480><c> and</c><00:12:36.560><c> 1080p</c><00:12:37.200><c> high</c>

00:12:37.750 --> 00:12:37.760 align:start position:0%
with dx12 and 1080p high
 

00:12:37.760 --> 00:12:39.670 align:start position:0%
with dx12 and 1080p high
we<00:12:37.920><c> may</c><00:12:38.079><c> increasingly</c><00:12:38.720><c> move</c><00:12:38.880><c> away</c><00:12:39.200><c> from</c><00:12:39.440><c> high</c>

00:12:39.670 --> 00:12:39.680 align:start position:0%
we may increasingly move away from high
 

00:12:39.680 --> 00:12:41.509 align:start position:0%
we may increasingly move away from high
settings<00:12:40.000><c> in</c><00:12:40.240><c> red</c><00:12:40.480><c> dead</c><00:12:40.720><c> 2</c><00:12:40.959><c> as</c><00:12:41.120><c> a</c><00:12:41.200><c> cpu</c>

00:12:41.509 --> 00:12:41.519 align:start position:0%
settings in red dead 2 as a cpu
 

00:12:41.519 --> 00:12:42.710 align:start position:0%
settings in red dead 2 as a cpu
benchmark<00:12:41.920><c> in</c><00:12:42.000><c> the</c><00:12:42.079><c> future</c>

00:12:42.710 --> 00:12:42.720 align:start position:0%
benchmark in the future
 

00:12:42.720 --> 00:12:44.629 align:start position:0%
benchmark in the future
because<00:12:42.959><c> of</c><00:12:43.040><c> the</c><00:12:43.279><c> obvious</c><00:12:43.680><c> gpu</c><00:12:44.000><c> limitations</c>

00:12:44.629 --> 00:12:44.639 align:start position:0%
because of the obvious gpu limitations
 

00:12:44.639 --> 00:12:47.350 align:start position:0%
because of the obvious gpu limitations
but<00:12:44.800><c> for</c><00:12:45.040><c> now</c><00:12:45.519><c> the</c><00:12:45.680><c> 3300x</c><00:12:46.480><c> and</c><00:12:46.560><c> 3100</c><00:12:47.200><c> are</c><00:12:47.279><c> at</c>

00:12:47.350 --> 00:12:47.360 align:start position:0%
but for now the 3300x and 3100 are at
 

00:12:47.360 --> 00:12:48.949 align:start position:0%
but for now the 3300x and 3100 are at
least<00:12:47.600><c> measurably</c><00:12:48.079><c> below</c><00:12:48.399><c> the</c><00:12:48.480><c> performance</c>

00:12:48.949 --> 00:12:48.959 align:start position:0%
least measurably below the performance
 

00:12:48.959 --> 00:12:49.509 align:start position:0%
least measurably below the performance
level

00:12:49.509 --> 00:12:49.519 align:start position:0%
level
 

00:12:49.519 --> 00:12:51.670 align:start position:0%
level
of<00:12:49.600><c> the</c><00:12:49.760><c> 3600</c><00:12:50.639><c> and</c><00:12:50.720><c> therefore</c><00:12:51.120><c> not</c><00:12:51.279><c> hitting</c><00:12:51.519><c> a</c>

00:12:51.670 --> 00:12:51.680 align:start position:0%
of the 3600 and therefore not hitting a
 

00:12:51.680 --> 00:12:53.590 align:start position:0%
of the 3600 and therefore not hitting a
gpu<00:12:52.000><c> limitation</c><00:12:52.480><c> at</c><00:12:52.560><c> 1080p</c>

00:12:53.590 --> 00:12:53.600 align:start position:0%
gpu limitation at 1080p
 

00:12:53.600 --> 00:12:55.509 align:start position:0%
gpu limitation at 1080p
the<00:12:53.760><c> core</c><00:12:54.079><c> overclocks</c><00:12:54.639><c> on</c><00:12:54.720><c> the</c><00:12:54.800><c> 3100</c><00:12:55.360><c> and</c>

00:12:55.509 --> 00:12:55.519 align:start position:0%
the core overclocks on the 3100 and
 

00:12:55.519 --> 00:12:57.990 align:start position:0%
the core overclocks on the 3100 and
3300x<00:12:56.320><c> had</c><00:12:56.560><c> barely</c><00:12:56.880><c> any</c><00:12:57.200><c> effect</c><00:12:57.600><c> on</c><00:12:57.760><c> either</c>

00:12:57.990 --> 00:12:58.000 align:start position:0%
3300x had barely any effect on either
 

00:12:58.000 --> 00:12:59.110 align:start position:0%
3300x had barely any effect on either
chip<00:12:58.240><c> in</c><00:12:58.320><c> this</c><00:12:58.560><c> test</c>

00:12:59.110 --> 00:12:59.120 align:start position:0%
chip in this test
 

00:12:59.120 --> 00:13:01.910 align:start position:0%
chip in this test
and<00:12:59.200><c> the</c><00:12:59.360><c> 4.4</c><00:12:59.920><c> gigahertz</c><00:13:00.399><c> 3300x</c><00:13:01.120><c> had</c><00:13:01.279><c> a</c><00:13:01.360><c> 10</c>

00:13:01.910 --> 00:13:01.920 align:start position:0%
and the 4.4 gigahertz 3300x had a 10
 

00:13:01.920 --> 00:13:02.710 align:start position:0%
and the 4.4 gigahertz 3300x had a 10
advantage

00:13:02.710 --> 00:13:02.720 align:start position:0%
advantage
 

00:13:02.720 --> 00:13:05.590 align:start position:0%
advantage
over<00:13:02.880><c> the</c><00:13:03.040><c> 4.4</c><00:13:03.600><c> gigahertz</c><00:13:04.079><c> 3100</c><00:13:05.120><c> tuning</c><00:13:05.519><c> the</c>

00:13:05.590 --> 00:13:05.600 align:start position:0%
over the 4.4 gigahertz 3100 tuning the
 

00:13:05.600 --> 00:13:06.069 align:start position:0%
over the 4.4 gigahertz 3100 tuning the
memory

00:13:06.069 --> 00:13:06.079 align:start position:0%
memory
 

00:13:06.079 --> 00:13:09.110 align:start position:0%
memory
with<00:13:06.320><c> a</c><00:13:06.480><c> one</c><00:13:06.639><c> to</c><00:13:06.800><c> one</c><00:13:06.959><c> to</c><00:13:07.120><c> one</c><00:13:07.440><c> 1833</c><00:13:08.160><c> megahertz</c>

00:13:09.110 --> 00:13:09.120 align:start position:0%
with a one to one to one 1833 megahertz
 

00:13:09.120 --> 00:13:11.990 align:start position:0%
with a one to one to one 1833 megahertz
configuration<00:13:10.160><c> raised</c><00:13:10.560><c> the</c><00:13:10.720><c> average</c><00:13:11.200><c> fps</c>

00:13:11.990 --> 00:13:12.000 align:start position:0%
configuration raised the average fps
 

00:13:12.000 --> 00:13:13.030 align:start position:0%
configuration raised the average fps
from<00:13:12.240><c> 100</c>

00:13:13.030 --> 00:13:13.040 align:start position:0%
from 100
 

00:13:13.040 --> 00:13:15.829 align:start position:0%
from 100
to<00:13:13.200><c> 102</c><00:13:13.839><c> for</c><00:13:14.000><c> the</c><00:13:14.160><c> 3100</c><00:13:15.040><c> while</c><00:13:15.360><c> just</c><00:13:15.600><c> raising</c>

00:13:15.829 --> 00:13:15.839 align:start position:0%
to 102 for the 3100 while just raising
 

00:13:15.839 --> 00:13:16.949 align:start position:0%
to 102 for the 3100 while just raising
the<00:13:16.000><c> f</c><00:13:16.240><c> clock</c>

00:13:16.949 --> 00:13:16.959 align:start position:0%
the f clock
 

00:13:16.959 --> 00:13:19.829 align:start position:0%
the f clock
to<00:13:17.200><c> 1866</c><00:13:18.240><c> with</c><00:13:18.399><c> our</c><00:13:18.560><c> original</c><00:13:18.959><c> kit</c><00:13:19.120><c> of</c><00:13:19.279><c> memory</c>

00:13:19.829 --> 00:13:19.839 align:start position:0%
to 1866 with our original kit of memory
 

00:13:19.839 --> 00:13:21.750 align:start position:0%
to 1866 with our original kit of memory
did<00:13:20.079><c> just</c><00:13:20.399><c> as</c><00:13:20.480><c> well</c><00:13:20.720><c> within</c><00:13:21.040><c> margin</c><00:13:21.360><c> of</c><00:13:21.440><c> error</c>

00:13:21.750 --> 00:13:21.760 align:start position:0%
did just as well within margin of error
 

00:13:21.760 --> 00:13:23.590 align:start position:0%
did just as well within margin of error
achieving<00:13:22.160><c> 103</c><00:13:22.639><c> fps</c><00:13:22.959><c> average</c>

00:13:23.590 --> 00:13:23.600 align:start position:0%
achieving 103 fps average
 

00:13:23.600 --> 00:13:26.150 align:start position:0%
achieving 103 fps average
that<00:13:23.760><c> reduces</c><00:13:24.240><c> the</c><00:13:24.399><c> overclocked</c><00:13:25.120><c> 3300</c><00:13:25.839><c> x's</c>

00:13:26.150 --> 00:13:26.160 align:start position:0%
that reduces the overclocked 3300 x's
 

00:13:26.160 --> 00:13:28.069 align:start position:0%
that reduces the overclocked 3300 x's
advantage<00:13:26.639><c> to</c><00:13:26.800><c> 6.6</c><00:13:27.440><c> percent</c>

00:13:28.069 --> 00:13:28.079 align:start position:0%
advantage to 6.6 percent
 

00:13:28.079 --> 00:13:30.069 align:start position:0%
advantage to 6.6 percent
but<00:13:28.320><c> it's</c><00:13:28.480><c> still</c><00:13:28.800><c> obviously</c><00:13:29.279><c> in</c><00:13:29.360><c> the</c><00:13:29.519><c> lead</c>

00:13:30.069 --> 00:13:30.079 align:start position:0%
but it's still obviously in the lead
 

00:13:30.079 --> 00:13:32.069 align:start position:0%
but it's still obviously in the lead
note<00:13:30.320><c> that</c><00:13:30.560><c> there's</c><00:13:31.040><c> again</c><00:13:31.440><c> potential</c><00:13:31.839><c> for</c><00:13:32.000><c> a</c>

00:13:32.069 --> 00:13:32.079 align:start position:0%
note that there's again potential for a
 

00:13:32.079 --> 00:13:33.590 align:start position:0%
note that there's again potential for a
memory<00:13:32.320><c> timing</c><00:13:32.720><c> impact</c><00:13:33.120><c> to</c><00:13:33.279><c> play</c>

00:13:33.590 --> 00:13:33.600 align:start position:0%
memory timing impact to play
 

00:13:33.600 --> 00:13:35.509 align:start position:0%
memory timing impact to play
more<00:13:33.839><c> of</c><00:13:33.920><c> a</c><00:13:34.000><c> role</c><00:13:34.240><c> than</c><00:13:34.399><c> just</c><00:13:34.560><c> the</c><00:13:34.720><c> frequency</c>

00:13:35.509 --> 00:13:35.519 align:start position:0%
more of a role than just the frequency
 

00:13:35.519 --> 00:13:37.190 align:start position:0%
more of a role than just the frequency
but<00:13:35.680><c> we</c><00:13:35.760><c> don't</c><00:13:35.920><c> have</c><00:13:36.079><c> the</c><00:13:36.160><c> test</c><00:13:36.480><c> resolution</c><00:13:36.959><c> to</c>

00:13:37.190 --> 00:13:37.200 align:start position:0%
but we don't have the test resolution to
 

00:13:37.200 --> 00:13:39.509 align:start position:0%
but we don't have the test resolution to
actually<00:13:37.680><c> see</c><00:13:38.320><c> a</c><00:13:38.480><c> measurable</c><00:13:38.959><c> difference</c>

00:13:39.509 --> 00:13:39.519 align:start position:0%
actually see a measurable difference
 

00:13:39.519 --> 00:13:41.430 align:start position:0%
actually see a measurable difference
between<00:13:40.120><c> 109.8</c>

00:13:41.430 --> 00:13:41.440 align:start position:0%
between 109.8
 

00:13:41.440 --> 00:13:44.629 align:start position:0%
between 109.8
and<00:13:41.959><c> 109.5</c><00:13:43.120><c> medium</c><00:13:43.519><c> settings</c><00:13:44.000><c> create</c><00:13:44.320><c> more</c><00:13:44.480><c> of</c>

00:13:44.629 --> 00:13:44.639 align:start position:0%
and 109.5 medium settings create more of
 

00:13:44.639 --> 00:13:46.710 align:start position:0%
and 109.5 medium settings create more of
a<00:13:44.720><c> cpu</c><00:13:45.040><c> bottleneck</c><00:13:45.519><c> for</c><00:13:45.680><c> red</c><00:13:45.920><c> dead</c><00:13:46.240><c> using</c><00:13:46.480><c> the</c>

00:13:46.710 --> 00:13:46.720 align:start position:0%
a cpu bottleneck for red dead using the
 

00:13:46.720 --> 00:13:49.030 align:start position:0%
a cpu bottleneck for red dead using the
dx12<00:13:47.360><c> api</c><00:13:47.920><c> but</c><00:13:48.079><c> since</c><00:13:48.320><c> the</c><00:13:48.399><c> game</c><00:13:48.639><c> is</c><00:13:48.720><c> fairly</c>

00:13:49.030 --> 00:13:49.040 align:start position:0%
dx12 api but since the game is fairly
 

00:13:49.040 --> 00:13:50.949 align:start position:0%
dx12 api but since the game is fairly
cpu<00:13:49.440><c> limited</c><00:13:49.680><c> by</c><00:13:49.839><c> the</c><00:13:49.920><c> r3s</c><00:13:50.399><c> even</c><00:13:50.639><c> at</c><00:13:50.720><c> high</c>

00:13:50.949 --> 00:13:50.959 align:start position:0%
cpu limited by the r3s even at high
 

00:13:50.959 --> 00:13:51.670 align:start position:0%
cpu limited by the r3s even at high
settings

00:13:51.670 --> 00:13:51.680 align:start position:0%
settings
 

00:13:51.680 --> 00:13:55.030 align:start position:0%
settings
oc<00:13:52.000><c> versus</c><00:13:52.399><c> oc</c><00:13:52.800><c> the</c><00:13:52.959><c> 3300x</c><00:13:53.920><c> only</c><00:13:54.079><c> has</c><00:13:54.399><c> a</c>

00:13:55.030 --> 00:13:55.040 align:start position:0%
oc versus oc the 3300x only has a
 

00:13:55.040 --> 00:13:57.269 align:start position:0%
oc versus oc the 3300x only has a
slightly<00:13:55.440><c> higher</c><00:13:55.760><c> 11.2</c><00:13:56.480><c> percent</c><00:13:56.880><c> advantage</c>

00:13:57.269 --> 00:13:57.279 align:start position:0%
slightly higher 11.2 percent advantage
 

00:13:57.279 --> 00:13:59.269 align:start position:0%
slightly higher 11.2 percent advantage
here<00:13:57.760><c> the</c><00:13:57.920><c> result</c><00:13:58.240><c> with</c><00:13:58.480><c> tuned</c><00:13:58.800><c> memory</c>

00:13:59.269 --> 00:13:59.279 align:start position:0%
here the result with tuned memory
 

00:13:59.279 --> 00:14:00.870 align:start position:0%
here the result with tuned memory
is<00:13:59.519><c> again</c><00:13:59.839><c> slightly</c><00:14:00.240><c> higher</c><00:14:00.560><c> than</c><00:14:00.720><c> the</c>

00:14:00.870 --> 00:14:00.880 align:start position:0%
is again slightly higher than the
 

00:14:00.880 --> 00:14:02.870 align:start position:0%
is again slightly higher than the
results<00:14:01.279><c> with</c><00:14:01.519><c> a</c><00:14:01.680><c> simple</c><00:14:02.079><c> f</c><00:14:02.240><c> clock</c><00:14:02.560><c> increase</c>

00:14:02.870 --> 00:14:02.880 align:start position:0%
results with a simple f clock increase
 

00:14:02.880 --> 00:14:03.750 align:start position:0%
results with a simple f clock increase
in<00:14:02.959><c> this</c><00:14:03.199><c> test</c>

00:14:03.750 --> 00:14:03.760 align:start position:0%
in this test
 

00:14:03.760 --> 00:14:05.670 align:start position:0%
in this test
more<00:14:04.000><c> in</c><00:14:04.160><c> line</c><00:14:04.399><c> with</c><00:14:04.639><c> what</c><00:14:04.800><c> we'd</c><00:14:05.040><c> expect</c><00:14:05.519><c> than</c>

00:14:05.670 --> 00:14:05.680 align:start position:0%
more in line with what we'd expect than
 

00:14:05.680 --> 00:14:08.230 align:start position:0%
more in line with what we'd expect than
the<00:14:05.839><c> high</c><00:14:06.079><c> results</c><00:14:06.720><c> at</c><00:14:06.880><c> 106</c><00:14:07.360><c> fps</c><00:14:07.760><c> average</c><00:14:08.079><c> the</c>

00:14:08.230 --> 00:14:08.240 align:start position:0%
the high results at 106 fps average the
 

00:14:08.240 --> 00:14:09.829 align:start position:0%
the high results at 106 fps average the
tuned<00:14:08.480><c> result</c><00:14:08.800><c> is</c><00:14:08.959><c> a</c><00:14:09.040><c> 4.1</c>

00:14:09.829 --> 00:14:09.839 align:start position:0%
tuned result is a 4.1
 

00:14:09.839 --> 00:14:12.389 align:start position:0%
tuned result is a 4.1
improvement<00:14:10.320><c> over</c><00:14:10.480><c> the</c><00:14:10.560><c> plane</c><00:14:10.959><c> oc</c><00:14:11.920><c> for</c><00:14:12.160><c> all</c>

00:14:12.389 --> 00:14:12.399 align:start position:0%
improvement over the plane oc for all
 

00:14:12.399 --> 00:14:12.870 align:start position:0%
improvement over the plane oc for all
core

00:14:12.870 --> 00:14:12.880 align:start position:0%
core
 

00:14:12.880 --> 00:14:15.910 align:start position:0%
core
and<00:14:13.120><c> reduces</c><00:14:13.519><c> the</c><00:14:13.600><c> 3300</c><00:14:14.320><c> x's</c><00:14:14.639><c> oc</c><00:14:15.120><c> versus</c><00:14:15.440><c> oc</c>

00:14:15.910 --> 00:14:15.920 align:start position:0%
and reduces the 3300 x's oc versus oc
 

00:14:15.920 --> 00:14:16.629 align:start position:0%
and reduces the 3300 x's oc versus oc
advantage

00:14:16.629 --> 00:14:16.639 align:start position:0%
advantage
 

00:14:16.639 --> 00:14:19.110 align:start position:0%
advantage
to<00:14:16.800><c> 6.8</c><00:14:17.440><c> percent</c><00:14:17.920><c> red</c><00:14:18.079><c> dead</c><00:14:18.320><c> 2</c><00:14:18.560><c> with</c><00:14:18.639><c> vulcan</c>

00:14:19.110 --> 00:14:19.120 align:start position:0%
to 6.8 percent red dead 2 with vulcan
 

00:14:19.120 --> 00:14:20.710 align:start position:0%
to 6.8 percent red dead 2 with vulcan
and<00:14:19.279><c> these</c><00:14:19.519><c> settings</c><00:14:19.920><c> is</c><00:14:20.000><c> pretty</c><00:14:20.240><c> useless</c><00:14:20.639><c> as</c>

00:14:20.710 --> 00:14:20.720 align:start position:0%
and these settings is pretty useless as
 

00:14:20.720 --> 00:14:22.790 align:start position:0%
and these settings is pretty useless as
a<00:14:20.800><c> cpu</c><00:14:21.199><c> benchmark</c><00:14:21.680><c> but</c><00:14:21.839><c> it</c><00:14:22.000><c> shows</c><00:14:22.320><c> exactly</c><00:14:22.639><c> why</c>

00:14:22.790 --> 00:14:22.800 align:start position:0%
a cpu benchmark but it shows exactly why
 

00:14:22.800 --> 00:14:24.870 align:start position:0%
a cpu benchmark but it shows exactly why
we<00:14:22.959><c> avoid</c><00:14:23.279><c> bottlenecks</c><00:14:23.760><c> and</c><00:14:23.839><c> cpu</c><00:14:24.160><c> reviews</c>

00:14:24.870 --> 00:14:24.880 align:start position:0%
we avoid bottlenecks and cpu reviews
 

00:14:24.880 --> 00:14:26.230 align:start position:0%
we avoid bottlenecks and cpu reviews
they<00:14:25.040><c> don't</c><00:14:25.279><c> teach</c><00:14:25.519><c> us</c><00:14:25.680><c> anything</c><00:14:26.000><c> about</c><00:14:26.160><c> the</c>

00:14:26.230 --> 00:14:26.240 align:start position:0%
they don't teach us anything about the
 

00:14:26.240 --> 00:14:28.870 align:start position:0%
they don't teach us anything about the
cpu<00:14:27.040><c> because</c><00:14:27.360><c> obviously</c><00:14:27.839><c> a</c><00:14:27.920><c> 9900k</c>

00:14:28.870 --> 00:14:28.880 align:start position:0%
cpu because obviously a 9900k
 

00:14:28.880 --> 00:14:31.670 align:start position:0%
cpu because obviously a 9900k
isn't<00:14:29.120><c> equal</c><00:14:29.360><c> to</c><00:14:29.519><c> a</c><00:14:29.600><c> 7700k</c><00:14:30.800><c> or</c><00:14:31.120><c> that</c><00:14:31.360><c> close</c><00:14:31.600><c> to</c>

00:14:31.670 --> 00:14:31.680 align:start position:0%
isn't equal to a 7700k or that close to
 

00:14:31.680 --> 00:14:32.949 align:start position:0%
isn't equal to a 7700k or that close to
a<00:14:31.760><c> 3300x</c>

00:14:32.949 --> 00:14:32.959 align:start position:0%
a 3300x
 

00:14:32.959 --> 00:14:35.030 align:start position:0%
a 3300x
vulcan<00:14:33.440><c> is</c><00:14:33.519><c> the</c><00:14:33.680><c> default</c><00:14:34.079><c> api</c><00:14:34.480><c> though</c><00:14:34.720><c> for</c><00:14:34.880><c> red</c>

00:14:35.030 --> 00:14:35.040 align:start position:0%
vulcan is the default api though for red
 

00:14:35.040 --> 00:14:37.189 align:start position:0%
vulcan is the default api though for red
dead<00:14:35.279><c> 2</c><00:14:35.839><c> so</c><00:14:36.000><c> we'll</c><00:14:36.240><c> cover</c><00:14:36.560><c> the</c><00:14:36.639><c> results</c><00:14:37.040><c> with</c>

00:14:37.189 --> 00:14:37.199 align:start position:0%
dead 2 so we'll cover the results with
 

00:14:37.199 --> 00:14:37.910 align:start position:0%
dead 2 so we'll cover the results with
it<00:14:37.360><c> as</c><00:14:37.519><c> well</c>

00:14:37.910 --> 00:14:37.920 align:start position:0%
it as well
 

00:14:37.920 --> 00:14:40.310 align:start position:0%
it as well
the<00:14:38.079><c> 3300x</c><00:14:38.959><c> is</c><00:14:39.040><c> 9.2</c><00:14:39.600><c> percent</c><00:14:39.920><c> ahead</c><00:14:40.160><c> of</c><00:14:40.240><c> the</c>

00:14:40.310 --> 00:14:40.320 align:start position:0%
the 3300x is 9.2 percent ahead of the
 

00:14:40.320 --> 00:14:42.550 align:start position:0%
the 3300x is 9.2 percent ahead of the
3100<00:14:40.959><c> and</c><00:14:41.040><c> oc</c><00:14:41.360><c> versus</c><00:14:41.600><c> oc</c><00:14:41.920><c> performance</c>

00:14:42.550 --> 00:14:42.560 align:start position:0%
3100 and oc versus oc performance
 

00:14:42.560 --> 00:14:45.509 align:start position:0%
3100 and oc versus oc performance
at<00:14:42.720><c> 4.4</c><00:14:43.360><c> gigahertz</c><00:14:43.920><c> only</c><00:14:44.320><c> no</c><00:14:44.480><c> other</c><00:14:44.720><c> tunes</c><00:14:45.360><c> and</c>

00:14:45.509 --> 00:14:45.519 align:start position:0%
at 4.4 gigahertz only no other tunes and
 

00:14:45.519 --> 00:14:47.269 align:start position:0%
at 4.4 gigahertz only no other tunes and
although<00:14:45.760><c> a</c><00:14:45.920><c> plane</c><00:14:46.160><c> f</c><00:14:46.399><c> clock</c><00:14:46.639><c> increase</c><00:14:46.959><c> had</c><00:14:47.040><c> no</c>

00:14:47.269 --> 00:14:47.279 align:start position:0%
although a plane f clock increase had no
 

00:14:47.279 --> 00:14:48.389 align:start position:0%
although a plane f clock increase had no
impact<00:14:47.600><c> on</c><00:14:47.680><c> the</c><00:14:47.839><c> average</c>

00:14:48.389 --> 00:14:48.399 align:start position:0%
impact on the average
 

00:14:48.399 --> 00:14:50.470 align:start position:0%
impact on the average
tuning<00:14:48.800><c> memory</c><00:14:49.199><c> as</c><00:14:49.360><c> well</c><00:14:49.760><c> raised</c><00:14:50.079><c> performance</c>

00:14:50.470 --> 00:14:50.480 align:start position:0%
tuning memory as well raised performance
 

00:14:50.480 --> 00:14:51.509 align:start position:0%
tuning memory as well raised performance
for<00:14:50.639><c> the</c><00:14:50.720><c> 3100</c>

00:14:51.509 --> 00:14:51.519 align:start position:0%
for the 3100
 

00:14:51.519 --> 00:14:55.110 align:start position:0%
for the 3100
oc<00:14:51.839><c> by</c><00:14:52.000><c> 3.8</c><00:14:52.480><c> percent</c><00:14:53.199><c> up</c><00:14:53.360><c> to</c><00:14:53.519><c> 117</c><00:14:54.160><c> fps</c><00:14:54.560><c> average</c>

00:14:55.110 --> 00:14:55.120 align:start position:0%
oc by 3.8 percent up to 117 fps average
 

00:14:55.120 --> 00:14:57.990 align:start position:0%
oc by 3.8 percent up to 117 fps average
and<00:14:55.279><c> reduced</c><00:14:55.680><c> the</c><00:14:55.839><c> overclocked</c><00:14:56.600><c> 3300x's</c><00:14:57.600><c> lead</c>

00:14:57.990 --> 00:14:58.000 align:start position:0%
and reduced the overclocked 3300x's lead
 

00:14:58.000 --> 00:14:59.509 align:start position:0%
and reduced the overclocked 3300x's lead
to<00:14:58.240><c> 5.8</c><00:14:58.800><c> percent</c>

00:14:59.509 --> 00:14:59.519 align:start position:0%
to 5.8 percent
 

00:14:59.519 --> 00:15:01.910 align:start position:0%
to 5.8 percent
these<00:14:59.760><c> are</c><00:14:59.920><c> the</c><00:15:00.000><c> same</c><00:15:00.240><c> results</c><00:15:00.639><c> as</c><00:15:00.880><c> with</c><00:15:01.040><c> dx12</c>

00:15:01.910 --> 00:15:01.920 align:start position:0%
these are the same results as with dx12
 

00:15:01.920 --> 00:15:03.509 align:start position:0%
these are the same results as with dx12
but<00:15:02.079><c> with</c><00:15:02.240><c> smaller</c><00:15:02.639><c> margins</c><00:15:03.040><c> due</c><00:15:03.279><c> to</c><00:15:03.360><c> the</c>

00:15:03.509 --> 00:15:03.519 align:start position:0%
but with smaller margins due to the
 

00:15:03.519 --> 00:15:05.750 align:start position:0%
but with smaller margins due to the
greater<00:15:03.839><c> gpu</c><00:15:04.240><c> limitations</c><00:15:04.880><c> grand</c><00:15:05.120><c> theft</c><00:15:05.360><c> auto</c>

00:15:05.750 --> 00:15:05.760 align:start position:0%
greater gpu limitations grand theft auto
 

00:15:05.760 --> 00:15:06.230 align:start position:0%
greater gpu limitations grand theft auto
5

00:15:06.230 --> 00:15:06.240 align:start position:0%
5
 

00:15:06.240 --> 00:15:09.030 align:start position:0%
5
at<00:15:06.399><c> 1080p</c><00:15:07.120><c> has</c><00:15:07.680><c> all</c><00:15:07.920><c> of</c><00:15:08.000><c> the</c><00:15:08.079><c> r3s</c><00:15:08.560><c> relatively</c>

00:15:09.030 --> 00:15:09.040 align:start position:0%
at 1080p has all of the r3s relatively
 

00:15:09.040 --> 00:15:10.310 align:start position:0%
at 1080p has all of the r3s relatively
close<00:15:09.199><c> together</c><00:15:09.519><c> in</c><00:15:09.600><c> performance</c>

00:15:10.310 --> 00:15:10.320 align:start position:0%
close together in performance
 

00:15:10.320 --> 00:15:13.430 align:start position:0%
close together in performance
with<00:15:10.560><c> a</c><00:15:10.720><c> range</c><00:15:11.199><c> from</c><00:15:11.680><c> 89</c><00:15:12.160><c> fps</c><00:15:12.560><c> average</c><00:15:13.120><c> for</c><00:15:13.279><c> the</c>

00:15:13.430 --> 00:15:13.440 align:start position:0%
with a range from 89 fps average for the
 

00:15:13.440 --> 00:15:15.829 align:start position:0%
with a range from 89 fps average for the
stock<00:15:13.760><c> 3100</c><00:15:14.320><c> to</c><00:15:14.480><c> 105</c><00:15:14.959><c> fps</c><00:15:15.279><c> howard</c><00:15:15.600><c> for</c><00:15:15.760><c> the</c>

00:15:15.829 --> 00:15:15.839 align:start position:0%
stock 3100 to 105 fps howard for the
 

00:15:15.839 --> 00:15:17.670 align:start position:0%
stock 3100 to 105 fps howard for the
overclocked<00:15:16.399><c> 3300x</c>

00:15:17.670 --> 00:15:17.680 align:start position:0%
overclocked 3300x
 

00:15:17.680 --> 00:15:19.829 align:start position:0%
overclocked 3300x
within<00:15:18.000><c> that</c><00:15:18.240><c> limited</c><00:15:18.639><c> range</c><00:15:18.959><c> the</c><00:15:19.040><c> cpus</c><00:15:19.600><c> stack</c>

00:15:19.829 --> 00:15:19.839 align:start position:0%
within that limited range the cpus stack
 

00:15:19.839 --> 00:15:21.590 align:start position:0%
within that limited range the cpus stack
up<00:15:20.000><c> as</c><00:15:20.160><c> they</c><00:15:20.320><c> have</c><00:15:20.480><c> in</c><00:15:20.560><c> the</c><00:15:20.720><c> other</c><00:15:20.959><c> tests</c>

00:15:21.590 --> 00:15:21.600 align:start position:0%
up as they have in the other tests
 

00:15:21.600 --> 00:15:24.710 align:start position:0%
up as they have in the other tests
the<00:15:21.760><c> 3300</c><00:15:22.560><c> x</c><00:15:22.880><c> 4.4</c><00:15:23.360><c> gigahertz</c><00:15:23.839><c> is</c><00:15:24.000><c> 8.3</c>

00:15:24.710 --> 00:15:24.720 align:start position:0%
the 3300 x 4.4 gigahertz is 8.3
 

00:15:24.720 --> 00:15:27.269 align:start position:0%
the 3300 x 4.4 gigahertz is 8.3
ahead<00:15:24.959><c> of</c><00:15:25.040><c> the</c><00:15:25.120><c> 3100</c><00:15:25.839><c> at</c><00:15:26.000><c> 105</c><00:15:26.560><c> fps</c><00:15:26.959><c> average</c><00:15:27.199><c> to</c>

00:15:27.269 --> 00:15:27.279 align:start position:0%
ahead of the 3100 at 105 fps average to
 

00:15:27.279 --> 00:15:28.790 align:start position:0%
ahead of the 3100 at 105 fps average to
97<00:15:27.839><c> fps</c><00:15:28.320><c> average</c>

00:15:28.790 --> 00:15:28.800 align:start position:0%
97 fps average
 

00:15:28.800 --> 00:15:31.110 align:start position:0%
97 fps average
with<00:15:29.040><c> both</c><00:15:29.279><c> overclocked</c><00:15:30.079><c> raising</c><00:15:30.560><c> the</c><00:15:30.880><c> f</c>

00:15:31.110 --> 00:15:31.120 align:start position:0%
with both overclocked raising the f
 

00:15:31.120 --> 00:15:33.030 align:start position:0%
with both overclocked raising the f
clock<00:15:31.360><c> alone</c><00:15:31.680><c> had</c><00:15:31.839><c> no</c><00:15:32.000><c> significant</c><00:15:32.639><c> impact</c>

00:15:33.030 --> 00:15:33.040 align:start position:0%
clock alone had no significant impact
 

00:15:33.040 --> 00:15:34.470 align:start position:0%
clock alone had no significant impact
and<00:15:33.199><c> the</c><00:15:33.279><c> comprehensive</c><00:15:33.920><c> tuning</c><00:15:34.320><c> and</c>

00:15:34.470 --> 00:15:34.480 align:start position:0%
and the comprehensive tuning and
 

00:15:34.480 --> 00:15:35.350 align:start position:0%
and the comprehensive tuning and
overclocking

00:15:35.350 --> 00:15:35.360 align:start position:0%
overclocking
 

00:15:35.360 --> 00:15:37.910 align:start position:0%
overclocking
raised<00:15:35.600><c> performance</c><00:15:36.000><c> by</c><00:15:36.240><c> 1.8</c><00:15:37.440><c> versus</c><00:15:37.759><c> the</c>

00:15:37.910 --> 00:15:37.920 align:start position:0%
raised performance by 1.8 versus the
 

00:15:37.920 --> 00:15:39.590 align:start position:0%
raised performance by 1.8 versus the
straight<00:15:38.160><c> 4.4</c><00:15:38.720><c> gigahertz</c><00:15:39.199><c> all-core</c>

00:15:39.590 --> 00:15:39.600 align:start position:0%
straight 4.4 gigahertz all-core
 

00:15:39.600 --> 00:15:40.150 align:start position:0%
straight 4.4 gigahertz all-core
overclock

00:15:40.150 --> 00:15:40.160 align:start position:0%
overclock
 

00:15:40.160 --> 00:15:42.069 align:start position:0%
overclock
failing<00:15:40.480><c> still</c><00:15:40.800><c> to</c><00:15:40.959><c> bring</c><00:15:41.120><c> it</c><00:15:41.199><c> to</c><00:15:41.279><c> the</c><00:15:41.440><c> 3300</c>

00:15:42.069 --> 00:15:42.079 align:start position:0%
failing still to bring it to the 3300
 

00:15:42.079 --> 00:15:43.350 align:start position:0%
failing still to bring it to the 3300
x's<00:15:42.399><c> level</c><00:15:42.639><c> of</c><00:15:42.720><c> performance</c>

00:15:43.350 --> 00:15:43.360 align:start position:0%
x's level of performance
 

00:15:43.360 --> 00:15:45.829 align:start position:0%
x's level of performance
stock<00:15:43.839><c> or</c><00:15:44.079><c> otherwise</c><00:15:44.720><c> 7-zip</c><00:15:45.279><c> is</c><00:15:45.360><c> up</c><00:15:45.519><c> next</c><00:15:45.759><c> we</c>

00:15:45.829 --> 00:15:45.839 align:start position:0%
stock or otherwise 7-zip is up next we
 

00:15:45.839 --> 00:15:47.269 align:start position:0%
stock or otherwise 7-zip is up next we
didn't<00:15:46.000><c> bother</c><00:15:46.320><c> running</c><00:15:46.560><c> the</c><00:15:46.720><c> full</c><00:15:46.880><c> suite</c><00:15:47.199><c> of</c>

00:15:47.269 --> 00:15:47.279 align:start position:0%
didn't bother running the full suite of
 

00:15:47.279 --> 00:15:48.710 align:start position:0%
didn't bother running the full suite of
enterprise<00:15:47.839><c> tests</c><00:15:48.240><c> with</c>

00:15:48.710 --> 00:15:48.720 align:start position:0%
enterprise tests with
 

00:15:48.720 --> 00:15:50.870 align:start position:0%
enterprise tests with
just<00:15:49.120><c> an</c><00:15:49.279><c> f-clock</c><00:15:49.839><c> increase</c><00:15:50.399><c> since</c><00:15:50.639><c> it</c><00:15:50.720><c> had</c>

00:15:50.870 --> 00:15:50.880 align:start position:0%
just an f-clock increase since it had
 

00:15:50.880 --> 00:15:52.470 align:start position:0%
just an f-clock increase since it had
been<00:15:51.120><c> fairly</c><00:15:51.360><c> well</c><00:15:51.600><c> established</c><00:15:52.079><c> that</c><00:15:52.240><c> the</c>

00:15:52.470 --> 00:15:52.480 align:start position:0%
been fairly well established that the
 

00:15:52.480 --> 00:15:53.990 align:start position:0%
been fairly well established that the
tuned<00:15:52.800><c> memory</c><00:15:53.120><c> was</c><00:15:53.199><c> giving</c><00:15:53.440><c> us</c><00:15:53.600><c> more</c><00:15:53.759><c> of</c><00:15:53.920><c> a</c>

00:15:53.990 --> 00:15:54.000 align:start position:0%
tuned memory was giving us more of a
 

00:15:54.000 --> 00:15:55.189 align:start position:0%
tuned memory was giving us more of a
performance<00:15:54.399><c> advantage</c>

00:15:55.189 --> 00:15:55.199 align:start position:0%
performance advantage
 

00:15:55.199 --> 00:15:56.790 align:start position:0%
performance advantage
that<00:15:55.360><c> didn't</c><00:15:55.600><c> hold</c><00:15:55.839><c> true</c><00:15:56.000><c> for</c><00:15:56.160><c> 7-zip</c><00:15:56.639><c> where</c>

00:15:56.790 --> 00:15:56.800 align:start position:0%
that didn't hold true for 7-zip where
 

00:15:56.800 --> 00:15:58.310 align:start position:0%
that didn't hold true for 7-zip where
the<00:15:56.959><c> decompress</c><00:15:57.600><c> score</c>

00:15:58.310 --> 00:15:58.320 align:start position:0%
the decompress score
 

00:15:58.320 --> 00:15:59.829 align:start position:0%
the decompress score
was<00:15:58.560><c> effectively</c><00:15:59.120><c> identical</c><00:15:59.600><c> to</c><00:15:59.759><c> the</c>

00:15:59.829 --> 00:15:59.839 align:start position:0%
was effectively identical to the
 

00:15:59.839 --> 00:16:01.910 align:start position:0%
was effectively identical to the
original<00:16:00.160><c> overclocked</c><00:16:00.720><c> 3100</c><00:16:01.360><c> result</c>

00:16:01.910 --> 00:16:01.920 align:start position:0%
original overclocked 3100 result
 

00:16:01.920 --> 00:16:03.269 align:start position:0%
original overclocked 3100 result
there's<00:16:02.160><c> almost</c><00:16:02.399><c> no</c><00:16:02.560><c> difference</c><00:16:02.880><c> in</c><00:16:03.040><c> any</c><00:16:03.199><c> of</c>

00:16:03.269 --> 00:16:03.279 align:start position:0%
there's almost no difference in any of
 

00:16:03.279 --> 00:16:04.790 align:start position:0%
there's almost no difference in any of
the<00:16:03.440><c> results</c><00:16:03.759><c> here</c><00:16:04.000><c> outside</c><00:16:04.320><c> of</c><00:16:04.399><c> the</c><00:16:04.560><c> stock</c>

00:16:04.790 --> 00:16:04.800 align:start position:0%
the results here outside of the stock
 

00:16:04.800 --> 00:16:06.150 align:start position:0%
the results here outside of the stock
3100<00:16:05.440><c> cpu</c>

00:16:06.150 --> 00:16:06.160 align:start position:0%
3100 cpu
 

00:16:06.160 --> 00:16:08.230 align:start position:0%
3100 cpu
so<00:16:06.399><c> this</c><00:16:06.720><c> task</c><00:16:07.120><c> just</c><00:16:07.279><c> doesn't</c><00:16:07.519><c> seem</c><00:16:07.680><c> to</c><00:16:07.920><c> care</c>

00:16:08.230 --> 00:16:08.240 align:start position:0%
so this task just doesn't seem to care
 

00:16:08.240 --> 00:16:10.230 align:start position:0%
so this task just doesn't seem to care
photoshop<00:16:08.800><c> didn't</c><00:16:09.120><c> take</c><00:16:09.279><c> well</c><00:16:09.600><c> to</c><00:16:09.759><c> our</c><00:16:09.920><c> memory</c>

00:16:10.230 --> 00:16:10.240 align:start position:0%
photoshop didn't take well to our memory
 

00:16:10.240 --> 00:16:10.710 align:start position:0%
photoshop didn't take well to our memory
tuning

00:16:10.710 --> 00:16:10.720 align:start position:0%
tuning
 

00:16:10.720 --> 00:16:13.030 align:start position:0%
tuning
although<00:16:11.040><c> the</c><00:16:11.360><c> original</c><00:16:11.759><c> 3300x</c><00:16:12.560><c> overclock</c>

00:16:13.030 --> 00:16:13.040 align:start position:0%
although the original 3300x overclock
 

00:16:13.040 --> 00:16:14.949 align:start position:0%
although the original 3300x overclock
had<00:16:13.279><c> a</c><00:16:13.440><c> 10.1</c><00:16:13.920><c> percent</c><00:16:14.240><c> advantage</c><00:16:14.720><c> over</c><00:16:14.880><c> the</c>

00:16:14.949 --> 00:16:14.959 align:start position:0%
had a 10.1 percent advantage over the
 

00:16:14.959 --> 00:16:17.110 align:start position:0%
had a 10.1 percent advantage over the
3100s<00:16:15.600><c> overclock</c><00:16:16.000><c> an</c><00:16:16.079><c> overall</c><00:16:16.399><c> score</c>

00:16:17.110 --> 00:16:17.120 align:start position:0%
3100s overclock an overall score
 

00:16:17.120 --> 00:16:18.790 align:start position:0%
3100s overclock an overall score
the<00:16:17.279><c> result</c><00:16:17.680><c> with</c><00:16:17.759><c> the</c><00:16:17.920><c> faster</c><00:16:18.240><c> memory</c><00:16:18.639><c> and</c>

00:16:18.790 --> 00:16:18.800 align:start position:0%
the result with the faster memory and
 

00:16:18.800 --> 00:16:20.870 align:start position:0%
the result with the faster memory and
tuning<00:16:19.199><c> was</c><00:16:19.360><c> a</c><00:16:19.440><c> couple</c><00:16:19.680><c> percent</c><00:16:20.079><c> lower</c>

00:16:20.870 --> 00:16:20.880 align:start position:0%
tuning was a couple percent lower
 

00:16:20.880 --> 00:16:22.710 align:start position:0%
tuning was a couple percent lower
that's<00:16:21.199><c> probably</c><00:16:21.600><c> because</c><00:16:21.920><c> the</c><00:16:22.000><c> cl-14</c>

00:16:22.710 --> 00:16:22.720 align:start position:0%
that's probably because the cl-14
 

00:16:22.720 --> 00:16:24.230 align:start position:0%
that's probably because the cl-14
timings<00:16:23.120><c> at</c><00:16:23.199><c> 3200</c>

00:16:24.230 --> 00:16:24.240 align:start position:0%
timings at 3200
 

00:16:24.240 --> 00:16:27.509 align:start position:0%
timings at 3200
are<00:16:24.560><c> helping</c><00:16:24.959><c> more</c><00:16:25.360><c> than</c><00:16:25.519><c> the</c><00:16:25.920><c> 3600</c><00:16:26.720><c> cl</c><00:16:27.120><c> 16</c>

00:16:27.509 --> 00:16:27.519 align:start position:0%
are helping more than the 3600 cl 16
 

00:16:27.519 --> 00:16:28.470 align:start position:0%
are helping more than the 3600 cl 16
configuration

00:16:28.470 --> 00:16:28.480 align:start position:0%
configuration
 

00:16:28.480 --> 00:16:29.910 align:start position:0%
configuration
so<00:16:28.639><c> we've</c><00:16:28.800><c> hit</c><00:16:28.959><c> diminishing</c><00:16:29.440><c> returns</c><00:16:29.839><c> on</c>

00:16:29.910 --> 00:16:29.920 align:start position:0%
so we've hit diminishing returns on
 

00:16:29.920 --> 00:16:31.670 align:start position:0%
so we've hit diminishing returns on
frequency<00:16:30.560><c> the</c><00:16:30.639><c> memory</c><00:16:30.959><c> changes</c><00:16:31.360><c> caused</c>

00:16:31.670 --> 00:16:31.680 align:start position:0%
frequency the memory changes caused
 

00:16:31.680 --> 00:16:33.430 align:start position:0%
frequency the memory changes caused
minor<00:16:31.920><c> performance</c><00:16:32.399><c> uplifts</c><00:16:32.880><c> in</c><00:16:33.040><c> our</c><00:16:33.199><c> render</c>

00:16:33.430 --> 00:16:33.440 align:start position:0%
minor performance uplifts in our render
 

00:16:33.440 --> 00:16:35.189 align:start position:0%
minor performance uplifts in our render
benchmarks<00:16:34.000><c> like</c><00:16:34.240><c> v-ray</c><00:16:34.639><c> premiere</c><00:16:35.120><c> and</c>

00:16:35.189 --> 00:16:35.199 align:start position:0%
benchmarks like v-ray premiere and
 

00:16:35.199 --> 00:16:37.030 align:start position:0%
benchmarks like v-ray premiere and
blender<00:16:35.839><c> so</c><00:16:36.000><c> we'll</c><00:16:36.160><c> use</c><00:16:36.320><c> blender</c><00:16:36.800><c> as</c><00:16:36.959><c> a</c>

00:16:37.030 --> 00:16:37.040 align:start position:0%
blender so we'll use blender as a
 

00:16:37.040 --> 00:16:38.470 align:start position:0%
blender so we'll use blender as a
summary<00:16:37.519><c> of</c><00:16:37.600><c> those</c><00:16:37.839><c> results</c>

00:16:38.470 --> 00:16:38.480 align:start position:0%
summary of those results
 

00:16:38.480 --> 00:16:41.030 align:start position:0%
summary of those results
the<00:16:38.639><c> 3300</c><00:16:39.440><c> xoc</c><00:16:40.000><c> originally</c><00:16:40.480><c> rendered</c><00:16:40.880><c> our</c>

00:16:41.030 --> 00:16:41.040 align:start position:0%
the 3300 xoc originally rendered our
 

00:16:41.040 --> 00:16:42.550 align:start position:0%
the 3300 xoc originally rendered our
monkey<00:16:41.360><c> head</c><00:16:41.600><c> render</c><00:16:41.920><c> scene</c>

00:16:42.550 --> 00:16:42.560 align:start position:0%
monkey head render scene
 

00:16:42.560 --> 00:16:46.310 align:start position:0%
monkey head render scene
in<00:16:42.720><c> 2.7</c><00:16:44.000><c> faster</c><00:16:44.399><c> time</c><00:16:44.720><c> than</c><00:16:44.880><c> the</c><00:16:45.040><c> 3100</c><00:16:45.680><c> oc</c>

00:16:46.310 --> 00:16:46.320 align:start position:0%
in 2.7 faster time than the 3100 oc
 

00:16:46.320 --> 00:16:49.350 align:start position:0%
in 2.7 faster time than the 3100 oc
at<00:16:46.560><c> 25.4</c><00:16:47.360><c> minutes</c><00:16:47.680><c> versus</c><00:16:47.920><c> 26.1</c><00:16:48.720><c> minutes</c>

00:16:49.350 --> 00:16:49.360 align:start position:0%
at 25.4 minutes versus 26.1 minutes
 

00:16:49.360 --> 00:16:51.189 align:start position:0%
at 25.4 minutes versus 26.1 minutes
but<00:16:49.519><c> with</c><00:16:49.680><c> the</c><00:16:49.839><c> memory</c><00:16:50.160><c> change</c><00:16:50.480><c> it</c><00:16:50.560><c> was</c><00:16:50.959><c> just</c>

00:16:51.189 --> 00:16:51.199 align:start position:0%
but with the memory change it was just
 

00:16:51.199 --> 00:16:52.790 align:start position:0%
but with the memory change it was just
under<00:16:51.440><c> two</c><00:16:51.600><c> percent</c><00:16:52.000><c> faster</c>

00:16:52.790 --> 00:16:52.800 align:start position:0%
under two percent faster
 

00:16:52.800 --> 00:16:55.910 align:start position:0%
under two percent faster
the<00:16:52.959><c> logo</c><00:16:53.360><c> render</c><00:16:53.839><c> finished</c><00:16:54.240><c> in</c><00:16:54.399><c> 31.4</c><00:16:55.279><c> minutes</c>

00:16:55.910 --> 00:16:55.920 align:start position:0%
the logo render finished in 31.4 minutes
 

00:16:55.920 --> 00:16:59.030 align:start position:0%
the logo render finished in 31.4 minutes
on<00:16:56.000><c> the</c><00:16:56.160><c> 4.4</c><00:16:56.720><c> gigahertz</c><00:16:57.199><c> 3300x</c><00:16:58.079><c> and</c><00:16:58.240><c> 32.1</c>

00:16:59.030 --> 00:16:59.040 align:start position:0%
on the 4.4 gigahertz 3300x and 32.1
 

00:16:59.040 --> 00:16:59.590 align:start position:0%
on the 4.4 gigahertz 3300x and 32.1
minutes

00:16:59.590 --> 00:16:59.600 align:start position:0%
minutes
 

00:16:59.600 --> 00:17:02.069 align:start position:0%
minutes
on<00:16:59.680><c> the</c><00:16:59.839><c> 4.4</c><00:17:00.320><c> gigahertz</c><00:17:00.800><c> 3100</c><00:17:01.680><c> making</c><00:17:01.920><c> the</c>

00:17:02.069 --> 00:17:02.079 align:start position:0%
on the 4.4 gigahertz 3100 making the
 

00:17:02.079 --> 00:17:03.910 align:start position:0%
on the 4.4 gigahertz 3100 making the
3300x<00:17:02.959><c> 2.2</c>

00:17:03.910 --> 00:17:03.920 align:start position:0%
3300x 2.2
 

00:17:03.920 --> 00:17:06.150 align:start position:0%
3300x 2.2
faster<00:17:04.559><c> with</c><00:17:04.799><c> memory</c><00:17:05.120><c> tuning</c><00:17:05.600><c> and</c><00:17:05.839><c> clock</c>

00:17:06.150 --> 00:17:06.160 align:start position:0%
faster with memory tuning and clock
 

00:17:06.160 --> 00:17:08.549 align:start position:0%
faster with memory tuning and clock
increases<00:17:06.640><c> the</c><00:17:06.799><c> 3100</c><00:17:07.439><c> finished</c><00:17:07.760><c> in</c><00:17:07.839><c> 31.8</c>

00:17:08.549 --> 00:17:08.559 align:start position:0%
increases the 3100 finished in 31.8
 

00:17:08.559 --> 00:17:09.110 align:start position:0%
increases the 3100 finished in 31.8
minutes

00:17:09.110 --> 00:17:09.120 align:start position:0%
minutes
 

00:17:09.120 --> 00:17:11.829 align:start position:0%
minutes
making<00:17:09.439><c> the</c><00:17:09.880><c> 3300x</c><00:17:11.120><c> a</c><00:17:11.199><c> little</c><00:17:11.439><c> over</c><00:17:11.679><c> one</c>

00:17:11.829 --> 00:17:11.839 align:start position:0%
making the 3300x a little over one
 

00:17:11.839 --> 00:17:12.870 align:start position:0%
making the 3300x a little over one
percent<00:17:12.240><c> faster</c>

00:17:12.870 --> 00:17:12.880 align:start position:0%
percent faster
 

00:17:12.880 --> 00:17:14.710 align:start position:0%
percent faster
these<00:17:13.120><c> results</c><00:17:13.600><c> are</c><00:17:13.760><c> roughly</c><00:17:14.079><c> representative</c>

00:17:14.710 --> 00:17:14.720 align:start position:0%
these results are roughly representative
 

00:17:14.720 --> 00:17:16.309 align:start position:0%
these results are roughly representative
of<00:17:14.880><c> those</c><00:17:15.120><c> other</c><00:17:15.280><c> benchmarks</c><00:17:15.760><c> as</c><00:17:15.919><c> well</c>

00:17:16.309 --> 00:17:16.319 align:start position:0%
of those other benchmarks as well
 

00:17:16.319 --> 00:17:17.990 align:start position:0%
of those other benchmarks as well
although<00:17:16.640><c> the</c><00:17:16.720><c> exact</c><00:17:17.039><c> numbers</c><00:17:17.360><c> are</c><00:17:17.520><c> different</c>

00:17:17.990 --> 00:17:18.000 align:start position:0%
although the exact numbers are different
 

00:17:18.000 --> 00:17:19.909 align:start position:0%
although the exact numbers are different
the<00:17:18.160><c> overclocks</c><00:17:18.880><c> aren't</c><00:17:19.120><c> hugely</c><00:17:19.520><c> different</c>

00:17:19.909 --> 00:17:19.919 align:start position:0%
the overclocks aren't hugely different
 

00:17:19.919 --> 00:17:21.189 align:start position:0%
the overclocks aren't hugely different
in<00:17:20.000><c> performance</c><00:17:20.480><c> to</c><00:17:20.559><c> begin</c><00:17:20.799><c> with</c><00:17:20.959><c> although</c>

00:17:21.189 --> 00:17:21.199 align:start position:0%
in performance to begin with although
 

00:17:21.199 --> 00:17:23.350 align:start position:0%
in performance to begin with although
the<00:17:21.360><c> performance</c><00:17:21.760><c> deficit</c><00:17:22.240><c> on</c><00:17:22.319><c> the</c><00:17:22.480><c> 3100</c><00:17:23.120><c> is</c>

00:17:23.350 --> 00:17:23.360 align:start position:0%
the performance deficit on the 3100 is
 

00:17:23.360 --> 00:17:24.949 align:start position:0%
the performance deficit on the 3100 is
largely<00:17:23.760><c> due</c><00:17:24.000><c> to</c><00:17:24.160><c> splitting</c><00:17:24.559><c> the</c><00:17:24.640><c> cores</c>

00:17:24.949 --> 00:17:24.959 align:start position:0%
largely due to splitting the cores
 

00:17:24.959 --> 00:17:26.949 align:start position:0%
largely due to splitting the cores
across<00:17:25.280><c> different</c><00:17:25.600><c> ccx's</c>

00:17:26.949 --> 00:17:26.959 align:start position:0%
across different ccx's
 

00:17:26.959 --> 00:17:29.750 align:start position:0%
across different ccx's
as<00:17:27.120><c> opposed</c><00:17:27.439><c> to</c><00:17:27.520><c> the</c><00:17:27.600><c> 3300x</c><00:17:28.880><c> this</c><00:17:29.120><c> deficit</c>

00:17:29.750 --> 00:17:29.760 align:start position:0%
as opposed to the 3300x this deficit
 

00:17:29.760 --> 00:17:31.669 align:start position:0%
as opposed to the 3300x this deficit
isn't<00:17:30.000><c> as</c><00:17:30.160><c> easy</c><00:17:30.400><c> to</c><00:17:30.480><c> make</c><00:17:30.720><c> up</c><00:17:30.880><c> as</c><00:17:31.039><c> just</c><00:17:31.280><c> simply</c>

00:17:31.669 --> 00:17:31.679 align:start position:0%
isn't as easy to make up as just simply
 

00:17:31.679 --> 00:17:33.190 align:start position:0%
isn't as easy to make up as just simply
cranking<00:17:32.000><c> the</c><00:17:32.160><c> infinity</c><00:17:32.480><c> fabric</c><00:17:32.799><c> as</c><00:17:32.960><c> high</c><00:17:33.120><c> as</c>

00:17:33.190 --> 00:17:33.200 align:start position:0%
cranking the infinity fabric as high as
 

00:17:33.200 --> 00:17:34.070 align:start position:0%
cranking the infinity fabric as high as
it<00:17:33.360><c> can</c><00:17:33.520><c> go</c>

00:17:34.070 --> 00:17:34.080 align:start position:0%
it can go
 

00:17:34.080 --> 00:17:35.990 align:start position:0%
it can go
and<00:17:34.240><c> even</c><00:17:34.480><c> doing</c><00:17:34.720><c> different</c><00:17:34.960><c> memory</c><00:17:35.679><c> leaving</c>

00:17:35.990 --> 00:17:36.000 align:start position:0%
and even doing different memory leaving
 

00:17:36.000 --> 00:17:37.510 align:start position:0%
and even doing different memory leaving
the<00:17:36.160><c> 3300x</c><00:17:37.120><c> on</c>

00:17:37.510 --> 00:17:37.520 align:start position:0%
the 3300x on
 

00:17:37.520 --> 00:17:39.430 align:start position:0%
the 3300x on
3200<00:17:38.080><c> megahertz</c><00:17:38.559><c> memory</c><00:17:39.039><c> although</c><00:17:39.280><c> still</c>

00:17:39.430 --> 00:17:39.440 align:start position:0%
3200 megahertz memory although still
 

00:17:39.440 --> 00:17:40.789 align:start position:0%
3200 megahertz memory although still
with<00:17:39.600><c> cl</c><00:17:39.840><c> 14</c>

00:17:40.789 --> 00:17:40.799 align:start position:0%
with cl 14
 

00:17:40.799 --> 00:17:42.950 align:start position:0%
with cl 14
that<00:17:41.039><c> didn't</c><00:17:41.360><c> really</c><00:17:41.919><c> help</c><00:17:42.240><c> in</c><00:17:42.320><c> this</c><00:17:42.400><c> scenario</c>

00:17:42.950 --> 00:17:42.960 align:start position:0%
that didn't really help in this scenario
 

00:17:42.960 --> 00:17:44.710 align:start position:0%
that didn't really help in this scenario
either<00:17:43.200><c> it</c><00:17:43.520><c> gets</c><00:17:43.760><c> it</c><00:17:43.919><c> closer</c>

00:17:44.710 --> 00:17:44.720 align:start position:0%
either it gets it closer
 

00:17:44.720 --> 00:17:47.270 align:start position:0%
either it gets it closer
but<00:17:45.039><c> we</c><00:17:45.200><c> were</c><00:17:45.440><c> unable</c><00:17:45.840><c> to</c><00:17:46.000><c> equate</c><00:17:46.400><c> 3300x</c>

00:17:47.270 --> 00:17:47.280 align:start position:0%
but we were unable to equate 3300x
 

00:17:47.280 --> 00:17:48.070 align:start position:0%
but we were unable to equate 3300x
performance

00:17:48.070 --> 00:17:48.080 align:start position:0%
performance
 

00:17:48.080 --> 00:17:50.310 align:start position:0%
performance
with<00:17:48.320><c> the</c><00:17:48.480><c> 3100</c><00:17:49.280><c> and</c><00:17:49.520><c> all</c><00:17:49.600><c> of</c><00:17:49.760><c> that</c><00:17:49.919><c> additional</c>

00:17:50.310 --> 00:17:50.320 align:start position:0%
with the 3100 and all of that additional
 

00:17:50.320 --> 00:17:52.070 align:start position:0%
with the 3100 and all of that additional
tuning<00:17:50.960><c> so</c><00:17:51.120><c> this</c><00:17:51.360><c> is</c><00:17:51.440><c> our</c>

00:17:52.070 --> 00:17:52.080 align:start position:0%
tuning so this is our
 

00:17:52.080 --> 00:17:54.150 align:start position:0%
tuning so this is our
best<00:17:52.400><c> effort</c><00:17:52.799><c> at</c><00:17:52.960><c> looking</c><00:17:53.280><c> into</c><00:17:53.520><c> this</c><00:17:53.840><c> without</c>

00:17:54.150 --> 00:17:54.160 align:start position:0%
best effort at looking into this without
 

00:17:54.160 --> 00:17:55.510 align:start position:0%
best effort at looking into this without
going<00:17:54.480><c> too</c><00:17:54.640><c> ridiculous</c>

00:17:55.510 --> 00:17:55.520 align:start position:0%
going too ridiculous
 

00:17:55.520 --> 00:17:57.110 align:start position:0%
going too ridiculous
obviously<00:17:56.080><c> you</c><00:17:56.240><c> could</c><00:17:56.320><c> always</c><00:17:56.559><c> do</c><00:17:56.720><c> more</c><00:17:57.039><c> we</c>

00:17:57.110 --> 00:17:57.120 align:start position:0%
obviously you could always do more we
 

00:17:57.120 --> 00:17:58.870 align:start position:0%
obviously you could always do more we
could<00:17:57.280><c> do</c><00:17:57.360><c> liquid</c><00:17:57.679><c> nitrogen</c><00:17:58.400><c> doesn't</c><00:17:58.640><c> really</c>

00:17:58.870 --> 00:17:58.880 align:start position:0%
could do liquid nitrogen doesn't really
 

00:17:58.880 --> 00:17:59.350 align:start position:0%
could do liquid nitrogen doesn't really
count

00:17:59.350 --> 00:17:59.360 align:start position:0%
count
 

00:17:59.360 --> 00:18:01.510 align:start position:0%
count
we<00:17:59.520><c> could</c><00:17:59.679><c> also</c><00:18:00.080><c> start</c><00:18:00.320><c> spending</c><00:18:01.039><c> uh</c><00:18:01.280><c> in</c>

00:18:01.510 --> 00:18:01.520 align:start position:0%
we could also start spending uh in
 

00:18:01.520 --> 00:18:03.190 align:start position:0%
we could also start spending uh in
theory<00:18:01.840><c> a</c><00:18:01.919><c> whole</c><00:18:02.080><c> lot</c><00:18:02.320><c> more</c><00:18:02.559><c> of</c><00:18:02.720><c> the</c>

00:18:03.190 --> 00:18:03.200 align:start position:0%
theory a whole lot more of the
 

00:18:03.200 --> 00:18:05.669 align:start position:0%
theory a whole lot more of the
assumed<00:18:03.600><c> budget</c><00:18:04.000><c> on</c><00:18:04.080><c> memory</c><00:18:04.559><c> and</c><00:18:05.120><c> even</c><00:18:05.360><c> that</c>

00:18:05.669 --> 00:18:05.679 align:start position:0%
assumed budget on memory and even that
 

00:18:05.679 --> 00:18:07.270 align:start position:0%
assumed budget on memory and even that
isn't<00:18:05.840><c> really</c><00:18:06.160><c> going</c><00:18:06.320><c> to</c><00:18:06.400><c> get</c><00:18:06.559><c> you</c><00:18:06.720><c> there</c>

00:18:07.270 --> 00:18:07.280 align:start position:0%
isn't really going to get you there
 

00:18:07.280 --> 00:18:09.430 align:start position:0%
isn't really going to get you there
so<00:18:08.160><c> the</c><00:18:08.400><c> end</c><00:18:08.559><c> result</c><00:18:08.799><c> here</c><00:18:09.039><c> is</c><00:18:09.120><c> that</c><00:18:09.280><c> it's</c>

00:18:09.430 --> 00:18:09.440 align:start position:0%
so the end result here is that it's
 

00:18:09.440 --> 00:18:11.430 align:start position:0%
so the end result here is that it's
better<00:18:10.000><c> to</c><00:18:10.160><c> just</c><00:18:10.320><c> spend</c><00:18:10.559><c> the</c><00:18:10.640><c> extra</c><00:18:10.960><c> 20</c>

00:18:11.430 --> 00:18:11.440 align:start position:0%
better to just spend the extra 20
 

00:18:11.440 --> 00:18:13.590 align:start position:0%
better to just spend the extra 20
on<00:18:11.600><c> the</c><00:18:11.679><c> 3300</c><00:18:12.320><c> x</c><00:18:12.720><c> than</c><00:18:12.880><c> it</c><00:18:12.960><c> would</c><00:18:13.120><c> be</c><00:18:13.200><c> to</c><00:18:13.280><c> do</c><00:18:13.440><c> all</c>

00:18:13.590 --> 00:18:13.600 align:start position:0%
on the 3300 x than it would be to do all
 

00:18:13.600 --> 00:18:15.110 align:start position:0%
on the 3300 x than it would be to do all
this<00:18:13.760><c> other</c><00:18:13.919><c> stuff</c><00:18:14.080><c> on</c><00:18:14.240><c> the</c><00:18:14.320><c> 3100</c>

00:18:15.110 --> 00:18:15.120 align:start position:0%
this other stuff on the 3100
 

00:18:15.120 --> 00:18:17.190 align:start position:0%
this other stuff on the 3100
and<00:18:15.360><c> still</c><00:18:15.520><c> have</c><00:18:15.679><c> a</c><00:18:15.760><c> worse</c><00:18:16.000><c> performer</c><00:18:16.480><c> overall</c>

00:18:17.190 --> 00:18:17.200 align:start position:0%
and still have a worse performer overall
 

00:18:17.200 --> 00:18:18.470 align:start position:0%
and still have a worse performer overall
part<00:18:17.440><c> of</c><00:18:17.520><c> the</c><00:18:17.600><c> issue</c><00:18:17.840><c> here</c><00:18:18.080><c> again</c>

00:18:18.470 --> 00:18:18.480 align:start position:0%
part of the issue here again
 

00:18:18.480 --> 00:18:20.230 align:start position:0%
part of the issue here again
might<00:18:18.640><c> be</c><00:18:18.799><c> the</c><00:18:18.880><c> separation</c><00:18:19.440><c> of</c><00:18:19.520><c> the</c><00:18:19.679><c> cache</c><00:18:20.160><c> as</c>

00:18:20.230 --> 00:18:20.240 align:start position:0%
might be the separation of the cache as
 

00:18:20.240 --> 00:18:22.150 align:start position:0%
might be the separation of the cache as
well<00:18:20.480><c> where</c><00:18:20.640><c> you're</c><00:18:20.799><c> splitting</c><00:18:21.200><c> it</c><00:18:21.360><c> into</c>

00:18:22.150 --> 00:18:22.160 align:start position:0%
well where you're splitting it into
 

00:18:22.160 --> 00:18:24.310 align:start position:0%
well where you're splitting it into
groups<00:18:22.480><c> of</c><00:18:22.640><c> eight</c><00:18:22.799><c> megabytes</c><00:18:23.360><c> l3</c><00:18:23.840><c> instead</c><00:18:24.080><c> of</c>

00:18:24.310 --> 00:18:24.320 align:start position:0%
groups of eight megabytes l3 instead of
 

00:18:24.320 --> 00:18:26.470 align:start position:0%
groups of eight megabytes l3 instead of
16<00:18:24.799><c> on</c><00:18:25.120><c> the</c><00:18:25.360><c> single</c>

00:18:26.470 --> 00:18:26.480 align:start position:0%
16 on the single
 

00:18:26.480 --> 00:18:30.070 align:start position:0%
16 on the single
ccx<00:18:27.679><c> for</c><00:18:27.840><c> the</c><00:18:28.160><c> 3300x</c><00:18:29.039><c> so</c><00:18:29.200><c> artificial</c><00:18:29.840><c> product</c>

00:18:30.070 --> 00:18:30.080 align:start position:0%
ccx for the 3300x so artificial product
 

00:18:30.080 --> 00:18:31.669 align:start position:0%
ccx for the 3300x so artificial product
segmentation<00:18:30.720><c> or</c><00:18:30.799><c> not</c>

00:18:31.669 --> 00:18:31.679 align:start position:0%
segmentation or not
 

00:18:31.679 --> 00:18:33.750 align:start position:0%
segmentation or not
the<00:18:31.840><c> end</c><00:18:32.000><c> result</c><00:18:32.320><c> here</c><00:18:32.480><c> is</c><00:18:32.640><c> that</c><00:18:33.039><c> finally</c>

00:18:33.750 --> 00:18:33.760 align:start position:0%
the end result here is that finally
 

00:18:33.760 --> 00:18:35.350 align:start position:0%
the end result here is that finally
there's<00:18:34.080><c> an</c><00:18:34.240><c> instance</c><00:18:34.559><c> where</c><00:18:34.799><c> the</c><00:18:34.960><c> lower</c><00:18:35.200><c> end</c>

00:18:35.350 --> 00:18:35.360 align:start position:0%
there's an instance where the lower end
 

00:18:35.360 --> 00:18:37.590 align:start position:0%
there's an instance where the lower end
of<00:18:35.440><c> the</c><00:18:35.520><c> ryzen</c><00:18:35.919><c> cpus</c>

00:18:37.590 --> 00:18:37.600 align:start position:0%
of the ryzen cpus
 

00:18:37.600 --> 00:18:39.990 align:start position:0%
of the ryzen cpus
with<00:18:37.840><c> the</c><00:18:37.919><c> same</c><00:18:38.240><c> core</c><00:18:38.480><c> count</c><00:18:38.960><c> configuration</c>

00:18:39.990 --> 00:18:40.000 align:start position:0%
with the same core count configuration
 

00:18:40.000 --> 00:18:41.669 align:start position:0%
with the same core count configuration
is<00:18:40.160><c> unable</c><00:18:40.559><c> to</c><00:18:40.640><c> just</c><00:18:40.799><c> be</c><00:18:40.960><c> overclocked</c><00:18:41.520><c> to</c>

00:18:41.669 --> 00:18:41.679 align:start position:0%
is unable to just be overclocked to
 

00:18:41.679 --> 00:18:41.990 align:start position:0%
is unable to just be overclocked to
match

00:18:41.990 --> 00:18:42.000 align:start position:0%
match
 

00:18:42.000 --> 00:18:43.590 align:start position:0%
match
its<00:18:42.160><c> higher</c><00:18:42.400><c> end</c><00:18:42.559><c> counterpart</c><00:18:43.039><c> with</c><00:18:43.200><c> an</c><00:18:43.360><c> x</c><00:18:43.520><c> at</c>

00:18:43.590 --> 00:18:43.600 align:start position:0%
its higher end counterpart with an x at
 

00:18:43.600 --> 00:18:45.190 align:start position:0%
its higher end counterpart with an x at
the<00:18:43.760><c> end</c><00:18:43.919><c> of</c><00:18:44.000><c> it</c><00:18:44.559><c> and</c>

00:18:45.190 --> 00:18:45.200 align:start position:0%
the end of it and
 

00:18:45.200 --> 00:18:48.470 align:start position:0%
the end of it and
so<00:18:45.360><c> in</c><00:18:45.520><c> that</c><00:18:45.679><c> regard</c><00:18:46.880><c> we</c><00:18:47.280><c> think</c><00:18:47.520><c> that</c><00:18:47.679><c> the</c><00:18:47.840><c> 3100</c>

00:18:48.470 --> 00:18:48.480 align:start position:0%
so in that regard we think that the 3100
 

00:18:48.480 --> 00:18:50.150 align:start position:0%
so in that regard we think that the 3100
is<00:18:48.720><c> probably</c><00:18:49.120><c> going</c><00:18:49.360><c> to</c><00:18:49.440><c> be</c><00:18:49.679><c> more</c><00:18:49.840><c> like</c><00:18:50.000><c> the</c>

00:18:50.150 --> 00:18:50.160 align:start position:0%
is probably going to be more like the
 

00:18:50.160 --> 00:18:51.029 align:start position:0%
is probably going to be more like the
1200

00:18:51.029 --> 00:18:51.039 align:start position:0%
1200
 

00:18:51.039 --> 00:18:52.870 align:start position:0%
1200
and<00:18:51.200><c> the</c><00:18:51.280><c> 1300x</c><00:18:52.080><c> relationship</c><00:18:52.640><c> in</c><00:18:52.799><c> the</c>

00:18:52.870 --> 00:18:52.880 align:start position:0%
and the 1300x relationship in the
 

00:18:52.880 --> 00:18:54.549 align:start position:0%
and the 1300x relationship in the
original<00:18:53.200><c> ryzen</c><00:18:53.520><c> launch</c><00:18:53.840><c> where</c>

00:18:54.549 --> 00:18:54.559 align:start position:0%
original ryzen launch where
 

00:18:54.559 --> 00:18:57.750 align:start position:0%
original ryzen launch where
one<00:18:54.799><c> of</c><00:18:54.880><c> them</c><00:18:55.440><c> is</c><00:18:55.600><c> just</c><00:18:56.000><c> forgotten</c><00:18:57.039><c> and</c><00:18:57.520><c> it's</c>

00:18:57.750 --> 00:18:57.760 align:start position:0%
one of them is just forgotten and it's
 

00:18:57.760 --> 00:18:58.630 align:start position:0%
one of them is just forgotten and it's
because<00:18:57.919><c> they're</c>

00:18:58.630 --> 00:18:58.640 align:start position:0%
because they're
 

00:18:58.640 --> 00:19:01.029 align:start position:0%
because they're
they're<00:18:58.880><c> close</c><00:18:59.200><c> enough</c><00:18:59.520><c> in</c><00:18:59.679><c> price</c><00:19:00.480><c> but</c><00:19:00.799><c> not</c>

00:19:01.029 --> 00:19:01.039 align:start position:0%
they're close enough in price but not
 

00:19:01.039 --> 00:19:01.990 align:start position:0%
they're close enough in price but not
that<00:19:01.280><c> close</c>

00:19:01.990 --> 00:19:02.000 align:start position:0%
that close
 

00:19:02.000 --> 00:19:04.150 align:start position:0%
that close
in<00:19:02.160><c> some</c><00:19:02.480><c> applications</c><00:19:03.039><c> and</c><00:19:03.200><c> performance</c><00:19:03.840><c> not</c>

00:19:04.150 --> 00:19:04.160 align:start position:0%
in some applications and performance not
 

00:19:04.160 --> 00:19:06.230 align:start position:0%
in some applications and performance not
proportionally<00:19:04.960><c> you're</c><00:19:05.280><c> often</c><00:19:05.600><c> paying</c>

00:19:06.230 --> 00:19:06.240 align:start position:0%
proportionally you're often paying
 

00:19:06.240 --> 00:19:08.070 align:start position:0%
proportionally you're often paying
less<00:19:06.480><c> than</c><00:19:06.720><c> a</c><00:19:06.799><c> dollar</c><00:19:07.120><c> per</c><00:19:07.360><c> percentage</c><00:19:07.840><c> point</c>

00:19:08.070 --> 00:19:08.080 align:start position:0%
less than a dollar per percentage point
 

00:19:08.080 --> 00:19:09.190 align:start position:0%
less than a dollar per percentage point
gained<00:19:08.400><c> if</c><00:19:08.480><c> you</c><00:19:08.559><c> want</c><00:19:08.640><c> to</c><00:19:08.720><c> look</c><00:19:08.880><c> at</c><00:19:08.960><c> it</c><00:19:09.039><c> that</c>

00:19:09.190 --> 00:19:09.200 align:start position:0%
gained if you want to look at it that
 

00:19:09.200 --> 00:19:10.070 align:start position:0%
gained if you want to look at it that
way

00:19:10.070 --> 00:19:10.080 align:start position:0%
way
 

00:19:10.080 --> 00:19:12.070 align:start position:0%
way
so<00:19:10.400><c> the</c><00:19:10.559><c> 3300</c><00:19:11.200><c> x</c><00:19:11.360><c> does</c><00:19:11.520><c> just</c><00:19:11.679><c> seem</c><00:19:11.840><c> like</c>

00:19:12.070 --> 00:19:12.080 align:start position:0%
so the 3300 x does just seem like
 

00:19:12.080 --> 00:19:13.750 align:start position:0%
so the 3300 x does just seem like
objectively<00:19:12.720><c> the</c><00:19:12.799><c> better</c><00:19:13.039><c> deal</c>

00:19:13.750 --> 00:19:13.760 align:start position:0%
objectively the better deal
 

00:19:13.760 --> 00:19:15.510 align:start position:0%
objectively the better deal
if<00:19:13.919><c> you</c><00:19:14.080><c> can</c><00:19:14.160><c> stretch</c><00:19:14.480><c> the</c><00:19:14.640><c> extra</c><00:19:14.880><c> 20</c><00:19:15.280><c> in</c><00:19:15.440><c> your</c>

00:19:15.510 --> 00:19:15.520 align:start position:0%
if you can stretch the extra 20 in your
 

00:19:15.520 --> 00:19:18.150 align:start position:0%
if you can stretch the extra 20 in your
budget<00:19:16.640><c> if</c><00:19:16.799><c> you</c><00:19:17.039><c> can't</c><00:19:17.440><c> well</c>

00:19:18.150 --> 00:19:18.160 align:start position:0%
budget if you can't well
 

00:19:18.160 --> 00:19:21.750 align:start position:0%
budget if you can't well
the<00:19:18.320><c> 3100</c><00:19:18.960><c> is</c><00:19:19.039><c> fine</c><00:19:20.080><c> the</c><00:19:20.400><c> 1600</c><00:19:20.960><c> af</c><00:19:21.280><c> is</c><00:19:21.440><c> a</c><00:19:21.520><c> whole</c>

00:19:21.750 --> 00:19:21.760 align:start position:0%
the 3100 is fine the 1600 af is a whole
 

00:19:21.760 --> 00:19:24.230 align:start position:0%
the 3100 is fine the 1600 af is a whole
hell<00:19:21.919><c> of</c><00:19:22.080><c> a</c><00:19:22.080><c> lot</c><00:19:22.320><c> more</c><00:19:22.480><c> appealing</c><00:19:22.960><c> at</c><00:19:23.120><c> 85</c>

00:19:24.230 --> 00:19:24.240 align:start position:0%
hell of a lot more appealing at 85
 

00:19:24.240 --> 00:19:25.830 align:start position:0%
hell of a lot more appealing at 85
and<00:19:24.480><c> amd</c><00:19:24.960><c> is</c><00:19:25.039><c> still</c><00:19:25.280><c> pushing</c><00:19:25.520><c> them</c><00:19:25.679><c> the</c>

00:19:25.830 --> 00:19:25.840 align:start position:0%
and amd is still pushing them the
 

00:19:25.840 --> 00:19:27.830 align:start position:0%
and amd is still pushing them the
channel<00:19:26.240><c> you</c><00:19:26.559><c> will</c><00:19:26.799><c> still</c><00:19:27.039><c> be</c><00:19:27.200><c> able</c><00:19:27.440><c> to</c><00:19:27.679><c> buy</c>

00:19:27.830 --> 00:19:27.840 align:start position:0%
channel you will still be able to buy
 

00:19:27.840 --> 00:19:28.470 align:start position:0%
channel you will still be able to buy
them

00:19:28.470 --> 00:19:28.480 align:start position:0%
them
 

00:19:28.480 --> 00:19:31.590 align:start position:0%
them
where<00:19:29.120><c> you</c><00:19:29.600><c> here</c><00:19:30.240><c> is</c><00:19:30.720><c> the</c><00:19:30.880><c> second</c>

00:19:31.590 --> 00:19:31.600 align:start position:0%
where you here is the second
 

00:19:31.600 --> 00:19:33.750 align:start position:0%
where you here is the second
uh<00:19:31.919><c> second</c><00:19:32.320><c> person</c><00:19:32.720><c> is</c><00:19:32.960><c> is</c><00:19:33.120><c> maybe</c><00:19:33.520><c> a</c><00:19:33.600><c> bit</c>

00:19:33.750 --> 00:19:33.760 align:start position:0%
uh second person is is maybe a bit
 

00:19:33.760 --> 00:19:35.029 align:start position:0%
uh second person is is maybe a bit
ambiguous<00:19:34.400><c> because</c>

00:19:35.029 --> 00:19:35.039 align:start position:0%
ambiguous because
 

00:19:35.039 --> 00:19:37.270 align:start position:0%
ambiguous because
uh<00:19:35.679><c> you</c><00:19:36.160><c> might</c><00:19:36.400><c> end</c><00:19:36.559><c> up</c><00:19:36.720><c> actually</c><00:19:36.880><c> just</c><00:19:37.039><c> being</c>

00:19:37.270 --> 00:19:37.280 align:start position:0%
uh you might end up actually just being
 

00:19:37.280 --> 00:19:39.669 align:start position:0%
uh you might end up actually just being
scalpers<00:19:37.760><c> you</c><00:19:37.919><c> sell</c><00:19:38.080><c> it</c><00:19:38.160><c> for</c><00:19:38.240><c> 150</c><00:19:39.120><c> bucks</c>

00:19:39.669 --> 00:19:39.679 align:start position:0%
scalpers you sell it for 150 bucks
 

00:19:39.679 --> 00:19:41.590 align:start position:0%
scalpers you sell it for 150 bucks
instead<00:19:40.160><c> but</c><00:19:40.640><c> if</c><00:19:40.720><c> you</c><00:19:40.880><c> can</c><00:19:41.039><c> grab</c><00:19:41.280><c> one</c><00:19:41.440><c> it's</c><00:19:41.600><c> a</c>

00:19:41.590 --> 00:19:41.600 align:start position:0%
instead but if you can grab one it's a
 

00:19:41.600 --> 00:19:43.750 align:start position:0%
instead but if you can grab one it's a
way<00:19:41.760><c> better</c><00:19:42.000><c> deal</c><00:19:42.160><c> than</c><00:19:42.320><c> a</c><00:19:42.400><c> 3100</c><00:19:42.960><c> for</c><00:19:43.120><c> sure</c>

00:19:43.750 --> 00:19:43.760 align:start position:0%
way better deal than a 3100 for sure
 

00:19:43.760 --> 00:19:45.430 align:start position:0%
way better deal than a 3100 for sure
there's<00:19:44.400><c> absolutely</c><00:19:44.799><c> no</c><00:19:44.960><c> point</c><00:19:45.120><c> to</c><00:19:45.200><c> buying</c><00:19:45.360><c> a</c>

00:19:45.430 --> 00:19:45.440 align:start position:0%
there's absolutely no point to buying a
 

00:19:45.440 --> 00:19:47.669 align:start position:0%
there's absolutely no point to buying a
3100<00:19:46.240><c> if</c><00:19:46.400><c> you</c><00:19:46.480><c> can</c><00:19:46.559><c> get</c><00:19:46.640><c> a</c><00:19:46.720><c> 1600</c><00:19:47.200><c> af</c>

00:19:47.669 --> 00:19:47.679 align:start position:0%
3100 if you can get a 1600 af
 

00:19:47.679 --> 00:19:50.870 align:start position:0%
3100 if you can get a 1600 af
before<00:19:48.000><c> it's</c><00:19:48.160><c> actually</c><00:19:48.960><c> intended</c><00:19:49.440><c> msrp</c><00:19:50.400><c> so</c>

00:19:50.870 --> 00:19:50.880 align:start position:0%
before it's actually intended msrp so
 

00:19:50.880 --> 00:19:53.029 align:start position:0%
before it's actually intended msrp so
anyway<00:19:51.360><c> uh</c><00:19:51.600><c> yeah</c><00:19:51.760><c> 3300x</c><00:19:52.559><c> looks</c><00:19:52.720><c> pretty</c><00:19:52.880><c> good</c>

00:19:53.029 --> 00:19:53.039 align:start position:0%
anyway uh yeah 3300x looks pretty good
 

00:19:53.039 --> 00:19:54.549 align:start position:0%
anyway uh yeah 3300x looks pretty good
here<00:19:53.280><c> the</c><00:19:53.440><c> gap</c><00:19:53.679><c> can't</c><00:19:53.840><c> be</c><00:19:54.000><c> just</c><00:19:54.160><c> magically</c>

00:19:54.549 --> 00:19:54.559 align:start position:0%
here the gap can't be just magically
 

00:19:54.559 --> 00:19:56.630 align:start position:0%
here the gap can't be just magically
erased<00:19:54.880><c> with</c><00:19:55.039><c> additional</c><00:19:55.440><c> overclocking</c>

00:19:56.630 --> 00:19:56.640 align:start position:0%
erased with additional overclocking
 

00:19:56.640 --> 00:19:59.029 align:start position:0%
erased with additional overclocking
uh<00:19:56.960><c> at</c><00:19:57.120><c> least</c><00:19:57.360><c> not</c><00:19:57.600><c> without</c><00:19:58.559><c> getting</c><00:19:58.799><c> into</c>

00:19:59.029 --> 00:19:59.039 align:start position:0%
uh at least not without getting into
 

00:19:59.039 --> 00:20:00.549 align:start position:0%
uh at least not without getting into
levels<00:19:59.360><c> that</c><00:19:59.520><c> aren't</c><00:19:59.679><c> realistic</c><00:20:00.080><c> anymore</c>

00:20:00.549 --> 00:20:00.559 align:start position:0%
levels that aren't realistic anymore
 

00:20:00.559 --> 00:20:01.510 align:start position:0%
levels that aren't realistic anymore
so<00:20:00.640><c> that's</c><00:20:00.880><c> it</c><00:20:00.960><c> for</c><00:20:01.039><c> this</c><00:20:01.120><c> one</c><00:20:01.280><c> thanks</c><00:20:01.440><c> for</c>

00:20:01.510 --> 00:20:01.520 align:start position:0%
so that's it for this one thanks for
 

00:20:01.520 --> 00:20:03.149 align:start position:0%
so that's it for this one thanks for
watching<00:20:01.840><c> subscribe</c><00:20:02.159><c> for</c><00:20:02.320><c> more</c><00:20:02.559><c> go</c><00:20:02.720><c> to</c>

00:20:03.149 --> 00:20:03.159 align:start position:0%
watching subscribe for more go to
 

00:20:03.159 --> 00:20:04.310 align:start position:0%
watching subscribe for more go to
store.cameratexas.net

00:20:04.310 --> 00:20:04.320 align:start position:0%
store.cameratexas.net
 

00:20:04.320 --> 00:20:06.789 align:start position:0%
store.cameratexas.net
or<00:20:04.840><c> patreon.comgamers</c><00:20:06.320><c> to</c><00:20:06.400><c> help</c><00:20:06.559><c> us</c><00:20:06.720><c> out</c>

00:20:06.789 --> 00:20:06.799 align:start position:0%
or patreon.comgamers to help us out
 

00:20:06.799 --> 00:20:08.310 align:start position:0%
or patreon.comgamers to help us out
directly<00:20:07.120><c> with</c><00:20:07.280><c> stuff</c><00:20:07.520><c> like</c><00:20:07.679><c> this</c>

00:20:08.310 --> 00:20:08.320 align:start position:0%
directly with stuff like this
 

00:20:08.320 --> 00:20:10.789 align:start position:0%
directly with stuff like this
it's<00:20:08.640><c> a</c><00:20:08.880><c> significant</c><00:20:09.440><c> help</c><00:20:10.000><c> and</c><00:20:10.240><c> allows</c><00:20:10.640><c> us</c><00:20:10.720><c> to</c>

00:20:10.789 --> 00:20:10.799 align:start position:0%
it's a significant help and allows us to
 

00:20:10.799 --> 00:20:12.549 align:start position:0%
it's a significant help and allows us to
reduce<00:20:11.200><c> our</c><00:20:11.280><c> reliance</c><00:20:11.760><c> on</c><00:20:11.919><c> advertisers</c><00:20:12.480><c> so</c>

00:20:12.549 --> 00:20:12.559 align:start position:0%
reduce our reliance on advertisers so
 

00:20:12.559 --> 00:20:13.909 align:start position:0%
reduce our reliance on advertisers so
thank<00:20:12.720><c> you</c><00:20:12.799><c> for</c><00:20:12.960><c> your</c><00:20:13.120><c> support</c><00:20:13.440><c> there</c>

00:20:13.909 --> 00:20:13.919 align:start position:0%
thank you for your support there
 

00:20:13.919 --> 00:20:19.970 align:start position:0%
thank you for your support there
and<00:20:14.000><c> we'll</c><00:20:14.159><c> see</c><00:20:14.240><c> you</c><00:20:14.400><c> all</c><00:20:14.559><c> next</c><00:20:18.840><c> time</c>

00:20:19.970 --> 00:20:19.980 align:start position:0%
and we'll see you all next time
 

00:20:19.980 --> 00:20:29.470 align:start position:0%
and we'll see you all next time
[Music]

00:20:29.470 --> 00:20:29.480 align:start position:0%
 
 

00:20:29.480 --> 00:20:32.480 align:start position:0%
 
so

