WEBVTT
Kind: captions
Language: en

00:00:00.920 --> 00:00:03.050 align:start position:0%
 
this<00:00:01.920><c> is</c><00:00:02.010><c> another</c><00:00:02.280><c> personal</c><00:00:02.790><c> curiosity</c>

00:00:03.050 --> 00:00:03.060 align:start position:0%
this is another personal curiosity
 

00:00:03.060 --> 00:00:05.630 align:start position:0%
this is another personal curiosity
benchmark<00:00:03.899><c> we</c><00:00:04.049><c> did</c><00:00:04.230><c> with</c><00:00:04.470><c> the</c><00:00:04.620><c> 10</c><00:00:04.890><c> 600</c><00:00:05.339><c> K</c><00:00:05.490><c> this</c>

00:00:05.630 --> 00:00:05.640 align:start position:0%
benchmark we did with the 10 600 K this
 

00:00:05.640 --> 00:00:07.970 align:start position:0%
benchmark we did with the 10 600 K this
time<00:00:05.879><c> our</c><00:00:06.120><c> most</c><00:00:06.359><c> recent</c><00:00:06.569><c> type</c><00:00:07.410><c> of</c><00:00:07.589><c> benchmark</c>

00:00:07.970 --> 00:00:07.980 align:start position:0%
time our most recent type of benchmark
 

00:00:07.980 --> 00:00:10.280 align:start position:0%
time our most recent type of benchmark
content<00:00:08.429><c> around</c><00:00:09.000><c> just</c><00:00:09.450><c> wondering</c><00:00:10.019><c> what</c><00:00:10.139><c> would</c>

00:00:10.280 --> 00:00:10.290 align:start position:0%
content around just wondering what would
 

00:00:10.290 --> 00:00:13.070 align:start position:0%
content around just wondering what would
happen<00:00:10.620><c> was</c><00:00:11.070><c> the</c><00:00:11.219><c> rise</c><00:00:11.400><c> in</c><00:00:11.610><c> 330</c><00:00:12.120><c> 300</c><00:00:12.719><c> X</c><00:00:12.929><c> and</c>

00:00:13.070 --> 00:00:13.080 align:start position:0%
happen was the rise in 330 300 X and
 

00:00:13.080 --> 00:00:15.650 align:start position:0%
happen was the rise in 330 300 X and
3100<00:00:13.799><c> when</c><00:00:14.250><c> we</c><00:00:14.370><c> set</c><00:00:14.639><c> higher</c><00:00:15.030><c> memory</c><00:00:15.240><c> clocks</c>

00:00:15.650 --> 00:00:15.660 align:start position:0%
3100 when we set higher memory clocks
 

00:00:15.660 --> 00:00:18.080 align:start position:0%
3100 when we set higher memory clocks
better<00:00:16.379><c> memory</c><00:00:16.710><c> timings</c><00:00:17.220><c> and</c><00:00:17.460><c> we</c><00:00:17.640><c> also</c><00:00:17.760><c> played</c>

00:00:18.080 --> 00:00:18.090 align:start position:0%
better memory timings and we also played
 

00:00:18.090 --> 00:00:19.099 align:start position:0%
better memory timings and we also played
around<00:00:18.210><c> with</c><00:00:18.300><c> some</c><00:00:18.390><c> of</c><00:00:18.539><c> the</c><00:00:18.600><c> other</c><00:00:18.750><c> settings</c>

00:00:19.099 --> 00:00:19.109 align:start position:0%
around with some of the other settings
 

00:00:19.109 --> 00:00:21.710 align:start position:0%
around with some of the other settings
specific<00:00:19.560><c> to</c><00:00:19.590><c> the</c><00:00:19.830><c> AMD</c><00:00:20.189><c> Rison</c><00:00:20.609><c> ZP</c><00:00:20.910><c> is</c><00:00:20.939><c> so</c><00:00:21.600><c> for</c>

00:00:21.710 --> 00:00:21.720 align:start position:0%
specific to the AMD Rison ZP is so for
 

00:00:21.720 --> 00:00:24.050 align:start position:0%
specific to the AMD Rison ZP is so for
this<00:00:21.810><c> one</c><00:00:22.080><c> we're</c><00:00:22.529><c> taking</c><00:00:22.830><c> the</c><00:00:22.920><c> 10</c><00:00:23.130><c> 600</c><00:00:23.580><c> K</c><00:00:23.730><c> and</c>

00:00:24.050 --> 00:00:24.060 align:start position:0%
this one we're taking the 10 600 K and
 

00:00:24.060 --> 00:00:25.400 align:start position:0%
this one we're taking the 10 600 K and
rather<00:00:24.210><c> than</c><00:00:24.359><c> just</c><00:00:24.570><c> doing</c><00:00:24.689><c> the</c><00:00:24.900><c> simple</c><00:00:25.230><c> all</c>

00:00:25.400 --> 00:00:25.410 align:start position:0%
rather than just doing the simple all
 

00:00:25.410 --> 00:00:27.320 align:start position:0%
rather than just doing the simple all
quarto<00:00:25.769><c> see</c><00:00:25.980><c> that</c><00:00:26.130><c> we</c><00:00:26.189><c> do</c><00:00:26.340><c> four</c><00:00:26.640><c> reviews</c><00:00:27.090><c> as</c>

00:00:27.320 --> 00:00:27.330 align:start position:0%
quarto see that we do four reviews as
 

00:00:27.330 --> 00:00:28.820 align:start position:0%
quarto see that we do four reviews as
standard<00:00:28.050><c> part</c><00:00:28.260><c> of</c><00:00:28.320><c> the</c><00:00:28.410><c> review</c><00:00:28.619><c> process</c>

00:00:28.820 --> 00:00:28.830 align:start position:0%
standard part of the review process
 

00:00:28.830 --> 00:00:31.759 align:start position:0%
standard part of the review process
we've<00:00:29.550><c> also</c><00:00:29.760><c> applied</c><00:00:29.970><c> a</c><00:00:30.179><c> cache</c><00:00:30.570><c> overclock</c><00:00:31.529><c> and</c>

00:00:31.759 --> 00:00:31.769 align:start position:0%
we've also applied a cache overclock and
 

00:00:31.769 --> 00:00:34.280 align:start position:0%
we've also applied a cache overclock and
we've<00:00:32.309><c> applied</c><00:00:32.880><c> that</c><00:00:33.210><c> our</c><00:00:33.660><c> memory</c><00:00:34.020><c> settings</c>

00:00:34.280 --> 00:00:34.290 align:start position:0%
we've applied that our memory settings
 

00:00:34.290 --> 00:00:36.350 align:start position:0%
we've applied that our memory settings
and<00:00:34.770><c> just</c><00:00:35.100><c> put</c><00:00:35.309><c> faster</c><00:00:35.730><c> memory</c><00:00:35.969><c> in</c><00:00:36.090><c> in</c><00:00:36.210><c> general</c>

00:00:36.350 --> 00:00:36.360 align:start position:0%
and just put faster memory in in general
 

00:00:36.360 --> 00:00:38.090 align:start position:0%
and just put faster memory in in general
to<00:00:36.960><c> see</c><00:00:37.110><c> how</c><00:00:37.530><c> it</c><00:00:37.680><c> would</c><00:00:37.829><c> change</c><00:00:37.860><c> the</c>

00:00:38.090 --> 00:00:38.100 align:start position:0%
to see how it would change the
 

00:00:38.100 --> 00:00:40.970 align:start position:0%
to see how it would change the
performance<00:00:38.309><c> so</c><00:00:39.030><c> as</c><00:00:39.360><c> of</c><00:00:39.840><c> the</c><00:00:39.989><c> review</c><00:00:40.379><c> which</c>

00:00:40.970 --> 00:00:40.980 align:start position:0%
performance so as of the review which
 

00:00:40.980 --> 00:00:42.470 align:start position:0%
performance so as of the review which
has<00:00:41.399><c> all</c><00:00:41.610><c> the</c><00:00:41.760><c> data</c><00:00:41.879><c> you'll</c><00:00:42.120><c> need</c><00:00:42.270><c> to</c><00:00:42.390><c> make</c>

00:00:42.470 --> 00:00:42.480 align:start position:0%
has all the data you'll need to make
 

00:00:42.480 --> 00:00:45.440 align:start position:0%
has all the data you'll need to make
decisions<00:00:43.260><c> as</c><00:00:43.410><c> of</c><00:00:43.920><c> the</c><00:00:43.980><c> review</c><00:00:44.309><c> the</c><00:00:44.730><c> 10</c><00:00:44.910><c> 600</c><00:00:45.329><c> K</c>

00:00:45.440 --> 00:00:45.450 align:start position:0%
decisions as of the review the 10 600 K
 

00:00:45.450 --> 00:00:47.959 align:start position:0%
decisions as of the review the 10 600 K
with<00:00:45.600><c> a</c><00:00:45.629><c> simple</c><00:00:46.050><c> all</c><00:00:46.200><c> core</c><00:00:46.469><c> OC</c><00:00:46.800><c> of</c><00:00:46.829><c> 5.1</c><00:00:47.640><c> ish</c>

00:00:47.959 --> 00:00:47.969 align:start position:0%
with a simple all core OC of 5.1 ish
 

00:00:47.969 --> 00:00:50.240 align:start position:0%
with a simple all core OC of 5.1 ish
gets<00:00:48.719><c> us</c><00:00:48.870><c> to</c><00:00:49.020><c> about</c><00:00:49.289><c> the</c><00:00:49.500><c> performance</c><00:00:49.950><c> level</c>

00:00:50.240 --> 00:00:50.250 align:start position:0%
gets us to about the performance level
 

00:00:50.250 --> 00:00:52.459 align:start position:0%
gets us to about the performance level
of<00:00:50.430><c> a</c><00:00:50.730><c> 9900</c><00:00:51.329><c> K</c><00:00:51.480><c> and</c><00:00:51.660><c> most</c><00:00:51.840><c> benchmarks</c><00:00:52.350><c> and</c>

00:00:52.459 --> 00:00:52.469 align:start position:0%
of a 9900 K and most benchmarks and
 

00:00:52.469 --> 00:00:54.490 align:start position:0%
of a 9900 K and most benchmarks and
pretty<00:00:52.739><c> close</c><00:00:53.039><c> to</c><00:00:53.250><c> a</c><00:00:53.309><c> ten</c><00:00:53.489><c> nine</c><00:00:53.640><c> hundred</c><00:00:53.850><c> K</c><00:00:54.000><c> in</c>

00:00:54.490 --> 00:00:54.500 align:start position:0%
pretty close to a ten nine hundred K in
 

00:00:54.500 --> 00:00:56.450 align:start position:0%
pretty close to a ten nine hundred K in
some<00:00:55.500><c> of</c><00:00:55.590><c> the</c><00:00:55.680><c> other</c><00:00:55.829><c> benchmarks</c><00:00:56.190><c> depending</c>

00:00:56.450 --> 00:00:56.460 align:start position:0%
some of the other benchmarks depending
 

00:00:56.460 --> 00:00:58.040 align:start position:0%
some of the other benchmarks depending
what<00:00:56.520><c> you're</c><00:00:56.670><c> looking</c><00:00:56.910><c> at</c><00:00:57.030><c> so</c><00:00:57.449><c> here</c><00:00:57.870><c> we're</c>

00:00:58.040 --> 00:00:58.050 align:start position:0%
what you're looking at so here we're
 

00:00:58.050 --> 00:01:00.229 align:start position:0%
what you're looking at so here we're
gonna<00:00:58.140><c> see</c><00:00:58.320><c> how</c><00:00:58.530><c> much</c><00:00:58.710><c> does</c><00:00:59.010><c> just</c><00:00:59.640><c> the</c><00:00:59.820><c> ring</c><00:01:00.030><c> or</c>

00:01:00.229 --> 00:01:00.239 align:start position:0%
gonna see how much does just the ring or
 

00:01:00.239 --> 00:01:01.970 align:start position:0%
gonna see how much does just the ring or
the<00:01:00.300><c> cache</c><00:01:00.600><c> overclocked</c><00:01:01.230><c> really</c><00:01:01.680><c> affect</c>

00:01:01.970 --> 00:01:01.980 align:start position:0%
the cache overclocked really affect
 

00:01:01.980 --> 00:01:03.950 align:start position:0%
the cache overclocked really affect
things<00:01:02.100><c> also</c><00:01:02.370><c> known</c><00:01:02.579><c> as</c><00:01:02.640><c> encore</c><00:01:03.090><c> and</c><00:01:03.270><c> then</c><00:01:03.750><c> on</c>

00:01:03.950 --> 00:01:03.960 align:start position:0%
things also known as encore and then on
 

00:01:03.960 --> 00:01:06.080 align:start position:0%
things also known as encore and then on
top<00:01:04.199><c> of</c><00:01:04.260><c> that</c><00:01:04.439><c> tested</c><00:01:04.949><c> separately</c><00:01:05.309><c> how</c><00:01:05.909><c> much</c>

00:01:06.080 --> 00:01:06.090 align:start position:0%
top of that tested separately how much
 

00:01:06.090 --> 00:01:09.320 align:start position:0%
top of that tested separately how much
does<00:01:06.330><c> a</c><00:01:06.360><c> cache</c><00:01:06.810><c> overclocked</c><00:01:07.680><c> plus</c><00:01:08.460><c> a</c><00:01:08.790><c> memory</c>

00:01:09.320 --> 00:01:09.330 align:start position:0%
does a cache overclocked plus a memory
 

00:01:09.330 --> 00:01:11.719 align:start position:0%
does a cache overclocked plus a memory
overclock<00:01:09.810><c> and</c><00:01:10.170><c> very</c><00:01:10.740><c> light</c><00:01:11.010><c> memory</c><00:01:11.340><c> tuning</c>

00:01:11.719 --> 00:01:11.729 align:start position:0%
overclock and very light memory tuning
 

00:01:11.729 --> 00:01:13.820 align:start position:0%
overclock and very light memory tuning
affect<00:01:12.299><c> the</c><00:01:12.450><c> total</c><00:01:12.720><c> performance</c><00:01:12.990><c> of</c><00:01:13.290><c> the</c><00:01:13.650><c> 10</c>

00:01:13.820 --> 00:01:13.830 align:start position:0%
affect the total performance of the 10
 

00:01:13.830 --> 00:01:15.859 align:start position:0%
affect the total performance of the 10
600<00:01:14.280><c> K</c><00:01:14.490><c> before</c><00:01:14.820><c> that</c><00:01:15.210><c> this</c><00:01:15.420><c> video</c><00:01:15.659><c> is</c><00:01:15.750><c> brought</c>

00:01:15.859 --> 00:01:15.869 align:start position:0%
600 K before that this video is brought
 

00:01:15.869 --> 00:01:18.830 align:start position:0%
600 K before that this video is brought
to<00:01:15.960><c> you</c><00:01:16.110><c> by</c><00:01:16.170><c> MSI</c><00:01:16.830><c> and</c><00:01:17.100><c> the</c><00:01:17.189><c> Z</c><00:01:17.340><c> 490</c><00:01:17.880><c> unify</c><00:01:18.299><c> ITX</c>

00:01:18.830 --> 00:01:18.840 align:start position:0%
to you by MSI and the Z 490 unify ITX
 

00:01:18.840 --> 00:01:21.469 align:start position:0%
to you by MSI and the Z 490 unify ITX
motherboard<00:01:18.930><c> for</c><00:01:19.439><c> Intel</c><00:01:19.799><c> 10</c><00:01:20.040><c> series</c><00:01:20.310><c> CPUs</c><00:01:20.820><c> the</c>

00:01:21.469 --> 00:01:21.479 align:start position:0%
motherboard for Intel 10 series CPUs the
 

00:01:21.479 --> 00:01:24.140 align:start position:0%
motherboard for Intel 10 series CPUs the
MSI<00:01:21.840><c> is</c><00:01:21.900><c> e</c><00:01:22.110><c> 490</c><00:01:22.590><c> unify</c><00:01:22.950><c> ITX</c><00:01:23.400><c> board</c><00:01:23.700><c> benefits</c>

00:01:24.140 --> 00:01:24.150 align:start position:0%
MSI is e 490 unify ITX board benefits
 

00:01:24.150 --> 00:01:25.609 align:start position:0%
MSI is e 490 unify ITX board benefits
from<00:01:24.299><c> a</c><00:01:24.390><c> memory</c><00:01:24.659><c> layout</c><00:01:24.869><c> that</c><00:01:25.140><c> makes</c><00:01:25.320><c> memory</c>

00:01:25.609 --> 00:01:25.619 align:start position:0%
from a memory layout that makes memory
 

00:01:25.619 --> 00:01:27.679 align:start position:0%
from a memory layout that makes memory
overclocking<00:01:26.220><c> easy</c><00:01:26.460><c> positioning</c><00:01:27.420><c> the</c><00:01:27.509><c> board</c>

00:01:27.679 --> 00:01:27.689 align:start position:0%
overclocking easy positioning the board
 

00:01:27.689 --> 00:01:29.179 align:start position:0%
overclocking easy positioning the board
well<00:01:27.869><c> for</c><00:01:28.140><c> enthusiasts</c><00:01:28.710><c> who</c><00:01:28.770><c> want</c><00:01:28.950><c> to</c><00:01:29.009><c> tinker</c>

00:01:29.179 --> 00:01:29.189 align:start position:0%
well for enthusiasts who want to tinker
 

00:01:29.189 --> 00:01:32.660 align:start position:0%
well for enthusiasts who want to tinker
on<00:01:29.400><c> a</c><00:01:29.430><c> bench</c><00:01:29.729><c> or</c><00:01:30.150><c> in</c><00:01:30.210><c> an</c><00:01:30.780><c> ITX</c><00:01:31.170><c> system</c><00:01:31.619><c> the</c><00:01:32.100><c> MSI</c><00:01:32.460><c> Z</c>

00:01:32.660 --> 00:01:32.670 align:start position:0%
on a bench or in an ITX system the MSI Z
 

00:01:32.670 --> 00:01:35.569 align:start position:0%
on a bench or in an ITX system the MSI Z
490<00:01:33.180><c> unify</c><00:01:33.689><c> runs</c><00:01:33.990><c> ninety</c><00:01:34.470><c> amplifier</c><00:01:34.950><c> stages</c><00:01:35.280><c> a</c>

00:01:35.569 --> 00:01:35.579 align:start position:0%
490 unify runs ninety amplifier stages a
 

00:01:35.579 --> 00:01:38.179 align:start position:0%
490 unify runs ninety amplifier stages a
10<00:01:36.030><c> layer</c><00:01:36.180><c> PCB</c><00:01:36.810><c> and</c><00:01:37.049><c> seats</c><00:01:37.650><c> the</c><00:01:37.829><c> memory</c><00:01:38.070><c> as</c>

00:01:38.179 --> 00:01:38.189 align:start position:0%
10 layer PCB and seats the memory as
 

00:01:38.189 --> 00:01:40.010 align:start position:0%
10 layer PCB and seats the memory as
close<00:01:38.460><c> to</c><00:01:38.610><c> the</c><00:01:38.700><c> socket</c><00:01:39.030><c> as</c><00:01:39.150><c> possible</c><00:01:39.630><c> all</c><00:01:39.810><c> of</c>

00:01:40.010 --> 00:01:40.020 align:start position:0%
close to the socket as possible all of
 

00:01:40.020 --> 00:01:41.450 align:start position:0%
close to the socket as possible all of
which<00:01:40.110><c> benefit</c><00:01:40.590><c> the</c><00:01:40.619><c> overclocking</c>

00:01:41.450 --> 00:01:41.460 align:start position:0%
which benefit the overclocking
 

00:01:41.460 --> 00:01:43.700 align:start position:0%
which benefit the overclocking
experience<00:01:42.180><c> learn</c><00:01:42.720><c> more</c><00:01:42.750><c> at</c><00:01:43.140><c> the</c><00:01:43.259><c> link</c><00:01:43.470><c> in</c><00:01:43.619><c> the</c>

00:01:43.700 --> 00:01:43.710 align:start position:0%
experience learn more at the link in the
 

00:01:43.710 --> 00:01:45.319 align:start position:0%
experience learn more at the link in the
description<00:01:44.100><c> below</c><00:01:44.220><c> the</c><00:01:44.610><c> most</c><00:01:44.790><c> interesting</c>

00:01:45.319 --> 00:01:45.329 align:start position:0%
description below the most interesting
 

00:01:45.329 --> 00:01:46.700 align:start position:0%
description below the most interesting
thing<00:01:45.479><c> that</c><00:01:45.509><c> we</c><00:01:45.720><c> discovered</c><00:01:46.049><c> in</c><00:01:46.229><c> the</c><00:01:46.290><c> process</c>

00:01:46.700 --> 00:01:46.710 align:start position:0%
thing that we discovered in the process
 

00:01:46.710 --> 00:01:48.679 align:start position:0%
thing that we discovered in the process
of<00:01:46.829><c> doing</c><00:01:46.920><c> these</c><00:01:47.250><c> extra</c><00:01:47.610><c> benchmarks</c><00:01:48.119><c> was</c><00:01:48.509><c> that</c>

00:01:48.679 --> 00:01:48.689 align:start position:0%
of doing these extra benchmarks was that
 

00:01:48.689 --> 00:01:50.510 align:start position:0%
of doing these extra benchmarks was that
we<00:01:48.840><c> actually</c><00:01:48.990><c> found</c><00:01:49.470><c> one</c><00:01:49.860><c> game</c><00:01:50.100><c> where</c><00:01:50.340><c> there</c>

00:01:50.510 --> 00:01:50.520 align:start position:0%
we actually found one game where there
 

00:01:50.520 --> 00:01:52.370 align:start position:0%
we actually found one game where there
is<00:01:50.670><c> a</c><00:01:50.700><c> memory</c><00:01:51.180><c> bottleneck</c><00:01:51.630><c> not</c><00:01:51.930><c> a</c><00:01:51.960><c> GPU</c>

00:01:52.370 --> 00:01:52.380 align:start position:0%
is a memory bottleneck not a GPU
 

00:01:52.380 --> 00:01:53.660 align:start position:0%
is a memory bottleneck not a GPU
bottleneck<00:01:52.829><c> despite</c><00:01:53.189><c> everything</c><00:01:53.399><c> being</c>

00:01:53.660 --> 00:01:53.670 align:start position:0%
bottleneck despite everything being
 

00:01:53.670 --> 00:01:55.130 align:start position:0%
bottleneck despite everything being
textbook<00:01:54.210><c> GPU</c><00:01:54.540><c> bottleneck</c>

00:01:55.130 --> 00:01:55.140 align:start position:0%
textbook GPU bottleneck
 

00:01:55.140 --> 00:01:58.459 align:start position:0%
textbook GPU bottleneck
from<00:01:55.619><c> that</c><00:01:55.860><c> list</c><00:01:56.250><c> of</c><00:01:56.399><c> results</c><00:01:57.090><c> so</c><00:01:57.840><c> to</c><00:01:58.320><c> keep</c>

00:01:58.459 --> 00:01:58.469 align:start position:0%
from that list of results so to keep
 

00:01:58.469 --> 00:02:00.289 align:start position:0%
from that list of results so to keep
this<00:01:58.649><c> realistic</c><00:01:59.219><c> we</c><00:01:59.579><c> only</c><00:01:59.729><c> spent</c><00:02:00.030><c> about</c><00:02:00.180><c> an</c>

00:02:00.289 --> 00:02:00.299 align:start position:0%
this realistic we only spent about an
 

00:02:00.299 --> 00:02:01.969 align:start position:0%
this realistic we only spent about an
hour<00:02:00.450><c> to</c><00:02:00.719><c> an</c><00:02:00.750><c> hour</c><00:02:00.930><c> and</c><00:02:01.049><c> a</c><00:02:01.110><c> half</c><00:02:01.290><c> doing</c><00:02:01.500><c> memory</c>

00:02:01.969 --> 00:02:01.979 align:start position:0%
hour to an hour and a half doing memory
 

00:02:01.979 --> 00:02:04.609 align:start position:0%
hour to an hour and a half doing memory
tuning<00:02:02.340><c> and</c><00:02:02.520><c> the</c><00:02:03.360><c> overclock</c><00:02:04.110><c> settings</c><00:02:04.500><c> for</c>

00:02:04.609 --> 00:02:04.619 align:start position:0%
tuning and the overclock settings for
 

00:02:04.619 --> 00:02:06.889 align:start position:0%
tuning and the overclock settings for
the<00:02:04.680><c> CPUs</c><00:02:05.100><c> that</c><00:02:05.130><c> be</c><00:02:05.490><c> cache</c><00:02:05.729><c> and</c><00:02:06.030><c> then</c><00:02:06.390><c> all</c><00:02:06.630><c> core</c>

00:02:06.889 --> 00:02:06.899 align:start position:0%
the CPUs that be cache and then all core
 

00:02:06.899 --> 00:02:09.380 align:start position:0%
the CPUs that be cache and then all core
and<00:02:07.110><c> the</c><00:02:07.649><c> whole</c><00:02:07.799><c> point</c><00:02:08.009><c> of</c><00:02:08.190><c> this</c><00:02:08.340><c> was</c><00:02:08.640><c> to</c><00:02:08.940><c> keep</c>

00:02:09.380 --> 00:02:09.390 align:start position:0%
and the whole point of this was to keep
 

00:02:09.390 --> 00:02:11.630 align:start position:0%
and the whole point of this was to keep
it<00:02:09.539><c> realistic</c><00:02:10.020><c> within</c><00:02:10.619><c> our</c><00:02:11.190><c> own</c><00:02:11.280><c> time</c>

00:02:11.630 --> 00:02:11.640 align:start position:0%
it realistic within our own time
 

00:02:11.640 --> 00:02:12.979 align:start position:0%
it realistic within our own time
constraints<00:02:12.120><c> with</c><00:02:12.209><c> other</c><00:02:12.330><c> content</c><00:02:12.810><c> but</c><00:02:12.959><c> also</c>

00:02:12.979 --> 00:02:12.989 align:start position:0%
constraints with other content but also
 

00:02:12.989 --> 00:02:13.370 align:start position:0%
constraints with other content but also
to

00:02:13.370 --> 00:02:13.380 align:start position:0%
to
 

00:02:13.380 --> 00:02:14.840 align:start position:0%
to
keep<00:02:13.470><c> it</c><00:02:13.590><c> real</c><00:02:13.710><c> Isaac</c><00:02:13.950><c> from</c><00:02:14.100><c> what</c><00:02:14.220><c> users</c><00:02:14.700><c> doing</c>

00:02:14.840 --> 00:02:14.850 align:start position:0%
keep it real Isaac from what users doing
 

00:02:14.850 --> 00:02:16.910 align:start position:0%
keep it real Isaac from what users doing
so<00:02:15.390><c> we</c><00:02:15.870><c> will</c><00:02:16.020><c> eventually</c><00:02:16.290><c> be</c><00:02:16.470><c> doing</c><00:02:16.740><c> some</c>

00:02:16.910 --> 00:02:16.920 align:start position:0%
so we will eventually be doing some
 

00:02:16.920 --> 00:02:18.590 align:start position:0%
so we will eventually be doing some
liquid-nitrogen<00:02:17.220><c> overclocking</c><00:02:18.210><c> with</c><00:02:18.420><c> these</c>

00:02:18.590 --> 00:02:18.600 align:start position:0%
liquid-nitrogen overclocking with these
 

00:02:18.600 --> 00:02:21.290 align:start position:0%
liquid-nitrogen overclocking with these
CPUs<00:02:18.810><c> we</c><00:02:19.650><c> normally</c><00:02:19.920><c> do</c><00:02:20.100><c> but</c><00:02:20.460><c> that's</c><00:02:20.940><c> not</c>

00:02:21.290 --> 00:02:21.300 align:start position:0%
CPUs we normally do but that's not
 

00:02:21.300 --> 00:02:24.050 align:start position:0%
CPUs we normally do but that's not
really<00:02:21.690><c> what</c><00:02:22.170><c> most</c><00:02:22.380><c> users</c><00:02:22.920><c> end</c><00:02:23.220><c> up</c><00:02:23.370><c> doing</c><00:02:23.670><c> so</c>

00:02:24.050 --> 00:02:24.060 align:start position:0%
really what most users end up doing so
 

00:02:24.060 --> 00:02:25.910 align:start position:0%
really what most users end up doing so
this<00:02:24.240><c> gives</c><00:02:24.480><c> you</c><00:02:24.570><c> a</c><00:02:24.600><c> better</c><00:02:24.780><c> look</c><00:02:25.050><c> at</c><00:02:25.260><c> what's</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
this gives you a better look at what's
 

00:02:25.920 --> 00:02:27.770 align:start position:0%
this gives you a better look at what's
something<00:02:26.190><c> reasonable</c><00:02:26.820><c> that</c><00:02:27.270><c> you</c><00:02:27.330><c> can</c><00:02:27.600><c> do</c>

00:02:27.770 --> 00:02:27.780 align:start position:0%
something reasonable that you can do
 

00:02:27.780 --> 00:02:29.900 align:start position:0%
something reasonable that you can do
when<00:02:28.380><c> you</c><00:02:28.500><c> buy</c><00:02:28.650><c> these</c><00:02:28.710><c> the</c><00:02:29.190><c> CPU</c><00:02:29.580><c> and</c><00:02:29.670><c> you</c><00:02:29.760><c> want</c>

00:02:29.900 --> 00:02:29.910 align:start position:0%
when you buy these the CPU and you want
 

00:02:29.910 --> 00:02:31.040 align:start position:0%
when you buy these the CPU and you want
to<00:02:29.970><c> maybe</c><00:02:30.060><c> try</c><00:02:30.330><c> and</c><00:02:30.450><c> match</c><00:02:30.570><c> a</c><00:02:30.750><c> ten</c><00:02:30.900><c> nine</c>

00:02:31.040 --> 00:02:31.050 align:start position:0%
to maybe try and match a ten nine
 

00:02:31.050 --> 00:02:32.330 align:start position:0%
to maybe try and match a ten nine
hundred<00:02:31.290><c> K</c><00:02:31.380><c> and</c><00:02:31.470><c> performance</c><00:02:31.830><c> but</c><00:02:31.920><c> spend</c><00:02:32.160><c> half</c>

00:02:32.330 --> 00:02:32.340 align:start position:0%
hundred K and performance but spend half
 

00:02:32.340 --> 00:02:34.010 align:start position:0%
hundred K and performance but spend half
the<00:02:32.520><c> money</c><00:02:32.670><c> if</c><00:02:33.000><c> you're</c><00:02:33.420><c> just</c><00:02:33.600><c> focusing</c><00:02:33.960><c> on</c>

00:02:34.010 --> 00:02:34.020 align:start position:0%
the money if you're just focusing on
 

00:02:34.020 --> 00:02:35.420 align:start position:0%
the money if you're just focusing on
something<00:02:34.290><c> like</c><00:02:34.380><c> gaming</c><00:02:34.680><c> or</c><00:02:35.190><c> something</c>

00:02:35.420 --> 00:02:35.430 align:start position:0%
something like gaming or something
 

00:02:35.430 --> 00:02:37.160 align:start position:0%
something like gaming or something
that's<00:02:35.520><c> more</c><00:02:35.670><c> bandwidth</c><00:02:36.390><c> bound</c><00:02:36.570><c> and</c><00:02:36.840><c> memory</c>

00:02:37.160 --> 00:02:37.170 align:start position:0%
that's more bandwidth bound and memory
 

00:02:37.170 --> 00:02:39.560 align:start position:0%
that's more bandwidth bound and memory
we're<00:02:37.500><c> latency</c><00:02:37.980><c> bound</c><00:02:38.130><c> than</c><00:02:38.640><c> it</c><00:02:38.760><c> is</c><00:02:38.880><c> core</c><00:02:39.300><c> or</c>

00:02:39.560 --> 00:02:39.570 align:start position:0%
we're latency bound than it is core or
 

00:02:39.570 --> 00:02:40.910 align:start position:0%
we're latency bound than it is core or
thread<00:02:39.870><c> count</c><00:02:40.110><c> bound</c><00:02:40.350><c> at</c><00:02:40.500><c> which</c><00:02:40.620><c> point</c><00:02:40.860><c> you</c>

00:02:40.910 --> 00:02:40.920 align:start position:0%
thread count bound at which point you
 

00:02:40.920 --> 00:02:42.410 align:start position:0%
thread count bound at which point you
would<00:02:41.070><c> have</c><00:02:41.280><c> to</c><00:02:41.400><c> go</c><00:02:41.490><c> with</c><00:02:41.520><c> the</c><00:02:41.670><c> higher-end</c><00:02:41.820><c> CPU</c>

00:02:42.410 --> 00:02:42.420 align:start position:0%
would have to go with the higher-end CPU
 

00:02:42.420 --> 00:02:44.150 align:start position:0%
would have to go with the higher-end CPU
so<00:02:43.080><c> we</c><00:02:43.200><c> have</c><00:02:43.380><c> some</c><00:02:43.650><c> experience</c><00:02:43.890><c> between</c>

00:02:44.150 --> 00:02:44.160 align:start position:0%
so we have some experience between
 

00:02:44.160 --> 00:02:46.070 align:start position:0%
so we have some experience between
memory<00:02:44.490><c> tuning</c><00:02:44.820><c> we've</c><00:02:45.330><c> done</c><00:02:45.540><c> a</c><00:02:45.570><c> lot</c><00:02:45.780><c> of</c><00:02:45.810><c> it</c><00:02:45.990><c> on</c>

00:02:46.070 --> 00:02:46.080 align:start position:0%
memory tuning we've done a lot of it on
 

00:02:46.080 --> 00:02:48.290 align:start position:0%
memory tuning we've done a lot of it on
streams<00:02:46.440><c> but</c><00:02:46.920><c> we're</c><00:02:47.160><c> far</c><00:02:47.430><c> from</c><00:02:47.670><c> the</c><00:02:47.760><c> likes</c><00:02:47.970><c> of</c>

00:02:48.290 --> 00:02:48.300 align:start position:0%
streams but we're far from the likes of
 

00:02:48.300 --> 00:02:50.030 align:start position:0%
streams but we're far from the likes of
the<00:02:48.600><c> pros</c><00:02:48.810><c> here</c><00:02:49.050><c> of</c><00:02:49.140><c> overclockers</c><00:02:49.770><c> people</c>

00:02:50.030 --> 00:02:50.040 align:start position:0%
the pros here of overclockers people
 

00:02:50.040 --> 00:02:52.130 align:start position:0%
the pros here of overclockers people
like<00:02:50.160><c> their</c><00:02:50.580><c> Bower</c><00:02:50.760><c> or</c><00:02:51.120><c> build</c><00:02:51.330><c> Zoid</c><00:02:51.510><c> and</c><00:02:51.750><c> so</c>

00:02:52.130 --> 00:02:52.140 align:start position:0%
like their Bower or build Zoid and so
 

00:02:52.140 --> 00:02:53.900 align:start position:0%
like their Bower or build Zoid and so
that<00:02:52.320><c> puts</c><00:02:52.560><c> us</c><00:02:52.710><c> maybe</c><00:02:53.280><c> in</c><00:02:53.460><c> the</c><00:02:53.550><c> middle</c><00:02:53.790><c> of</c>

00:02:53.900 --> 00:02:53.910 align:start position:0%
that puts us maybe in the middle of
 

00:02:53.910 --> 00:02:56.330 align:start position:0%
that puts us maybe in the middle of
where<00:02:54.180><c> a</c><00:02:54.450><c> lot</c><00:02:55.260><c> of</c><00:02:55.500><c> you</c><00:02:55.710><c> might</c><00:02:55.890><c> be</c><00:02:55.920><c> you</c><00:02:56.310><c> might</c>

00:02:56.330 --> 00:02:56.340 align:start position:0%
where a lot of you might be you might
 

00:02:56.340 --> 00:02:57.710 align:start position:0%
where a lot of you might be you might
not<00:02:56.670><c> have</c><00:02:56.760><c> much</c><00:02:56.910><c> experience</c><00:02:57.090><c> playing</c><00:02:57.630><c> around</c>

00:02:57.710 --> 00:02:57.720 align:start position:0%
not have much experience playing around
 

00:02:57.720 --> 00:02:59.090 align:start position:0%
not have much experience playing around
with<00:02:57.870><c> any</c><00:02:57.990><c> overclocking</c><00:02:58.560><c> maybe</c><00:02:58.740><c> didn't</c><00:02:58.950><c> ever</c>

00:02:59.090 --> 00:02:59.100 align:start position:0%
with any overclocking maybe didn't ever
 

00:02:59.100 --> 00:03:00.560 align:start position:0%
with any overclocking maybe didn't ever
never<00:02:59.400><c> have</c><00:02:59.490><c> done</c><00:02:59.850><c> any</c><00:03:00.000><c> liquid</c><00:03:00.330><c> nitrogen</c>

00:03:00.560 --> 00:03:00.570 align:start position:0%
never have done any liquid nitrogen
 

00:03:00.570 --> 00:03:03.140 align:start position:0%
never have done any liquid nitrogen
overclocking<00:03:01.170><c> but</c><00:03:01.650><c> also</c><00:03:01.830><c> below</c><00:03:02.310><c> that</c><00:03:02.910><c> higher</c>

00:03:03.140 --> 00:03:03.150 align:start position:0%
overclocking but also below that higher
 

00:03:03.150 --> 00:03:05.420 align:start position:0%
overclocking but also below that higher
echelon<00:03:03.420><c> of</c><00:03:03.770><c> overclockers</c><00:03:04.770><c> so</c><00:03:04.950><c> hopefully</c><00:03:05.340><c> we</c>

00:03:05.420 --> 00:03:05.430 align:start position:0%
echelon of overclockers so hopefully we
 

00:03:05.430 --> 00:03:07.190 align:start position:0%
echelon of overclockers so hopefully we
can<00:03:05.550><c> provide</c><00:03:05.820><c> a</c><00:03:05.880><c> unique</c><00:03:06.330><c> insight</c><00:03:06.720><c> as</c><00:03:07.140><c> to</c>

00:03:07.190 --> 00:03:07.200 align:start position:0%
can provide a unique insight as to
 

00:03:07.200 --> 00:03:09.950 align:start position:0%
can provide a unique insight as to
what's<00:03:07.530><c> realistic</c><00:03:08.010><c> for</c><00:03:08.220><c> a</c><00:03:08.400><c> 24/7</c><00:03:09.240><c> daily</c><00:03:09.810><c> use</c>

00:03:09.950 --> 00:03:09.960 align:start position:0%
what's realistic for a 24/7 daily use
 

00:03:09.960 --> 00:03:11.780 align:start position:0%
what's realistic for a 24/7 daily use
system<00:03:10.350><c> with</c><00:03:10.500><c> some</c><00:03:10.650><c> overclock</c><00:03:11.010><c> supplied</c><00:03:11.340><c> for</c>

00:03:11.780 --> 00:03:11.790 align:start position:0%
system with some overclock supplied for
 

00:03:11.790 --> 00:03:14.810 align:start position:0%
system with some overclock supplied for
memory<00:03:12.090><c> we</c><00:03:12.240><c> used</c><00:03:12.480><c> high-end</c><00:03:13.380><c> expensive</c><00:03:14.250><c> kit</c><00:03:14.670><c> of</c>

00:03:14.810 --> 00:03:14.820 align:start position:0%
memory we used high-end expensive kit of
 

00:03:14.820 --> 00:03:17.380 align:start position:0%
memory we used high-end expensive kit of
g.skill<00:03:15.150><c> Triton</c><00:03:15.540><c> seed</c><00:03:15.690><c> royal</c><00:03:15.930><c> 4000</c><00:03:16.920><c> megahertz</c>

00:03:17.380 --> 00:03:17.390 align:start position:0%
g.skill Triton seed royal 4000 megahertz
 

00:03:17.390 --> 00:03:20.150 align:start position:0%
g.skill Triton seed royal 4000 megahertz
15<00:03:18.390><c> 1616</c><00:03:19.350><c> memory</c><00:03:19.650><c> and</c><00:03:19.800><c> then</c><00:03:19.890><c> we</c><00:03:19.980><c> did</c><00:03:20.130><c> some</c>

00:03:20.150 --> 00:03:20.160 align:start position:0%
15 1616 memory and then we did some
 

00:03:20.160 --> 00:03:21.950 align:start position:0%
15 1616 memory and then we did some
extra<00:03:20.880><c> tuna</c><00:03:21.030><c> on</c><00:03:21.210><c> top</c><00:03:21.390><c> of</c><00:03:21.540><c> that</c><00:03:21.600><c> but</c><00:03:21.780><c> not</c><00:03:21.900><c> much</c>

00:03:21.950 --> 00:03:21.960 align:start position:0%
extra tuna on top of that but not much
 

00:03:21.960 --> 00:03:24.710 align:start position:0%
extra tuna on top of that but not much
and<00:03:22.380><c> for</c><00:03:23.190><c> our</c><00:03:23.400><c> standard</c><00:03:23.790><c> benchmarks</c><00:03:24.270><c> we</c><00:03:24.600><c> use</c><00:03:24.690><c> a</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
and for our standard benchmarks we use a
 

00:03:24.720 --> 00:03:26.360 align:start position:0%
and for our standard benchmarks we use a
3200<00:03:25.410><c> set</c><00:03:25.530><c> of</c><00:03:25.620><c> memory</c><00:03:25.830><c> you</c><00:03:25.920><c> can</c><00:03:26.040><c> look</c><00:03:26.160><c> at</c><00:03:26.250><c> our</c>

00:03:26.360 --> 00:03:26.370 align:start position:0%
3200 set of memory you can look at our
 

00:03:26.370 --> 00:03:27.980 align:start position:0%
3200 set of memory you can look at our
CPU<00:03:26.640><c> testing</c><00:03:26.970><c> methodology</c><00:03:27.420><c> for</c><00:03:27.510><c> details</c><00:03:27.870><c> on</c>

00:03:27.980 --> 00:03:27.990 align:start position:0%
CPU testing methodology for details on
 

00:03:27.990 --> 00:03:28.880 align:start position:0%
CPU testing methodology for details on
what<00:03:28.230><c> exactly</c><00:03:28.260><c> it</c><00:03:28.710><c> is</c>

00:03:28.880 --> 00:03:28.890 align:start position:0%
what exactly it is
 

00:03:28.890 --> 00:03:31.940 align:start position:0%
what exactly it is
that's<00:03:29.430><c> CL</c><00:03:29.700><c> 14</c><00:03:30.090><c> so</c><00:03:30.480><c> there's</c><00:03:30.630><c> only</c><00:03:30.690><c> one</c><00:03:30.920><c> set</c><00:03:31.920><c> of</c>

00:03:31.940 --> 00:03:31.950 align:start position:0%
that's CL 14 so there's only one set of
 

00:03:31.950 --> 00:03:33.530 align:start position:0%
that's CL 14 so there's only one set of
numbers<00:03:32.340><c> in</c><00:03:32.460><c> all</c><00:03:32.550><c> the</c><00:03:32.700><c> charts</c><00:03:32.940><c> that</c><00:03:33.120><c> has</c><00:03:33.270><c> this</c>

00:03:33.530 --> 00:03:33.540 align:start position:0%
numbers in all the charts that has this
 

00:03:33.540 --> 00:03:36.230 align:start position:0%
numbers in all the charts that has this
higher<00:03:33.870><c> and</c><00:03:34.280><c> 4000</c><00:03:35.280><c> megahertz</c><00:03:35.610><c> g.skill</c><00:03:35.970><c> memory</c>

00:03:36.230 --> 00:03:36.240 align:start position:0%
higher and 4000 megahertz g.skill memory
 

00:03:36.240 --> 00:03:39.050 align:start position:0%
higher and 4000 megahertz g.skill memory
we<00:03:37.200><c> lowered</c><00:03:37.470><c> the</c><00:03:37.500><c> timings</c><00:03:37.950><c> successfully</c><00:03:38.910><c> to</c>

00:03:39.050 --> 00:03:39.060 align:start position:0%
we lowered the timings successfully to
 

00:03:39.060 --> 00:03:42.410 align:start position:0%
we lowered the timings successfully to
15<00:03:39.390><c> 15</c><00:03:39.540><c> 15</c><00:03:39.930><c> 34</c><00:03:40.650><c> and</c><00:03:41.340><c> 4</c><00:03:41.580><c> primary</c><00:03:41.790><c> timings</c><00:03:42.330><c> and</c>

00:03:42.410 --> 00:03:42.420 align:start position:0%
15 15 15 34 and 4 primary timings and
 

00:03:42.420 --> 00:03:44.390 align:start position:0%
15 15 15 34 and 4 primary timings and
then<00:03:42.540><c> we</c><00:03:42.630><c> set</c><00:03:42.840><c> the</c><00:03:42.870><c> refresh</c><00:03:43.290><c> cycle</c><00:03:43.709><c> to</c><00:03:44.250><c> about</c>

00:03:44.390 --> 00:03:44.400 align:start position:0%
then we set the refresh cycle to about
 

00:03:44.400 --> 00:03:47.270 align:start position:0%
then we set the refresh cycle to about
280<00:03:44.610><c> 282</c><00:03:45.180><c> and</c><00:03:45.420><c> for</c><00:03:45.900><c> active</c><00:03:46.230><c> window</c><00:03:46.410><c> 228</c><00:03:47.100><c> so</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
280 282 and for active window 228 so
 

00:03:47.280 --> 00:03:48.980 align:start position:0%
280 282 and for active window 228 so
those<00:03:47.430><c> were</c><00:03:47.520><c> the</c><00:03:47.610><c> additional</c><00:03:47.970><c> settings</c><00:03:48.120><c> more</c>

00:03:48.980 --> 00:03:48.990 align:start position:0%
those were the additional settings more
 

00:03:48.990 --> 00:03:50.990 align:start position:0%
those were the additional settings more
tuning<00:03:49.350><c> could</c><00:03:49.530><c> for</c><00:03:49.709><c> sure</c><00:03:49.890><c> be</c><00:03:50.070><c> done</c><00:03:50.250><c> but</c><00:03:50.610><c> we</c>

00:03:50.990 --> 00:03:51.000 align:start position:0%
tuning could for sure be done but we
 

00:03:51.000 --> 00:03:52.160 align:start position:0%
tuning could for sure be done but we
stopped<00:03:51.240><c> there</c><00:03:51.390><c> that</c><00:03:51.540><c> was</c><00:03:51.660><c> about</c><00:03:51.780><c> the</c><00:03:51.870><c> one</c><00:03:52.020><c> to</c>

00:03:52.160 --> 00:03:52.170 align:start position:0%
stopped there that was about the one to
 

00:03:52.170 --> 00:03:53.660 align:start position:0%
stopped there that was about the one to
one<00:03:52.290><c> and</c><00:03:52.410><c> a</c><00:03:52.440><c> half</c><00:03:52.500><c> hour</c><00:03:52.770><c> mark</c><00:03:53.040><c> and</c><00:03:53.220><c> then</c>

00:03:53.660 --> 00:03:53.670 align:start position:0%
one and a half hour mark and then
 

00:03:53.670 --> 00:03:56.090 align:start position:0%
one and a half hour mark and then
applied<00:03:54.360><c> the</c><00:03:54.540><c> cache</c><00:03:54.750><c> on</c><00:03:54.990><c> the</c><00:03:55.140><c> all</c><00:03:55.350><c> core</c><00:03:55.650><c> OC</c><00:03:56.010><c> at</c>

00:03:56.090 --> 00:03:56.100 align:start position:0%
applied the cache on the all core OC at
 

00:03:56.100 --> 00:03:58.190 align:start position:0%
applied the cache on the all core OC at
that<00:03:56.280><c> point</c><00:03:56.580><c> as</c><00:03:56.910><c> for</c><00:03:57.180><c> the</c><00:03:57.240><c> cash</c><00:03:57.450><c> ratio</c><00:03:57.750><c> that's</c>

00:03:58.190 --> 00:03:58.200 align:start position:0%
that point as for the cash ratio that's
 

00:03:58.200 --> 00:03:59.840 align:start position:0%
that point as for the cash ratio that's
an<00:03:58.470><c> option</c><00:03:59.040><c> you'll</c><00:03:59.160><c> see</c><00:03:59.190><c> normally</c><00:03:59.730><c> in</c><00:03:59.760><c> the</c>

00:03:59.840 --> 00:03:59.850 align:start position:0%
an option you'll see normally in the
 

00:03:59.850 --> 00:04:01.580 align:start position:0%
an option you'll see normally in the
extreme<00:04:00.150><c> tuning</c><00:04:00.510><c> page</c><00:04:00.720><c> of</c><00:04:00.930><c> bios</c><00:04:01.230><c> alongside</c>

00:04:01.580 --> 00:04:01.590 align:start position:0%
extreme tuning page of bios alongside
 

00:04:01.590 --> 00:04:04.900 align:start position:0%
extreme tuning page of bios alongside
the<00:04:02.070><c> core</c><00:04:02.540><c> multiplier</c><00:04:03.540><c> and</c><00:04:03.810><c> for</c><00:04:04.320><c> that</c><00:04:04.410><c> one</c><00:04:04.560><c> we</c>

00:04:04.900 --> 00:04:04.910 align:start position:0%
the core multiplier and for that one we
 

00:04:04.910 --> 00:04:08.449 align:start position:0%
the core multiplier and for that one we
successfully<00:04:05.910><c> got</c><00:04:06.060><c> it</c><00:04:06.180><c> to</c><00:04:06.270><c> 48</c><00:04:06.690><c> x</c><00:04:06.930><c> and</c><00:04:07.459><c> we</c>

00:04:08.449 --> 00:04:08.459 align:start position:0%
successfully got it to 48 x and we
 

00:04:08.459 --> 00:04:10.940 align:start position:0%
successfully got it to 48 x and we
tested<00:04:08.820><c> up</c><00:04:08.970><c> to</c><00:04:09.000><c> 50</c><00:04:09.450><c> 51</c><00:04:09.840><c> but</c><00:04:10.560><c> it</c><00:04:10.650><c> just</c><00:04:10.740><c> wasn't</c>

00:04:10.940 --> 00:04:10.950 align:start position:0%
tested up to 50 51 but it just wasn't
 

00:04:10.950 --> 00:04:13.550 align:start position:0%
tested up to 50 51 but it just wasn't
holding<00:04:11.250><c> it</c><00:04:11.550><c> was</c><00:04:11.730><c> blue</c><00:04:12.060><c> screen</c><00:04:12.390><c> so</c><00:04:12.870><c> 48</c><00:04:13.200><c> acts</c><00:04:13.410><c> is</c>

00:04:13.550 --> 00:04:13.560 align:start position:0%
holding it was blue screen so 48 acts is
 

00:04:13.560 --> 00:04:15.050 align:start position:0%
holding it was blue screen so 48 acts is
where<00:04:13.709><c> it</c><00:04:13.770><c> was</c><00:04:13.830><c> reasonable</c><00:04:14.340><c> that</c><00:04:14.730><c> was</c><00:04:14.940><c> with</c>

00:04:15.050 --> 00:04:15.060 align:start position:0%
where it was reasonable that was with
 

00:04:15.060 --> 00:04:17.000 align:start position:0%
where it was reasonable that was with
our<00:04:15.209><c> existing</c><00:04:15.600><c> 5.1</c><00:04:16.109><c> gigahertz</c><00:04:16.380><c> all</c><00:04:16.709><c> core</c>

00:04:17.000 --> 00:04:17.010 align:start position:0%
our existing 5.1 gigahertz all core
 

00:04:17.010 --> 00:04:20.180 align:start position:0%
our existing 5.1 gigahertz all core
overclock<00:04:17.459><c> on</c><00:04:17.609><c> the</c><00:04:17.700><c> 10</c><00:04:17.880><c> 600</c><00:04:18.330><c> K</c><00:04:18.480><c> and</c><00:04:18.980><c> that</c><00:04:19.980><c> was</c>

00:04:20.180 --> 00:04:20.190 align:start position:0%
overclock on the 10 600 K and that was
 

00:04:20.190 --> 00:04:22.099 align:start position:0%
overclock on the 10 600 K and that was
while<00:04:20.370><c> running</c><00:04:20.670><c> pretty</c><00:04:21.330><c> close</c><00:04:21.630><c> to</c><00:04:21.840><c> thermal</c>

00:04:22.099 --> 00:04:22.109 align:start position:0%
while running pretty close to thermal
 

00:04:22.109 --> 00:04:26.270 align:start position:0%
while running pretty close to thermal
constraints<00:04:22.260><c> but</c><00:04:22.650><c> not</c><00:04:22.740><c> quite</c><00:04:22.950><c> there</c><00:04:23.130><c> at</c><00:04:25.280><c> 1.38</c>

00:04:26.270 --> 00:04:26.280 align:start position:0%
constraints but not quite there at 1.38
 

00:04:26.280 --> 00:04:27.230 align:start position:0%
constraints but not quite there at 1.38
V<00:04:26.640><c> course</c>

00:04:27.230 --> 00:04:27.240 align:start position:0%
V course
 

00:04:27.240 --> 00:04:29.629 align:start position:0%
V course
which<00:04:27.479><c> was</c><00:04:27.630><c> about</c><00:04:27.780><c> 1.35</c><00:04:28.530><c> the</c><00:04:28.919><c> courgette</c><00:04:29.460><c> and</c>

00:04:29.629 --> 00:04:29.639 align:start position:0%
which was about 1.35 the courgette and
 

00:04:29.639 --> 00:04:32.779 align:start position:0%
which was about 1.35 the courgette and
so<00:04:30.419><c> with</c><00:04:30.780><c> a</c><00:04:30.810><c> 280</c><00:04:31.169><c> m</c><00:04:31.289><c> LC</c><00:04:31.410><c> LC</c><00:04:31.710><c> at</c><00:04:32.039><c> max</c><00:04:32.250><c> speeds</c><00:04:32.610><c> with</c>

00:04:32.779 --> 00:04:32.789 align:start position:0%
so with a 280 m LC LC at max speeds with
 

00:04:32.789 --> 00:04:34.999 align:start position:0%
so with a 280 m LC LC at max speeds with
one<00:04:32.940><c> of</c><00:04:33.000><c> the</c><00:04:33.090><c> better</c><00:04:33.240><c> one</c><00:04:33.930><c> at</c><00:04:34.020><c> the</c><00:04:34.080><c> top</c><00:04:34.289><c> 280</c><00:04:34.889><c> m</c>

00:04:34.999 --> 00:04:35.009 align:start position:0%
one of the better one at the top 280 m
 

00:04:35.009 --> 00:04:36.939 align:start position:0%
one of the better one at the top 280 m
LC<00:04:35.099><c> LC</c><00:04:35.370><c> s</c><00:04:35.520><c> on</c><00:04:35.610><c> the</c><00:04:35.699><c> market</c><00:04:36.030><c> the</c><00:04:36.150><c> crack</c><00:04:36.330><c> in</c><00:04:36.449><c> X</c><00:04:36.599><c> 62</c>

00:04:36.939 --> 00:04:36.949 align:start position:0%
LC LC s on the market the crack in X 62
 

00:04:36.949 --> 00:04:39.499 align:start position:0%
LC LC s on the market the crack in X 62
that's<00:04:37.949><c> where</c><00:04:38.220><c> we</c><00:04:38.340><c> kind</c><00:04:38.490><c> of</c><00:04:38.699><c> were</c><00:04:38.970><c> limited</c><00:04:39.389><c> by</c>

00:04:39.499 --> 00:04:39.509 align:start position:0%
that's where we kind of were limited by
 

00:04:39.509 --> 00:04:40.700 align:start position:0%
that's where we kind of were limited by
thermals<00:04:39.900><c> couldn't</c><00:04:40.169><c> really</c><00:04:40.259><c> go</c><00:04:40.410><c> much</c><00:04:40.530><c> further</c>

00:04:40.700 --> 00:04:40.710 align:start position:0%
thermals couldn't really go much further
 

00:04:40.710 --> 00:04:42.800 align:start position:0%
thermals couldn't really go much further
than<00:04:40.830><c> that</c><00:04:40.949><c> while</c><00:04:41.550><c> maintaining</c><00:04:41.880><c> 24/7</c>

00:04:42.800 --> 00:04:42.810 align:start position:0%
than that while maintaining 24/7
 

00:04:42.810 --> 00:04:44.540 align:start position:0%
than that while maintaining 24/7
usability<00:04:43.319><c> especially</c><00:04:44.069><c> in</c><00:04:44.160><c> production</c>

00:04:44.540 --> 00:04:44.550 align:start position:0%
usability especially in production
 

00:04:44.550 --> 00:04:46.490 align:start position:0%
usability especially in production
applications<00:04:45.120><c> that</c><00:04:45.210><c> are</c><00:04:45.330><c> more</c><00:04:45.479><c> intensive</c><00:04:46.349><c> or</c>

00:04:46.490 --> 00:04:46.500 align:start position:0%
applications that are more intensive or
 

00:04:46.500 --> 00:04:49.550 align:start position:0%
applications that are more intensive or
might<00:04:46.620><c> use</c><00:04:46.740><c> a</c><00:04:46.889><c> V</c><00:04:47.039><c> X</c><00:04:47.220><c> so</c><00:04:47.460><c> that</c><00:04:48.210><c> was</c><00:04:48.560><c> the</c>

00:04:49.550 --> 00:04:49.560 align:start position:0%
might use a V X so that was the
 

00:04:49.560 --> 00:04:52.159 align:start position:0%
might use a V X so that was the
benchmark<00:04:50.340><c> settings</c><00:04:50.910><c> we</c><00:04:51.030><c> went</c><00:04:51.180><c> with</c><00:04:51.330><c> the</c>

00:04:52.159 --> 00:04:52.169 align:start position:0%
benchmark settings we went with the
 

00:04:52.169 --> 00:04:53.480 align:start position:0%
benchmark settings we went with the
overclocked<00:04:52.590><c> settings</c><00:04:52.949><c> we</c><00:04:53.009><c> went</c><00:04:53.160><c> with</c><00:04:53.280><c> while</c>

00:04:53.480 --> 00:04:53.490 align:start position:0%
overclocked settings we went with while
 

00:04:53.490 --> 00:04:55.700 align:start position:0%
overclocked settings we went with while
maintaining<00:04:54.090><c> a</c><00:04:54.599><c> normal</c><00:04:55.169><c> liquid</c><00:04:55.349><c> cooling</c>

00:04:55.700 --> 00:04:55.710 align:start position:0%
maintaining a normal liquid cooling
 

00:04:55.710 --> 00:04:57.830 align:start position:0%
maintaining a normal liquid cooling
solution<00:04:56.160><c> and</c><00:04:56.340><c> at</c><00:04:56.910><c> this</c><00:04:57.030><c> point</c><00:04:57.330><c> we</c><00:04:57.720><c> can</c>

00:04:57.830 --> 00:04:57.840 align:start position:0%
solution and at this point we can
 

00:04:57.840 --> 00:04:59.719 align:start position:0%
solution and at this point we can
probably<00:04:57.960><c> get</c><00:04:58.169><c> into</c><00:04:58.380><c> the</c><00:04:58.740><c> results</c><00:04:59.160><c> we'll</c><00:04:59.610><c> go</c>

00:04:59.719 --> 00:04:59.729 align:start position:0%
probably get into the results we'll go
 

00:04:59.729 --> 00:05:01.490 align:start position:0%
probably get into the results we'll go
through<00:04:59.940><c> some</c><00:05:00.090><c> games</c><00:05:00.330><c> through</c><00:05:00.840><c> a</c><00:05:00.870><c> couple</c><00:05:01.319><c> of</c>

00:05:01.490 --> 00:05:01.500 align:start position:0%
through some games through a couple of
 

00:05:01.500 --> 00:05:03.290 align:start position:0%
through some games through a couple of
production<00:05:01.889><c> applications</c><00:05:02.430><c> and</c><00:05:02.639><c> then</c><00:05:03.090><c> talk</c>

00:05:03.290 --> 00:05:03.300 align:start position:0%
production applications and then talk
 

00:05:03.300 --> 00:05:04.969 align:start position:0%
production applications and then talk
about<00:05:03.330><c> where</c><00:05:03.990><c> you</c><00:05:04.080><c> should</c><00:05:04.259><c> focus</c><00:05:04.440><c> your</c><00:05:04.650><c> time</c>

00:05:04.969 --> 00:05:04.979 align:start position:0%
about where you should focus your time
 

00:05:04.979 --> 00:05:06.499 align:start position:0%
about where you should focus your time
if<00:05:05.159><c> you</c><00:05:05.190><c> want</c><00:05:05.370><c> to</c><00:05:05.460><c> improve</c><00:05:05.729><c> the</c><00:05:05.940><c> performance</c>

00:05:06.499 --> 00:05:06.509 align:start position:0%
if you want to improve the performance
 

00:05:06.509 --> 00:05:09.140 align:start position:0%
if you want to improve the performance
of<00:05:07.020><c> your</c><00:05:07.050><c> 10600</c><00:05:07.560><c> k</c><00:05:07.919><c> the</c><00:05:08.159><c> first</c><00:05:08.400><c> test</c><00:05:08.669><c> is</c><00:05:08.909><c> the</c>

00:05:09.140 --> 00:05:09.150 align:start position:0%
of your 10600 k the first test is the
 

00:05:09.150 --> 00:05:10.460 align:start position:0%
of your 10600 k the first test is the
most<00:05:09.330><c> interesting</c><00:05:09.780><c> because</c><00:05:10.050><c> it's</c><00:05:10.169><c> one</c><00:05:10.289><c> of</c><00:05:10.349><c> the</c>

00:05:10.460 --> 00:05:10.470 align:start position:0%
most interesting because it's one of the
 

00:05:10.470 --> 00:05:11.960 align:start position:0%
most interesting because it's one of the
first<00:05:10.680><c> times</c><00:05:10.949><c> we've</c><00:05:11.130><c> ever</c><00:05:11.220><c> seen</c><00:05:11.610><c> a</c><00:05:11.639><c> memory</c>

00:05:11.960 --> 00:05:11.970 align:start position:0%
first times we've ever seen a memory
 

00:05:11.970 --> 00:05:13.820 align:start position:0%
first times we've ever seen a memory
bottleneck<00:05:12.419><c> in</c><00:05:12.599><c> a</c><00:05:12.690><c> gaming</c><00:05:12.960><c> benchmark</c><00:05:13.380><c> we've</c>

00:05:13.820 --> 00:05:13.830 align:start position:0%
bottleneck in a gaming benchmark we've
 

00:05:13.830 --> 00:05:15.980 align:start position:0%
bottleneck in a gaming benchmark we've
seen<00:05:14.039><c> it</c><00:05:14.130><c> before</c><00:05:14.250><c> but</c><00:05:14.669><c> it's</c><00:05:14.970><c> really</c><00:05:15.180><c> rare</c><00:05:15.509><c> it's</c>

00:05:15.980 --> 00:05:15.990 align:start position:0%
seen it before but it's really rare it's
 

00:05:15.990 --> 00:05:18.379 align:start position:0%
seen it before but it's really rare it's
typically<00:05:16.470><c> the</c><00:05:16.560><c> GPU</c><00:05:17.130><c> that</c><00:05:17.400><c> bottlenecks</c><00:05:17.940><c> but</c>

00:05:18.379 --> 00:05:18.389 align:start position:0%
typically the GPU that bottlenecks but
 

00:05:18.389 --> 00:05:20.899 align:start position:0%
typically the GPU that bottlenecks but
in<00:05:18.509><c> this</c><00:05:18.599><c> instance</c><00:05:18.840><c> the</c><00:05:19.440><c> highest</c><00:05:20.310><c> end</c><00:05:20.550><c> Intel</c>

00:05:20.899 --> 00:05:20.909 align:start position:0%
in this instance the highest end Intel
 

00:05:20.909 --> 00:05:23.450 align:start position:0%
in this instance the highest end Intel
CPUs<00:05:21.360><c> specifically</c><00:05:22.169><c> we're</c><00:05:22.710><c> choking</c><00:05:23.159><c> on</c><00:05:23.340><c> the</c>

00:05:23.450 --> 00:05:23.460 align:start position:0%
CPUs specifically we're choking on the
 

00:05:23.460 --> 00:05:25.399 align:start position:0%
CPUs specifically we're choking on the
memory<00:05:23.759><c> and</c><00:05:24.030><c> these</c><00:05:24.479><c> platform</c><00:05:24.990><c> doesn't</c><00:05:25.199><c> run</c>

00:05:25.399 --> 00:05:25.409 align:start position:0%
memory and these platform doesn't run
 

00:05:25.409 --> 00:05:26.719 align:start position:0%
memory and these platform doesn't run
into<00:05:25.620><c> this</c><00:05:25.710><c> problem</c><00:05:25.800><c> because</c><00:05:26.310><c> it</c><00:05:26.370><c> doesn't</c><00:05:26.639><c> go</c>

00:05:26.719 --> 00:05:26.729 align:start position:0%
into this problem because it doesn't go
 

00:05:26.729 --> 00:05:28.070 align:start position:0%
into this problem because it doesn't go
as<00:05:26.880><c> high</c><00:05:27.030><c> and</c><00:05:27.240><c> framerate</c><00:05:27.449><c> and</c><00:05:27.930><c> that's</c>

00:05:28.070 --> 00:05:28.080 align:start position:0%
as high and framerate and that's
 

00:05:28.080 --> 00:05:29.960 align:start position:0%
as high and framerate and that's
illustrated<00:05:28.560><c> by</c><00:05:28.650><c> the</c><00:05:28.710><c> 3300</c><00:05:29.400><c> acts</c><00:05:29.520><c> with</c><00:05:29.729><c> tuned</c>

00:05:29.960 --> 00:05:29.970 align:start position:0%
illustrated by the 3300 acts with tuned
 

00:05:29.970 --> 00:05:32.659 align:start position:0%
illustrated by the 3300 acts with tuned
memory<00:05:30.270><c> at</c><00:05:30.360><c> 36</c><00:05:30.750><c> 66</c><00:05:31.259><c> has</c><00:05:31.800><c> it's</c><00:05:32.039><c> more</c><00:05:32.340><c> limited</c>

00:05:32.659 --> 00:05:32.669 align:start position:0%
memory at 36 66 has it's more limited
 

00:05:32.669 --> 00:05:35.180 align:start position:0%
memory at 36 66 has it's more limited
Alice<00:05:32.909><c> prayer</c><00:05:33.090><c> first</c><00:05:33.360><c> Intel's</c><00:05:34.229><c> 10900</c><00:05:34.650><c> k</c><00:05:34.979><c> was</c>

00:05:35.180 --> 00:05:35.190 align:start position:0%
Alice prayer first Intel's 10900 k was
 

00:05:35.190 --> 00:05:37.399 align:start position:0%
Alice prayer first Intel's 10900 k was
previously<00:05:35.669><c> the</c><00:05:35.759><c> chart</c><00:05:36.090><c> topper</c><00:05:36.509><c> with</c><00:05:36.990><c> what</c>

00:05:37.399 --> 00:05:37.409 align:start position:0%
previously the chart topper with what
 

00:05:37.409 --> 00:05:39.560 align:start position:0%
previously the chart topper with what
looked<00:05:37.860><c> like</c><00:05:37.979><c> a</c><00:05:38.130><c> textbook</c><00:05:38.759><c> GPU</c><00:05:39.150><c> bottleneck</c>

00:05:39.560 --> 00:05:39.570 align:start position:0%
looked like a textbook GPU bottleneck
 

00:05:39.570 --> 00:05:41.959 align:start position:0%
looked like a textbook GPU bottleneck
everything<00:05:40.320><c> was</c><00:05:40.469><c> limited</c><00:05:40.830><c> to</c><00:05:40.860><c> about</c><00:05:41.099><c> 147</c><00:05:41.699><c> to</c>

00:05:41.959 --> 00:05:41.969 align:start position:0%
everything was limited to about 147 to
 

00:05:41.969 --> 00:05:44.180 align:start position:0%
everything was limited to about 147 to
153<00:05:42.419><c> FPS</c><00:05:42.780><c> average</c><00:05:42.960><c> and</c><00:05:43.289><c> so</c><00:05:43.710><c> the</c><00:05:43.800><c> gains</c><00:05:44.009><c> were</c>

00:05:44.180 --> 00:05:44.190 align:start position:0%
153 FPS average and so the gains were
 

00:05:44.190 --> 00:05:46.310 align:start position:0%
153 FPS average and so the gains were
limited<00:05:44.520><c> to</c><00:05:44.550><c> the</c><00:05:44.699><c> highest</c><00:05:45.000><c> on</c><00:05:45.120><c> CPUs</c><00:05:45.599><c> the</c><00:05:46.110><c> 10</c>

00:05:46.310 --> 00:05:46.320 align:start position:0%
limited to the highest on CPUs the 10
 

00:05:46.320 --> 00:05:49.730 align:start position:0%
limited to the highest on CPUs the 10
600<00:05:46.740><c> K</c><00:05:46.919><c> with</c><00:05:47.159><c> a</c><00:05:47.190><c> 48</c><00:05:47.639><c> X</c><00:05:47.909><c> ray</c><00:05:48.240><c> no</c><00:05:48.300><c> C</c><00:05:48.750><c> and</c><00:05:49.050><c> no</c><00:05:49.380><c> memory</c>

00:05:49.730 --> 00:05:49.740 align:start position:0%
600 K with a 48 X ray no C and no memory
 

00:05:49.740 --> 00:05:52.969 align:start position:0%
600 K with a 48 X ray no C and no memory
change<00:05:50.009><c> ran</c><00:05:50.639><c> at</c><00:05:50.820><c> 151</c><00:05:51.479><c> FPS</c><00:05:51.900><c> average</c><00:05:52.139><c> which</c><00:05:52.800><c> is</c><00:05:52.949><c> a</c>

00:05:52.969 --> 00:05:52.979 align:start position:0%
change ran at 151 FPS average which is a
 

00:05:52.979 --> 00:05:55.279 align:start position:0%
change ran at 151 FPS average which is a
three<00:05:53.219><c> percent</c><00:05:53.520><c> gain</c><00:05:53.759><c> over</c><00:05:54.090><c> the</c><00:05:54.120><c> all</c><00:05:54.389><c> core</c><00:05:54.659><c> 5.1</c>

00:05:55.279 --> 00:05:55.289 align:start position:0%
three percent gain over the all core 5.1
 

00:05:55.289 --> 00:05:57.800 align:start position:0%
three percent gain over the all core 5.1
gigahertz<00:05:55.560><c> OC</c><00:05:56.219><c> with</c><00:05:56.789><c> no</c><00:05:57.060><c> other</c><00:05:57.210><c> changes</c><00:05:57.630><c> at</c>

00:05:57.800 --> 00:05:57.810 align:start position:0%
gigahertz OC with no other changes at
 

00:05:57.810 --> 00:06:01.339 align:start position:0%
gigahertz OC with no other changes at
146<00:05:58.560><c> FPS</c><00:05:58.979><c> average</c><00:05:59.190><c> on</c><00:06:00.000><c> core</c><00:06:00.509><c> alone</c><00:06:01.020><c> would</c><00:06:01.319><c> be</c>

00:06:01.339 --> 00:06:01.349 align:start position:0%
146 FPS average on core alone would be
 

00:06:01.349 --> 00:06:02.120 align:start position:0%
146 FPS average on core alone would be
worth<00:06:01.710><c> doing</c>

00:06:02.120 --> 00:06:02.130 align:start position:0%
worth doing
 

00:06:02.130 --> 00:06:03.770 align:start position:0%
worth doing
adding<00:06:02.639><c> the</c><00:06:02.699><c> memory</c><00:06:02.969><c> tune</c><00:06:03.150><c> to</c><00:06:03.330><c> that</c><00:06:03.360><c> was</c><00:06:03.750><c> a</c>

00:06:03.770 --> 00:06:03.780 align:start position:0%
adding the memory tune to that was a
 

00:06:03.780 --> 00:06:05.330 align:start position:0%
adding the memory tune to that was a
significant<00:06:04.349><c> boost</c><00:06:04.530><c> giving</c><00:06:04.949><c> us</c><00:06:05.099><c> an</c>

00:06:05.330 --> 00:06:05.340 align:start position:0%
significant boost giving us an
 

00:06:05.340 --> 00:06:08.180 align:start position:0%
significant boost giving us an
additional<00:06:05.610><c> 6</c><00:06:06.120><c> percent</c><00:06:06.539><c> lead</c><00:06:06.750><c> over</c><00:06:06.780><c> the</c><00:06:07.770><c> 48</c>

00:06:08.180 --> 00:06:08.190 align:start position:0%
additional 6 percent lead over the 48
 

00:06:08.190 --> 00:06:10.939 align:start position:0%
additional 6 percent lead over the 48
axon<00:06:08.699><c> chord</c><00:06:08.969><c> change</c><00:06:09.270><c> or</c><00:06:09.630><c> a</c><00:06:09.690><c> 9</c><00:06:10.440><c> percent</c><00:06:10.620><c> lead</c>

00:06:10.939 --> 00:06:10.949 align:start position:0%
axon chord change or a 9 percent lead
 

00:06:10.949 --> 00:06:13.189 align:start position:0%
axon chord change or a 9 percent lead
over<00:06:10.979><c> the</c><00:06:11.340><c> original</c><00:06:11.490><c> 5.1</c><00:06:12.300><c> gigahertz</c><00:06:12.599><c> all</c><00:06:12.930><c> core</c>

00:06:13.189 --> 00:06:13.199 align:start position:0%
over the original 5.1 gigahertz all core
 

00:06:13.199 --> 00:06:16.459 align:start position:0%
over the original 5.1 gigahertz all core
146<00:06:13.889><c> FPS</c><00:06:14.280><c> average</c><00:06:14.430><c> result</c><00:06:14.880><c> the</c><00:06:15.449><c> 10</c><00:06:15.630><c> 600</c><00:06:16.080><c> K</c><00:06:16.229><c> with</c>

00:06:16.459 --> 00:06:16.469 align:start position:0%
146 FPS average result the 10 600 K with
 

00:06:16.469 --> 00:06:18.649 align:start position:0%
146 FPS average result the 10 600 K with
memory<00:06:16.770><c> OC</c><00:06:17.099><c> is</c><00:06:17.250><c> now</c><00:06:17.400><c> outperforming</c><00:06:18.150><c> even</c><00:06:18.539><c> the</c>

00:06:18.649 --> 00:06:18.659 align:start position:0%
memory OC is now outperforming even the
 

00:06:18.659 --> 00:06:21.439 align:start position:0%
memory OC is now outperforming even the
10900<00:06:19.050><c> K</c><00:06:19.380><c> at</c><00:06:19.500><c> 5.3</c><00:06:20.009><c> gigahertz</c><00:06:20.280><c> all</c><00:06:20.550><c> core</c><00:06:20.880><c> with</c>

00:06:21.439 --> 00:06:21.449 align:start position:0%
10900 K at 5.3 gigahertz all core with
 

00:06:21.449 --> 00:06:23.180 align:start position:0%
10900 K at 5.3 gigahertz all core with
our<00:06:21.630><c> standard</c><00:06:22.050><c> review</c><00:06:22.289><c> memory</c><00:06:22.590><c> which</c><00:06:23.039><c> is</c>

00:06:23.180 --> 00:06:23.190 align:start position:0%
our standard review memory which is
 

00:06:23.190 --> 00:06:24.770 align:start position:0%
our standard review memory which is
exciting<00:06:23.610><c> because</c><00:06:23.940><c> it</c><00:06:24.150><c> shows</c><00:06:24.360><c> that</c><00:06:24.599><c> we've</c>

00:06:24.770 --> 00:06:24.780 align:start position:0%
exciting because it shows that we've
 

00:06:24.780 --> 00:06:26.089 align:start position:0%
exciting because it shows that we've
found<00:06:24.960><c> something</c><00:06:25.319><c> other</c><00:06:25.530><c> than</c><00:06:25.740><c> a</c><00:06:25.800><c> GPU</c>

00:06:26.089 --> 00:06:26.099 align:start position:0%
found something other than a GPU
 

00:06:26.099 --> 00:06:27.950 align:start position:0%
found something other than a GPU
bottleneck<00:06:26.580><c> or</c><00:06:26.699><c> wants</c><00:06:26.880><c> as</c><00:06:27.030><c> for</c><00:06:27.599><c> the</c><00:06:27.659><c> standard</c>

00:06:27.950 --> 00:06:27.960 align:start position:0%
bottleneck or wants as for the standard
 

00:06:27.960 --> 00:06:29.959 align:start position:0%
bottleneck or wants as for the standard
review<00:06:28.110><c> memory</c><00:06:28.500><c> remember</c><00:06:29.039><c> that</c><00:06:29.190><c> one</c><00:06:29.789><c> of</c><00:06:29.909><c> the</c>

00:06:29.959 --> 00:06:29.969 align:start position:0%
review memory remember that one of the
 

00:06:29.969 --> 00:06:31.939 align:start position:0%
review memory remember that one of the
reasons<00:06:30.240><c> we</c><00:06:30.330><c> have</c><00:06:30.509><c> to</c><00:06:30.630><c> use</c><00:06:30.750><c> 3200</c><00:06:31.349><c> megahertz</c><00:06:31.740><c> is</c>

00:06:31.939 --> 00:06:31.949 align:start position:0%
reasons we have to use 3200 megahertz is
 

00:06:31.949 --> 00:06:33.830 align:start position:0%
reasons we have to use 3200 megahertz is
so<00:06:32.340><c> that</c><00:06:32.490><c> we</c><00:06:32.610><c> can</c><00:06:32.759><c> keep</c><00:06:32.940><c> an</c><00:06:33.120><c> identical</c><00:06:33.599><c> test</c>

00:06:33.830 --> 00:06:33.840 align:start position:0%
so that we can keep an identical test
 

00:06:33.840 --> 00:06:36.500 align:start position:0%
so that we can keep an identical test
platform<00:06:34.380><c> across</c><00:06:34.979><c> all</c><00:06:35.279><c> the</c><00:06:35.490><c> CPUs</c><00:06:35.849><c> tested</c><00:06:36.330><c> at</c>

00:06:36.500 --> 00:06:36.510 align:start position:0%
platform across all the CPUs tested at
 

00:06:36.510 --> 00:06:39.019 align:start position:0%
platform across all the CPUs tested at
least<00:06:37.050><c> back</c><00:06:37.320><c> to</c><00:06:37.589><c> Rison</c><00:06:37.949><c> one</c><00:06:38.219><c> since</c><00:06:38.639><c> that's</c><00:06:38.820><c> the</c>

00:06:39.019 --> 00:06:39.029 align:start position:0%
least back to Rison one since that's the
 

00:06:39.029 --> 00:06:40.640 align:start position:0%
least back to Rison one since that's the
most<00:06:39.270><c> relevant</c><00:06:39.690><c> but</c>

00:06:40.640 --> 00:06:40.650 align:start position:0%
most relevant but
 

00:06:40.650 --> 00:06:42.590 align:start position:0%
most relevant but
kind<00:06:40.949><c> of</c><00:06:41.100><c> all</c><00:06:41.280><c> the</c><00:06:41.460><c> cpu</c><00:06:42.120><c> that</c><00:06:42.330><c> we'll</c><00:06:42.479><c> be</c>

00:06:42.590 --> 00:06:42.600 align:start position:0%
kind of all the cpu that we'll be
 

00:06:42.600 --> 00:06:45.170 align:start position:0%
kind of all the cpu that we'll be
testing<00:06:43.290><c> regularly</c><00:06:43.830><c> we</c><00:06:44.280><c> need</c><00:06:44.490><c> to</c><00:06:44.820><c> go</c><00:06:44.970><c> no</c>

00:06:45.170 --> 00:06:45.180 align:start position:0%
testing regularly we need to go no
 

00:06:45.180 --> 00:06:46.310 align:start position:0%
testing regularly we need to go no
higher<00:06:45.360><c> than</c><00:06:45.419><c> thirty</c><00:06:45.780><c> two</c><00:06:45.930><c> hundred</c><00:06:45.960><c> megahertz</c>

00:06:46.310 --> 00:06:46.320 align:start position:0%
higher than thirty two hundred megahertz
 

00:06:46.320 --> 00:06:47.900 align:start position:0%
higher than thirty two hundred megahertz
for<00:06:46.590><c> the</c><00:06:46.710><c> standard</c><00:06:47.100><c> hitman</c><00:06:47.400><c> two</c><00:06:47.580><c> is</c><00:06:47.699><c> another</c>

00:06:47.900 --> 00:06:47.910 align:start position:0%
for the standard hitman two is another
 

00:06:47.910 --> 00:06:49.610 align:start position:0%
for the standard hitman two is another
game<00:06:48.060><c> that</c><00:06:48.120><c> responded</c><00:06:48.810><c> somewhat</c><00:06:49.080><c> drastically</c>

00:06:49.610 --> 00:06:49.620 align:start position:0%
game that responded somewhat drastically
 

00:06:49.620 --> 00:06:51.620 align:start position:0%
game that responded somewhat drastically
to<00:06:49.740><c> CPU</c><00:06:50.010><c> performance</c><00:06:50.130><c> the</c><00:06:50.880><c> stock</c><00:06:51.120><c> ten</c><00:06:51.389><c> six</c>

00:06:51.620 --> 00:06:51.630 align:start position:0%
to CPU performance the stock ten six
 

00:06:51.630 --> 00:06:54.080 align:start position:0%
to CPU performance the stock ten six
hundred<00:06:51.840><c> K</c><00:06:51.960><c> ran</c><00:06:52.199><c> at</c><00:06:52.320><c> 128</c><00:06:52.860><c> FPS</c><00:06:53.220><c> average</c><00:06:53.430><c> and</c><00:06:53.790><c> the</c>

00:06:54.080 --> 00:06:54.090 align:start position:0%
hundred K ran at 128 FPS average and the
 

00:06:54.090 --> 00:06:56.120 align:start position:0%
hundred K ran at 128 FPS average and the
5<00:06:54.330><c> foot</c><00:06:54.510><c> 1</c><00:06:54.630><c> gigahertz</c><00:06:54.930><c> overclock</c><00:06:55.500><c> improved</c><00:06:55.919><c> by</c>

00:06:56.120 --> 00:06:56.130 align:start position:0%
5 foot 1 gigahertz overclock improved by
 

00:06:56.130 --> 00:06:59.510 align:start position:0%
5 foot 1 gigahertz overclock improved by
5.5<00:06:56.820><c> percent</c><00:06:57.000><c> to</c><00:06:57.570><c> 135</c><00:06:58.110><c> FPS</c><00:06:58.560><c> average</c><00:06:58.740><c> then</c>

00:06:59.510 --> 00:06:59.520 align:start position:0%
5.5 percent to 135 FPS average then
 

00:06:59.520 --> 00:07:02.360 align:start position:0%
5.5 percent to 135 FPS average then
adding<00:07:00.060><c> the</c><00:07:00.210><c> 48</c><00:07:00.720><c> X</c><00:07:00.960><c> ring</c><00:07:01.260><c> clock</c><00:07:01.590><c> improved</c><00:07:02.160><c> us</c>

00:07:02.360 --> 00:07:02.370 align:start position:0%
adding the 48 X ring clock improved us
 

00:07:02.370 --> 00:07:03.590 align:start position:0%
adding the 48 X ring clock improved us
an<00:07:02.580><c> additional</c><00:07:02.970><c> two</c><00:07:03.090><c> and</c><00:07:03.210><c> a</c><00:07:03.240><c> half</c><00:07:03.389><c> percent</c>

00:07:03.590 --> 00:07:03.600 align:start position:0%
an additional two and a half percent
 

00:07:03.600 --> 00:07:06.650 align:start position:0%
an additional two and a half percent
over<00:07:03.990><c> the</c><00:07:04.080><c> core</c><00:07:04.260><c> only</c><00:07:04.650><c> OC</c><00:07:05.010><c> up</c><00:07:05.340><c> to</c><00:07:05.669><c> 138</c><00:07:06.150><c> FPS</c>

00:07:06.650 --> 00:07:06.660 align:start position:0%
over the core only OC up to 138 FPS
 

00:07:06.660 --> 00:07:09.110 align:start position:0%
over the core only OC up to 138 FPS
average<00:07:06.810><c> at</c><00:07:07.470><c> this</c><00:07:07.680><c> point</c><00:07:07.949><c> the</c><00:07:08.070><c> 10</c><00:07:08.280><c> 600</c><00:07:08.699><c> K</c><00:07:08.850><c> has</c>

00:07:09.110 --> 00:07:09.120 align:start position:0%
average at this point the 10 600 K has
 

00:07:09.120 --> 00:07:11.330 align:start position:0%
average at this point the 10 600 K has
tied<00:07:09.449><c> the</c><00:07:09.750><c> ten</c><00:07:10.080><c> nine</c><00:07:10.260><c> hundred</c><00:07:10.530><c> K</c><00:07:10.620><c> stock</c><00:07:10.919><c> CPU</c>

00:07:11.330 --> 00:07:11.340 align:start position:0%
tied the ten nine hundred K stock CPU
 

00:07:11.340 --> 00:07:13.730 align:start position:0%
tied the ten nine hundred K stock CPU
and<00:07:11.550><c> has</c><00:07:11.970><c> beaten</c><00:07:12.180><c> the</c><00:07:12.360><c> 99</c><00:07:12.750><c> hundred</c><00:07:13.050><c> K</c><00:07:13.229><c> at</c><00:07:13.530><c> five</c>

00:07:13.730 --> 00:07:13.740 align:start position:0%
and has beaten the 99 hundred K at five
 

00:07:13.740 --> 00:07:15.890 align:start position:0%
and has beaten the 99 hundred K at five
point<00:07:13.949><c> one</c><00:07:14.070><c> gigahertz</c><00:07:14.370><c> without</c><00:07:15.240><c> a</c><00:07:15.270><c> nun</c><00:07:15.690><c> core</c>

00:07:15.890 --> 00:07:15.900 align:start position:0%
point one gigahertz without a nun core
 

00:07:15.900 --> 00:07:16.969 align:start position:0%
point one gigahertz without a nun core
overclock<00:07:16.350><c> on</c><00:07:16.530><c> that</c><00:07:16.710><c> one</c>

00:07:16.969 --> 00:07:16.979 align:start position:0%
overclock on that one
 

00:07:16.979 --> 00:07:19.370 align:start position:0%
overclock on that one
finally<00:07:17.610><c> the</c><00:07:17.729><c> memory</c><00:07:18.000><c> tune</c><00:07:18.180><c> got</c><00:07:18.419><c> us</c><00:07:18.600><c> to</c><00:07:18.810><c> 147</c>

00:07:19.370 --> 00:07:19.380 align:start position:0%
finally the memory tune got us to 147
 

00:07:19.380 --> 00:07:21.680 align:start position:0%
finally the memory tune got us to 147
FPS<00:07:19.830><c> average</c><00:07:20.010><c> an</c><00:07:20.430><c> additional</c><00:07:21.000><c> six</c><00:07:21.330><c> point</c><00:07:21.539><c> four</c>

00:07:21.680 --> 00:07:21.690 align:start position:0%
FPS average an additional six point four
 

00:07:21.690 --> 00:07:24.140 align:start position:0%
FPS average an additional six point four
percent<00:07:21.840><c> uplift</c><00:07:22.590><c> and</c><00:07:22.979><c> all</c><00:07:23.220><c> of</c><00:07:23.370><c> this</c><00:07:23.520><c> was</c><00:07:23.820><c> less</c>

00:07:24.140 --> 00:07:24.150 align:start position:0%
percent uplift and all of this was less
 

00:07:24.150 --> 00:07:25.700 align:start position:0%
percent uplift and all of this was less
than<00:07:24.300><c> an</c><00:07:24.419><c> hour</c><00:07:24.660><c> to</c><00:07:24.960><c> an</c><00:07:25.050><c> hour</c><00:07:25.199><c> and</c><00:07:25.320><c> a</c><00:07:25.380><c> half</c><00:07:25.560><c> of</c>

00:07:25.700 --> 00:07:25.710 align:start position:0%
than an hour to an hour and a half of
 

00:07:25.710 --> 00:07:27.590 align:start position:0%
than an hour to an hour and a half of
testing<00:07:26.100><c> and</c><00:07:26.220><c> validation</c><00:07:26.550><c> to</c><00:07:26.729><c> get</c><00:07:26.850><c> running</c><00:07:27.060><c> so</c>

00:07:27.590 --> 00:07:27.600 align:start position:0%
testing and validation to get running so
 

00:07:27.600 --> 00:07:30.200 align:start position:0%
testing and validation to get running so
in<00:07:28.050><c> about</c><00:07:28.710><c> an</c><00:07:29.070><c> hour</c><00:07:29.190><c> you</c><00:07:29.550><c> could</c><00:07:29.669><c> benefit</c><00:07:30.150><c> from</c>

00:07:30.200 --> 00:07:30.210 align:start position:0%
in about an hour you could benefit from
 

00:07:30.210 --> 00:07:33.379 align:start position:0%
in about an hour you could benefit from
a<00:07:30.539><c> stock</c><00:07:30.810><c> to</c><00:07:31.110><c> tuned</c><00:07:31.350><c> performance</c><00:07:31.710><c> jump</c><00:07:32.160><c> of</c><00:07:32.389><c> 15%</c>

00:07:33.379 --> 00:07:33.389 align:start position:0%
a stock to tuned performance jump of 15%
 

00:07:33.389 --> 00:07:35.779 align:start position:0%
a stock to tuned performance jump of 15%
on<00:07:33.600><c> the</c><00:07:33.720><c> 10</c><00:07:33.900><c> 600</c><00:07:34.380><c> K</c><00:07:34.530><c> we're</c><00:07:35.220><c> now</c><00:07:35.340><c> equivalent</c>

00:07:35.779 --> 00:07:35.789 align:start position:0%
on the 10 600 K we're now equivalent
 

00:07:35.789 --> 00:07:37.820 align:start position:0%
on the 10 600 K we're now equivalent
with<00:07:36.180><c> ten</c><00:07:36.360><c> nine</c><00:07:36.539><c> hundred</c><00:07:36.840><c> K</c><00:07:36.990><c> with</c><00:07:37.260><c> a</c><00:07:37.289><c> 5.3</c>

00:07:37.820 --> 00:07:37.830 align:start position:0%
with ten nine hundred K with a 5.3
 

00:07:37.830 --> 00:07:40.129 align:start position:0%
with ten nine hundred K with a 5.3
gigahertz<00:07:38.220><c> all</c><00:07:38.550><c> core</c><00:07:38.789><c> OC</c><00:07:39.150><c> and</c><00:07:39.600><c> with</c><00:07:40.020><c> the</c>

00:07:40.129 --> 00:07:40.139 align:start position:0%
gigahertz all core OC and with the
 

00:07:40.139 --> 00:07:42.469 align:start position:0%
gigahertz all core OC and with the
standard<00:07:40.470><c> 3200</c><00:07:41.130><c> CL</c><00:07:41.340><c> 14</c><00:07:41.760><c> memory</c><00:07:42.030><c> that</c><00:07:42.180><c> we</c><00:07:42.270><c> use</c>

00:07:42.469 --> 00:07:42.479 align:start position:0%
standard 3200 CL 14 memory that we use
 

00:07:42.479 --> 00:07:44.510 align:start position:0%
standard 3200 CL 14 memory that we use
with<00:07:42.930><c> a</c><00:07:42.960><c> stock</c><00:07:43.289><c> ring</c><00:07:43.590><c> bus</c><00:07:43.830><c> shuttle</c><00:07:44.280><c> the</c><00:07:44.370><c> tomb</c>

00:07:44.510 --> 00:07:44.520 align:start position:0%
with a stock ring bus shuttle the tomb
 

00:07:44.520 --> 00:07:46.279 align:start position:0%
with a stock ring bus shuttle the tomb
raider<00:07:44.669><c> is</c><00:07:44.760><c> next</c><00:07:45.030><c> for</c><00:07:45.330><c> this</c><00:07:45.450><c> one</c><00:07:45.630><c> we</c><00:07:45.780><c> were</c><00:07:45.900><c> GPU</c>

00:07:46.279 --> 00:07:46.289 align:start position:0%
raider is next for this one we were GPU
 

00:07:46.289 --> 00:07:48.290 align:start position:0%
raider is next for this one we were GPU
bound<00:07:46.440><c> at</c><00:07:46.740><c> the</c><00:07:46.800><c> top</c><00:07:47.010><c> end</c><00:07:47.250><c> with</c><00:07:47.490><c> the</c><00:07:47.729><c> 10</c><00:07:47.970><c> 900</c>

00:07:48.290 --> 00:07:48.300 align:start position:0%
bound at the top end with the 10 900
 

00:07:48.300 --> 00:07:50.360 align:start position:0%
bound at the top end with the 10 900
case<00:07:48.419><c> stock</c><00:07:48.720><c> and</c><00:07:49.020><c> OC</c><00:07:49.440><c> the</c><00:07:49.740><c> equivalents</c><00:07:50.190><c> of</c><00:07:50.250><c> the</c>

00:07:50.360 --> 00:07:50.370 align:start position:0%
case stock and OC the equivalents of the
 

00:07:50.370 --> 00:07:52.460 align:start position:0%
case stock and OC the equivalents of the
two<00:07:50.520><c> shows</c><00:07:50.760><c> just</c><00:07:51.120><c> that</c><00:07:51.330><c> and</c><00:07:51.599><c> the</c><00:07:51.720><c> 10</c><00:07:51.900><c> 600</c><00:07:52.320><c> k</c>

00:07:52.460 --> 00:07:52.470 align:start position:0%
two shows just that and the 10 600 k
 

00:07:52.470 --> 00:07:54.409 align:start position:0%
two shows just that and the 10 600 k
heavy<00:07:52.740><c> tuned</c><00:07:53.039><c> couldn't</c><00:07:53.490><c> break</c><00:07:53.669><c> past</c><00:07:54.000><c> it</c><00:07:54.240><c> due</c>

00:07:54.409 --> 00:07:54.419 align:start position:0%
heavy tuned couldn't break past it due
 

00:07:54.419 --> 00:07:56.270 align:start position:0%
heavy tuned couldn't break past it due
to<00:07:54.510><c> a</c><00:07:54.539><c> GPU</c><00:07:54.900><c> barrier</c><00:07:55.289><c> the</c><00:07:55.860><c> stock</c><00:07:56.099><c> performance</c>

00:07:56.270 --> 00:07:56.280 align:start position:0%
to a GPU barrier the stock performance
 

00:07:56.280 --> 00:07:59.060 align:start position:0%
to a GPU barrier the stock performance
was<00:07:56.700><c> 163</c><00:07:57.330><c> FPS</c><00:07:57.630><c> average</c><00:07:57.840><c> with</c><00:07:58.260><c> an</c><00:07:58.380><c> OC</c><00:07:58.680><c> jump</c><00:07:58.950><c> in</c>

00:07:59.060 --> 00:07:59.070 align:start position:0%
was 163 FPS average with an OC jump in
 

00:07:59.070 --> 00:08:02.480 align:start position:0%
was 163 FPS average with an OC jump in
2.3<00:07:59.550><c> percent</c><00:07:59.669><c> to</c><00:08:00.330><c> 166</c><00:08:01.020><c> FPS</c><00:08:01.500><c> average</c><00:08:01.680><c> the</c><00:08:02.310><c> rain</c>

00:08:02.480 --> 00:08:02.490 align:start position:0%
2.3 percent to 166 FPS average the rain
 

00:08:02.490 --> 00:08:04.219 align:start position:0%
2.3 percent to 166 FPS average the rain
overclocked<00:08:03.000><c> really</c><00:08:03.539><c> spurred</c><00:08:03.810><c> things</c><00:08:04.050><c> up</c>

00:08:04.219 --> 00:08:04.229 align:start position:0%
overclocked really spurred things up
 

00:08:04.229 --> 00:08:07.070 align:start position:0%
overclocked really spurred things up
producing<00:08:04.800><c> an</c><00:08:04.950><c> additional</c><00:08:05.070><c> gain</c><00:08:05.639><c> to</c><00:08:06.030><c> 174</c><00:08:06.630><c> FPS</c>

00:08:07.070 --> 00:08:07.080 align:start position:0%
producing an additional gain to 174 FPS
 

00:08:07.080 --> 00:08:10.310 align:start position:0%
producing an additional gain to 174 FPS
or<00:08:07.380><c> 5%</c><00:08:08.340><c> on</c><00:08:08.520><c> top</c><00:08:08.700><c> of</c><00:08:08.849><c> the</c><00:08:08.940><c> all</c><00:08:09.120><c> core</c><00:08:09.389><c> only</c><00:08:09.570><c> OC</c><00:08:10.110><c> and</c>

00:08:10.310 --> 00:08:10.320 align:start position:0%
or 5% on top of the all core only OC and
 

00:08:10.320 --> 00:08:13.070 align:start position:0%
or 5% on top of the all core only OC and
seven<00:08:10.979><c> percent</c><00:08:11.280><c> total</c><00:08:11.400><c> versus</c><00:08:11.940><c> stock</c><00:08:12.240><c> the</c><00:08:12.900><c> low</c>

00:08:13.070 --> 00:08:13.080 align:start position:0%
seven percent total versus stock the low
 

00:08:13.080 --> 00:08:14.930 align:start position:0%
seven percent total versus stock the low
is<00:08:13.229><c> also</c><00:08:13.650><c> improved</c><00:08:13.949><c> here</c><00:08:14.220><c> with</c><00:08:14.460><c> the</c><00:08:14.639><c> total</c>

00:08:14.930 --> 00:08:14.940 align:start position:0%
is also improved here with the total
 

00:08:14.940 --> 00:08:17.240 align:start position:0%
is also improved here with the total
score<00:08:15.120><c> reaching</c><00:08:15.479><c> equivalents</c><00:08:16.050><c> with</c><00:08:16.620><c> a</c><00:08:16.740><c> 5.1</c>

00:08:17.240 --> 00:08:17.250 align:start position:0%
score reaching equivalents with a 5.1
 

00:08:17.250 --> 00:08:20.300 align:start position:0%
score reaching equivalents with a 5.1
gigahertz<00:08:17.610><c> at</c><00:08:17.940><c> 9900</c><00:08:18.630><c> k</c><00:08:18.810><c> finally</c><00:08:19.770><c> our</c><00:08:19.979><c> memory</c>

00:08:20.300 --> 00:08:20.310 align:start position:0%
gigahertz at 9900 k finally our memory
 

00:08:20.310 --> 00:08:23.029 align:start position:0%
gigahertz at 9900 k finally our memory
tune<00:08:20.520><c> boosted</c><00:08:21.030><c> us</c><00:08:21.180><c> past</c><00:08:21.479><c> the</c><00:08:21.720><c> 1900</c><00:08:22.289><c> KF</c><00:08:22.500><c> 5.1</c>

00:08:23.029 --> 00:08:23.039 align:start position:0%
tune boosted us past the 1900 KF 5.1
 

00:08:23.039 --> 00:08:25.159 align:start position:0%
tune boosted us past the 1900 KF 5.1
offering<00:08:23.849><c> an</c><00:08:23.970><c> additional</c><00:08:24.120><c> improvement</c><00:08:24.900><c> over</c>

00:08:25.159 --> 00:08:25.169 align:start position:0%
offering an additional improvement over
 

00:08:25.169 --> 00:08:28.400 align:start position:0%
offering an additional improvement over
the<00:08:25.260><c> ring</c><00:08:25.440><c> OC</c><00:08:25.919><c> of</c><00:08:26.130><c> only</c><00:08:26.610><c> 1%</c><00:08:26.970><c> we're</c><00:08:27.780><c> now</c><00:08:27.960><c> limited</c>

00:08:28.400 --> 00:08:28.410 align:start position:0%
the ring OC of only 1% we're now limited
 

00:08:28.410 --> 00:08:30.890 align:start position:0%
the ring OC of only 1% we're now limited
by<00:08:28.530><c> the</c><00:08:28.590><c> GPU</c><00:08:29.099><c> so</c><00:08:29.580><c> this</c><00:08:29.910><c> is</c><00:08:30.060><c> about</c><00:08:30.300><c> the</c><00:08:30.479><c> best</c><00:08:30.660><c> at</c>

00:08:30.890 --> 00:08:30.900 align:start position:0%
by the GPU so this is about the best at
 

00:08:30.900 --> 00:08:33.380 align:start position:0%
by the GPU so this is about the best at
n<00:08:31.050><c> 600</c><00:08:31.500><c> K</c><00:08:31.650><c> can</c><00:08:31.830><c> be</c><00:08:31.949><c> expected</c><00:08:32.400><c> to</c><00:08:32.430><c> do</c><00:08:32.669><c> with</c><00:08:33.180><c> these</c>

00:08:33.380 --> 00:08:33.390 align:start position:0%
n 600 K can be expected to do with these
 

00:08:33.390 --> 00:08:35.360 align:start position:0%
n 600 K can be expected to do with these
settings<00:08:33.779><c> in</c><00:08:33.990><c> this</c><00:08:34.140><c> game</c><00:08:34.409><c> and</c><00:08:34.709><c> a</c><00:08:34.770><c> 2080</c><00:08:35.159><c> ti</c>

00:08:35.360 --> 00:08:35.370 align:start position:0%
settings in this game and a 2080 ti
 

00:08:35.370 --> 00:08:37.519 align:start position:0%
settings in this game and a 2080 ti
everyone<00:08:36.060><c> 2019</c><00:08:36.599><c> is</c><00:08:36.690><c> next</c><00:08:36.990><c> which</c><00:08:37.140><c> should</c><00:08:37.380><c> be</c>

00:08:37.519 --> 00:08:37.529 align:start position:0%
everyone 2019 is next which should be
 

00:08:37.529 --> 00:08:39.380 align:start position:0%
everyone 2019 is next which should be
fun<00:08:37.709><c> for</c><00:08:37.950><c> its</c><00:08:38.070><c> heavy</c><00:08:38.190><c> responsiveness</c><00:08:38.849><c> to</c><00:08:38.969><c> CPU</c>

00:08:39.380 --> 00:08:39.390 align:start position:0%
fun for its heavy responsiveness to CPU
 

00:08:39.390 --> 00:08:42.110 align:start position:0%
fun for its heavy responsiveness to CPU
changes<00:08:39.719><c> in</c><00:08:39.839><c> general</c><00:08:40.229><c> the</c><00:08:40.680><c> 10600</c><00:08:41.130><c> k</c><00:08:41.430><c> stock</c><00:08:41.789><c> CPU</c>

00:08:42.110 --> 00:08:42.120 align:start position:0%
changes in general the 10600 k stock CPU
 

00:08:42.120 --> 00:08:44.510 align:start position:0%
changes in general the 10600 k stock CPU
was<00:08:42.300><c> originally</c><00:08:42.839><c> between</c><00:08:43.200><c> the</c><00:08:43.349><c> 9900</c><00:08:44.130><c> a</c><00:08:44.190><c> stock</c>

00:08:44.510 --> 00:08:44.520 align:start position:0%
was originally between the 9900 a stock
 

00:08:44.520 --> 00:08:48.019 align:start position:0%
was originally between the 9900 a stock
and<00:08:44.839><c> 8700</c><00:08:45.839><c> k</c><00:08:45.930><c> stock</c><00:08:46.230><c> CPUs</c><00:08:46.740><c> with</c><00:08:47.310><c> the</c><00:08:47.430><c> overclock</c>

00:08:48.019 --> 00:08:48.029 align:start position:0%
and 8700 k stock CPUs with the overclock
 

00:08:48.029 --> 00:08:51.290 align:start position:0%
and 8700 k stock CPUs with the overclock
boosting<00:08:48.480><c> it</c><00:08:48.600><c> from</c><00:08:48.780><c> 259</c><00:08:49.290><c> to</c><00:08:49.740><c> 267</c><00:08:50.550><c> FPS</c><00:08:51.030><c> average</c>

00:08:51.290 --> 00:08:51.300 align:start position:0%
boosting it from 259 to 267 FPS average
 

00:08:51.300 --> 00:08:53.240 align:start position:0%
boosting it from 259 to 267 FPS average
and<00:08:51.720><c> that's</c><00:08:52.170><c> a</c><00:08:52.380><c> gain</c><00:08:52.589><c> of</c><00:08:52.620><c> three</c><00:08:52.980><c> point</c><00:08:53.160><c> one</c>

00:08:53.240 --> 00:08:53.250 align:start position:0%
and that's a gain of three point one
 

00:08:53.250 --> 00:08:54.260 align:start position:0%
and that's a gain of three point one
percent<00:08:53.370><c> the</c>

00:08:54.260 --> 00:08:54.270 align:start position:0%
percent the
 

00:08:54.270 --> 00:08:56.750 align:start position:0%
percent the
uncor<00:08:54.570><c> offs</c><00:08:54.750><c> that</c><00:08:54.990><c> propelled</c><00:08:55.350><c> us</c><00:08:55.560><c> to</c><00:08:55.770><c> 278</c><00:08:56.399><c> FPS</c>

00:08:56.750 --> 00:08:56.760 align:start position:0%
uncor offs that propelled us to 278 FPS
 

00:08:56.760 --> 00:08:59.600 align:start position:0%
uncor offs that propelled us to 278 FPS
average<00:08:56.910><c> a</c><00:08:57.240><c> 3.9</c><00:08:57.990><c> percent</c><00:08:58.020><c> gain</c><00:08:58.589><c> over</c><00:08:59.010><c> the</c><00:08:59.040><c> 5.1</c>

00:08:59.600 --> 00:08:59.610 align:start position:0%
average a 3.9 percent gain over the 5.1
 

00:08:59.610 --> 00:09:02.000 align:start position:0%
average a 3.9 percent gain over the 5.1
gigahertz<00:08:59.970><c> OSI</c><00:09:00.450><c> with</c><00:09:01.080><c> this</c><00:09:01.260><c> 5-minute</c><00:09:01.770><c> change</c>

00:09:02.000 --> 00:09:02.010 align:start position:0%
gigahertz OSI with this 5-minute change
 

00:09:02.010 --> 00:09:03.800 align:start position:0%
gigahertz OSI with this 5-minute change
we<00:09:02.220><c> became</c><00:09:02.520><c> equivalent</c><00:09:03.149><c> to</c><00:09:03.330><c> an</c><00:09:03.420><c> overclocked</c>

00:09:03.800 --> 00:09:03.810 align:start position:0%
we became equivalent to an overclocked
 

00:09:03.810 --> 00:09:07.430 align:start position:0%
we became equivalent to an overclocked
to<00:09:03.839><c> 9700</c><00:09:04.620><c> K</c><00:09:04.800><c> or</c><00:09:05.339><c> 9900</c><00:09:06.000><c> K</c><00:09:06.120><c> CPU</c><00:09:06.570><c> the</c><00:09:07.050><c> latter</c><00:09:07.260><c> of</c>

00:09:07.430 --> 00:09:07.440 align:start position:0%
to 9700 K or 9900 K CPU the latter of
 

00:09:07.440 --> 00:09:10.430 align:start position:0%
to 9700 K or 9900 K CPU the latter of
which<00:09:07.470><c> was</c><00:09:07.830><c> over</c><00:09:08.070><c> $500</c><00:09:08.850><c> retail</c><00:09:09.000><c> the</c><00:09:09.720><c> 10900</c><00:09:10.110><c> K</c>

00:09:10.430 --> 00:09:10.440 align:start position:0%
which was over $500 retail the 10900 K
 

00:09:10.440 --> 00:09:12.440 align:start position:0%
which was over $500 retail the 10900 K
5.2<00:09:11.010><c> gigahertz</c><00:09:11.310><c> result</c><00:09:11.790><c> is</c><00:09:11.910><c> outmatched</c><00:09:12.240><c> by</c>

00:09:12.440 --> 00:09:12.450 align:start position:0%
5.2 gigahertz result is outmatched by
 

00:09:12.450 --> 00:09:14.780 align:start position:0%
5.2 gigahertz result is outmatched by
our<00:09:12.660><c> memory</c><00:09:12.990><c> tune</c><00:09:13.260><c> on</c><00:09:13.529><c> the</c><00:09:13.920><c> 10</c><00:09:14.130><c> 600</c><00:09:14.640><c> K</c>

00:09:14.780 --> 00:09:14.790 align:start position:0%
our memory tune on the 10 600 K
 

00:09:14.790 --> 00:09:16.940 align:start position:0%
our memory tune on the 10 600 K
obviously<00:09:15.149><c> like</c><00:09:15.810><c> anything</c><00:09:16.230><c> else</c><00:09:16.380><c> this</c><00:09:16.680><c> is</c><00:09:16.740><c> an</c>

00:09:16.940 --> 00:09:16.950 align:start position:0%
obviously like anything else this is an
 

00:09:16.950 --> 00:09:19.280 align:start position:0%
obviously like anything else this is an
arms<00:09:17.250><c> race</c><00:09:17.310><c> that</c><00:09:17.760><c> could</c><00:09:18.000><c> continue</c><00:09:18.480><c> the</c><00:09:18.870><c> 10900</c>

00:09:19.280 --> 00:09:19.290 align:start position:0%
arms race that could continue the 10900
 

00:09:19.290 --> 00:09:21.440 align:start position:0%
arms race that could continue the 10900
K<00:09:19.709><c> could</c><00:09:20.070><c> get</c><00:09:20.220><c> the</c><00:09:20.339><c> same</c><00:09:20.490><c> treatment</c><00:09:20.700><c> but</c><00:09:21.330><c> the</c>

00:09:21.440 --> 00:09:21.450 align:start position:0%
K could get the same treatment but the
 

00:09:21.450 --> 00:09:23.120 align:start position:0%
K could get the same treatment but the
point<00:09:21.690><c> is</c><00:09:21.870><c> to</c><00:09:21.990><c> illustrate</c><00:09:22.110><c> just</c><00:09:22.380><c> how</c><00:09:22.649><c> far</c><00:09:22.920><c> you</c>

00:09:23.120 --> 00:09:23.130 align:start position:0%
point is to illustrate just how far you
 

00:09:23.130 --> 00:09:25.940 align:start position:0%
point is to illustrate just how far you
can<00:09:23.220><c> push</c><00:09:23.279><c> a</c><00:09:23.640><c> half</c><00:09:23.970><c> cost</c><00:09:24.360><c> CPU</c><00:09:24.930><c> with</c><00:09:25.529><c> about</c><00:09:25.770><c> an</c>

00:09:25.940 --> 00:09:25.950 align:start position:0%
can push a half cost CPU with about an
 

00:09:25.950 --> 00:09:28.130 align:start position:0%
can push a half cost CPU with about an
hour<00:09:26.100><c> of</c><00:09:26.220><c> work</c><00:09:26.520><c> now</c><00:09:27.060><c> to</c><00:09:27.120><c> be</c><00:09:27.270><c> fair</c><00:09:27.510><c> the</c><00:09:27.899><c> memory</c>

00:09:28.130 --> 00:09:28.140 align:start position:0%
hour of work now to be fair the memory
 

00:09:28.140 --> 00:09:29.900 align:start position:0%
hour of work now to be fair the memory
change<00:09:28.410><c> isn't</c><00:09:28.560><c> cheap</c><00:09:28.860><c> so</c><00:09:29.190><c> you</c><00:09:29.250><c> do</c><00:09:29.580><c> need</c><00:09:29.790><c> to</c>

00:09:29.900 --> 00:09:29.910 align:start position:0%
change isn't cheap so you do need to
 

00:09:29.910 --> 00:09:31.610 align:start position:0%
change isn't cheap so you do need to
make<00:09:29.940><c> up</c><00:09:30.209><c> for</c><00:09:30.420><c> some</c><00:09:30.600><c> of</c><00:09:30.630><c> that</c><00:09:30.750><c> on</c><00:09:31.080><c> the</c><00:09:31.380><c> front</c>

00:09:31.610 --> 00:09:31.620 align:start position:0%
make up for some of that on the front
 

00:09:31.620 --> 00:09:34.190 align:start position:0%
make up for some of that on the front
end<00:09:31.800><c> with</c><00:09:31.950><c> extra</c><00:09:32.370><c> memory</c><00:09:32.520><c> cost</c><00:09:32.850><c> the</c><00:09:33.450><c> 10</c><00:09:33.630><c> 600</c><00:09:34.080><c> K</c>

00:09:34.190 --> 00:09:34.200 align:start position:0%
end with extra memory cost the 10 600 K
 

00:09:34.200 --> 00:09:36.740 align:start position:0%
end with extra memory cost the 10 600 K
is<00:09:34.260><c> memory</c><00:09:34.649><c> tune</c><00:09:34.920><c> performance</c><00:09:35.610><c> gains</c><00:09:35.820><c> it</c><00:09:36.120><c> 4.4</c>

00:09:36.740 --> 00:09:36.750 align:start position:0%
is memory tune performance gains it 4.4
 

00:09:36.750 --> 00:09:39.530 align:start position:0%
is memory tune performance gains it 4.4
percent<00:09:36.870><c> over</c><00:09:37.320><c> the</c><00:09:37.410><c> ring</c><00:09:37.560><c> OC</c><00:09:38.040><c> at</c><00:09:38.490><c> 278</c><00:09:39.149><c> FPS</c>

00:09:39.530 --> 00:09:39.540 align:start position:0%
percent over the ring OC at 278 FPS
 

00:09:39.540 --> 00:09:41.540 align:start position:0%
percent over the ring OC at 278 FPS
average<00:09:39.690><c> or</c><00:09:40.020><c> 12</c><00:09:40.260><c> percent</c><00:09:40.410><c> versus</c><00:09:41.010><c> full</c><00:09:41.250><c> stock</c>

00:09:41.540 --> 00:09:41.550 align:start position:0%
average or 12 percent versus full stock
 

00:09:41.550 --> 00:09:44.840 align:start position:0%
average or 12 percent versus full stock
1440p<00:09:42.450><c> with</c><00:09:42.720><c> f1</c><00:09:43.080><c> is</c><00:09:43.260><c> mostly</c><00:09:43.649><c> GPU</c><00:09:44.100><c> bad</c><00:09:44.279><c> but</c><00:09:44.610><c> we</c>

00:09:44.840 --> 00:09:44.850 align:start position:0%
1440p with f1 is mostly GPU bad but we
 

00:09:44.850 --> 00:09:47.329 align:start position:0%
1440p with f1 is mostly GPU bad but we
still<00:09:45.149><c> saw</c><00:09:45.450><c> slight</c><00:09:45.810><c> improvements</c><00:09:46.380><c> at</c><00:09:46.470><c> 229</c><00:09:46.920><c> FPS</c>

00:09:47.329 --> 00:09:47.339 align:start position:0%
still saw slight improvements at 229 FPS
 

00:09:47.339 --> 00:09:49.490 align:start position:0%
still saw slight improvements at 229 FPS
average<00:09:47.670><c> for</c><00:09:47.790><c> the</c><00:09:47.850><c> memory</c><00:09:48.120><c> tuned</c><00:09:48.300><c> to</c><00:09:48.870><c> 27</c><00:09:49.380><c> FPS</c>

00:09:49.490 --> 00:09:49.500 align:start position:0%
average for the memory tuned to 27 FPS
 

00:09:49.500 --> 00:09:52.760 align:start position:0%
average for the memory tuned to 27 FPS
average<00:09:49.830><c> for</c><00:09:50.279><c> uncor</c><00:09:50.910><c> only</c><00:09:51.300><c> and</c><00:09:51.510><c> 213</c><00:09:52.440><c> average</c>

00:09:52.760 --> 00:09:52.770 align:start position:0%
average for uncor only and 213 average
 

00:09:52.770 --> 00:09:55.220 align:start position:0%
average for uncor only and 213 average
at<00:09:52.920><c> first</c><00:09:53.130><c> stock</c><00:09:53.399><c> GTA</c><00:09:53.940><c> 5</c><00:09:54.149><c> is</c><00:09:54.390><c> last</c><00:09:54.540><c> giving</c><00:09:55.020><c> us</c><00:09:55.140><c> a</c>

00:09:55.220 --> 00:09:55.230 align:start position:0%
at first stock GTA 5 is last giving us a
 

00:09:55.230 --> 00:09:56.329 align:start position:0%
at first stock GTA 5 is last giving us a
better<00:09:55.410><c> look</c><00:09:55.620><c> at</c><00:09:55.830><c> another</c><00:09:56.070><c> frequency</c>

00:09:56.329 --> 00:09:56.339 align:start position:0%
better look at another frequency
 

00:09:56.339 --> 00:09:58.250 align:start position:0%
better look at another frequency
sensitive<00:09:56.820><c> title</c><00:09:57.330><c> from</c><00:09:57.450><c> an</c><00:09:57.570><c> older</c><00:09:57.870><c> class</c><00:09:58.080><c> of</c>

00:09:58.250 --> 00:09:58.260 align:start position:0%
sensitive title from an older class of
 

00:09:58.260 --> 00:10:00.620 align:start position:0%
sensitive title from an older class of
games<00:09:58.410><c> in</c><00:09:58.709><c> this</c><00:09:59.160><c> one</c><00:09:59.339><c> the</c><00:09:59.490><c> 10</c><00:09:59.670><c> 600</c><00:10:00.060><c> K</c><00:10:00.180><c> started</c>

00:10:00.620 --> 00:10:00.630 align:start position:0%
games in this one the 10 600 K started
 

00:10:00.630 --> 00:10:03.230 align:start position:0%
games in this one the 10 600 K started
at<00:10:00.750><c> 114</c><00:10:01.320><c> FPS</c><00:10:01.680><c> average</c><00:10:01.829><c> about</c><00:10:02.550><c> equal</c><00:10:02.940><c> to</c><00:10:02.970><c> the</c>

00:10:03.230 --> 00:10:03.240 align:start position:0%
at 114 FPS average about equal to the
 

00:10:03.240 --> 00:10:05.150 align:start position:0%
at 114 FPS average about equal to the
9600<00:10:03.959><c> case</c><00:10:04.110><c> stock</c><00:10:04.410><c> and</c><00:10:04.680><c> it</c><00:10:04.860><c> jumped</c><00:10:05.130><c> to</c>

00:10:05.150 --> 00:10:05.160 align:start position:0%
9600 case stock and it jumped to
 

00:10:05.160 --> 00:10:08.210 align:start position:0%
9600 case stock and it jumped to
equivalence<00:10:05.730><c> with</c><00:10:05.940><c> the</c><00:10:06.060><c> 9900</c><00:10:06.660><c> K</c><00:10:06.810><c> and</c><00:10:07.110><c> 9700</c><00:10:08.100><c> K</c>

00:10:08.210 --> 00:10:08.220 align:start position:0%
equivalence with the 9900 K and 9700 K
 

00:10:08.220 --> 00:10:11.240 align:start position:0%
equivalence with the 9900 K and 9700 K
results<00:10:08.730><c> when</c><00:10:09.000><c> at</c><00:10:09.240><c> 5.1</c><00:10:09.990><c> gigahertz</c><00:10:10.320><c> for</c><00:10:10.890><c> the</c><00:10:11.040><c> 10</c>

00:10:11.240 --> 00:10:11.250 align:start position:0%
results when at 5.1 gigahertz for the 10
 

00:10:11.250 --> 00:10:13.519 align:start position:0%
results when at 5.1 gigahertz for the 10
600<00:10:11.670><c> K</c><00:10:11.790><c> versus</c><00:10:12.450><c> the</c><00:10:12.570><c> stock</c><00:10:12.810><c> CPUs</c><00:10:13.230><c> from</c><00:10:13.290><c> last</c>

00:10:13.519 --> 00:10:13.529 align:start position:0%
600 K versus the stock CPUs from last
 

00:10:13.529 --> 00:10:15.829 align:start position:0%
600 K versus the stock CPUs from last
generation<00:10:14.339><c> if</c><00:10:14.459><c> he</c><00:10:14.550><c> called</c><00:10:14.790><c> that</c><00:10:15.029><c> the</c><00:10:15.630><c> ring</c>

00:10:15.829 --> 00:10:15.839 align:start position:0%
generation if he called that the ring
 

00:10:15.839 --> 00:10:18.050 align:start position:0%
generation if he called that the ring
change<00:10:16.200><c> boosted</c><00:10:16.680><c> it</c><00:10:16.800><c> further</c><00:10:17.010><c> to</c><00:10:17.220><c> 128</c><00:10:17.730><c> FPS</c>

00:10:18.050 --> 00:10:18.060 align:start position:0%
change boosted it further to 128 FPS
 

00:10:18.060 --> 00:10:19.579 align:start position:0%
change boosted it further to 128 FPS
average<00:10:18.209><c> which</c><00:10:18.570><c> is</c><00:10:18.600><c> a</c><00:10:18.720><c> 5</c><00:10:18.899><c> percent</c><00:10:19.079><c> gain</c><00:10:19.410><c> over</c>

00:10:19.579 --> 00:10:19.589 align:start position:0%
average which is a 5 percent gain over
 

00:10:19.589 --> 00:10:22.310 align:start position:0%
average which is a 5 percent gain over
the<00:10:19.649><c> 5.1</c><00:10:20.070><c> gigahertz</c><00:10:20.430><c> 122</c><00:10:21.089><c> FPS</c><00:10:21.420><c> results</c><00:10:21.810><c> the</c>

00:10:22.310 --> 00:10:22.320 align:start position:0%
the 5.1 gigahertz 122 FPS results the
 

00:10:22.320 --> 00:10:24.530 align:start position:0%
the 5.1 gigahertz 122 FPS results the
memory<00:10:22.649><c> tune</c><00:10:22.860><c> pushed</c><00:10:23.220><c> it</c><00:10:23.339><c> to</c><00:10:23.430><c> 134</c><00:10:24.000><c> FPS</c><00:10:24.390><c> average</c>

00:10:24.530 --> 00:10:24.540 align:start position:0%
memory tune pushed it to 134 FPS average
 

00:10:24.540 --> 00:10:27.590 align:start position:0%
memory tune pushed it to 134 FPS average
about<00:10:25.260><c> equal</c><00:10:25.680><c> with</c><00:10:25.829><c> the</c><00:10:25.920><c> 1900</c><00:10:26.459><c> K</c><00:10:26.640><c> +</c><00:10:26.970><c> 10</c><00:10:27.180><c> 910</c>

00:10:27.590 --> 00:10:27.600 align:start position:0%
about equal with the 1900 K + 10 910
 

00:10:27.600 --> 00:10:30.350 align:start position:0%
about equal with the 1900 K + 10 910
maximum<00:10:28.500><c> clocks</c><00:10:28.770><c> the</c><00:10:29.430><c> total</c><00:10:29.730><c> top-to-bottom</c>

00:10:30.350 --> 00:10:30.360 align:start position:0%
maximum clocks the total top-to-bottom
 

00:10:30.360 --> 00:10:33.350 align:start position:0%
maximum clocks the total top-to-bottom
gain<00:10:30.570><c> from</c><00:10:31.050><c> 114</c><00:10:31.770><c> FPS</c><00:10:32.130><c> average</c><00:10:32.279><c> to</c><00:10:32.520><c> 134</c><00:10:33.029><c> FPS</c>

00:10:33.350 --> 00:10:33.360 align:start position:0%
gain from 114 FPS average to 134 FPS
 

00:10:33.360 --> 00:10:36.740 align:start position:0%
gain from 114 FPS average to 134 FPS
average<00:10:33.690><c> is</c><00:10:34.020><c> about</c><00:10:34.260><c> 17%</c><00:10:34.740><c> note</c><00:10:35.640><c> that</c><00:10:35.850><c> 0.1%</c><00:10:36.390><c> lows</c>

00:10:36.740 --> 00:10:36.750 align:start position:0%
average is about 17% note that 0.1% lows
 

00:10:36.750 --> 00:10:39.680 align:start position:0%
average is about 17% note that 0.1% lows
took<00:10:36.990><c> a</c><00:10:37.020><c> hit</c><00:10:37.320><c> because</c><00:10:37.529><c> of</c><00:10:37.730><c> one</c><00:10:38.730><c> run</c><00:10:38.970><c> dropping</c>

00:10:39.680 --> 00:10:39.690 align:start position:0%
took a hit because of one run dropping
 

00:10:39.690 --> 00:10:41.720 align:start position:0%
took a hit because of one run dropping
the<00:10:39.779><c> ball</c><00:10:39.959><c> hard</c><00:10:40.320><c> due</c><00:10:40.920><c> to</c><00:10:41.070><c> questionable</c>

00:10:41.720 --> 00:10:41.730 align:start position:0%
the ball hard due to questionable
 

00:10:41.730 --> 00:10:43.579 align:start position:0%
the ball hard due to questionable
stability<00:10:41.880><c> of</c><00:10:42.240><c> the</c><00:10:42.329><c> overclocked</c><00:10:42.779><c> we</c><00:10:43.320><c> need</c><00:10:43.500><c> to</c>

00:10:43.579 --> 00:10:43.589 align:start position:0%
stability of the overclocked we need to
 

00:10:43.589 --> 00:10:45.079 align:start position:0%
stability of the overclocked we need to
do<00:10:43.709><c> further</c><00:10:43.950><c> tuning</c><00:10:44.370><c> here</c><00:10:44.550><c> to</c><00:10:44.700><c> improve</c><00:10:44.940><c> the</c>

00:10:45.079 --> 00:10:45.089 align:start position:0%
do further tuning here to improve the
 

00:10:45.089 --> 00:10:47.389 align:start position:0%
do further tuning here to improve the
frame<00:10:45.270><c> time</c><00:10:45.450><c> consistency</c><00:10:46.140><c> as</c><00:10:46.320><c> one</c><00:10:47.010><c> run</c><00:10:47.190><c> did</c>

00:10:47.389 --> 00:10:47.399 align:start position:0%
frame time consistency as one run did
 

00:10:47.399 --> 00:10:48.980 align:start position:0%
frame time consistency as one run did
have<00:10:47.579><c> a</c><00:10:47.610><c> hitch</c><00:10:47.850><c> that</c><00:10:48.089><c> lasted</c><00:10:48.450><c> about</c><00:10:48.540><c> 300</c>

00:10:48.980 --> 00:10:48.990 align:start position:0%
have a hitch that lasted about 300
 

00:10:48.990 --> 00:10:50.000 align:start position:0%
have a hitch that lasted about 300
milliseconds<00:10:49.410><c> which</c><00:10:49.529><c> is</c><00:10:49.560><c> obviously</c>

00:10:50.000 --> 00:10:50.010 align:start position:0%
milliseconds which is obviously
 

00:10:50.010 --> 00:10:51.860 align:start position:0%
milliseconds which is obviously
experience<00:10:50.520><c> ruining</c><00:10:50.880><c> for</c><00:10:51.000><c> that</c><00:10:51.149><c> run</c><00:10:51.329><c> more</c>

00:10:51.860 --> 00:10:51.870 align:start position:0%
experience ruining for that run more
 

00:10:51.870 --> 00:10:53.600 align:start position:0%
experience ruining for that run more
voltage<00:10:52.110><c> would</c><00:10:52.529><c> fix</c><00:10:52.890><c> it</c><00:10:53.040><c> though</c><00:10:53.190><c> blender</c>

00:10:53.600 --> 00:10:53.610 align:start position:0%
voltage would fix it though blender
 

00:10:53.610 --> 00:10:55.250 align:start position:0%
voltage would fix it though blender
isn't<00:10:53.850><c> very</c><00:10:54.029><c> responsive</c><00:10:54.630><c> to</c><00:10:54.750><c> the</c><00:10:54.839><c> changes</c>

00:10:55.250 --> 00:10:55.260 align:start position:0%
isn't very responsive to the changes
 

00:10:55.260 --> 00:10:57.019 align:start position:0%
isn't very responsive to the changes
these<00:10:55.470><c> applications</c><00:10:56.130><c> could</c><00:10:56.279><c> only</c><00:10:56.430><c> hold</c><00:10:56.730><c> about</c>

00:10:57.019 --> 00:10:57.029 align:start position:0%
these applications could only hold about
 

00:10:57.029 --> 00:10:59.230 align:start position:0%
these applications could only hold about
5<00:10:57.300><c> gigahertz</c><00:10:57.660><c> all</c><00:10:57.959><c> core</c><00:10:58.200><c> in</c><00:10:58.350><c> our</c><00:10:58.470><c> review</c><00:10:58.800><c> as</c>

00:10:59.230 --> 00:10:59.240 align:start position:0%
5 gigahertz all core in our review as
 

00:10:59.240 --> 00:11:01.220 align:start position:0%
5 gigahertz all core in our review as
five-point-one<00:11:00.240><c> required</c><00:11:00.630><c> just</c><00:11:01.020><c> enough</c>

00:11:01.220 --> 00:11:01.230 align:start position:0%
five-point-one required just enough
 

00:11:01.230 --> 00:11:02.720 align:start position:0%
five-point-one required just enough
voltage<00:11:01.589><c> to</c><00:11:01.649><c> make</c><00:11:01.860><c> it</c><00:11:02.010><c> impossible</c><00:11:02.339><c> or</c>

00:11:02.720 --> 00:11:02.730 align:start position:0%
voltage to make it impossible or
 

00:11:02.730 --> 00:11:04.790 align:start position:0%
voltage to make it impossible or
unreasonable<00:11:03.510><c> to</c><00:11:03.630><c> hold</c><00:11:03.839><c> without</c><00:11:04.290><c> thermal</c>

00:11:04.790 --> 00:11:04.800 align:start position:0%
unreasonable to hold without thermal
 

00:11:04.800 --> 00:11:06.319 align:start position:0%
unreasonable to hold without thermal
throttling<00:11:04.980><c> on</c><00:11:05.400><c> our</c><00:11:05.579><c> cooling</c><00:11:05.940><c> solution</c>

00:11:06.319 --> 00:11:06.329 align:start position:0%
throttling on our cooling solution
 

00:11:06.329 --> 00:11:07.670 align:start position:0%
throttling on our cooling solution
blender<00:11:07.020><c> also</c><00:11:07.260><c> is</c>

00:11:07.670 --> 00:11:07.680 align:start position:0%
blender also is
 

00:11:07.680 --> 00:11:09.560 align:start position:0%
blender also is
AVX<00:11:08.130><c> workload</c><00:11:08.580><c> which</c><00:11:08.790><c> makes</c><00:11:09.029><c> it</c><00:11:09.210><c> a</c><00:11:09.330><c> lot</c><00:11:09.510><c> harder</c>

00:11:09.560 --> 00:11:09.570 align:start position:0%
AVX workload which makes it a lot harder
 

00:11:09.570 --> 00:11:12.650 align:start position:0%
AVX workload which makes it a lot harder
to<00:11:09.990><c> run</c><00:11:10.140><c> the</c><00:11:10.710><c> 5.0</c><00:11:11.250><c> gigahertz</c><00:11:11.580><c> OC</c><00:11:12.120><c> originally</c>

00:11:12.650 --> 00:11:12.660 align:start position:0%
to run the 5.0 gigahertz OC originally
 

00:11:12.660 --> 00:11:14.540 align:start position:0%
to run the 5.0 gigahertz OC originally
boosted<00:11:12.990><c> us</c><00:11:13.110><c> from</c><00:11:13.320><c> 18</c><00:11:13.680><c> point</c><00:11:13.890><c> 8</c><00:11:14.010><c> minutes</c><00:11:14.370><c> on</c>

00:11:14.540 --> 00:11:14.550 align:start position:0%
boosted us from 18 point 8 minutes on
 

00:11:14.550 --> 00:11:17.060 align:start position:0%
boosted us from 18 point 8 minutes on
our<00:11:14.580><c> GN</c><00:11:14.940><c> monkey</c><00:11:15.270><c> head</c><00:11:15.390><c> render</c><00:11:15.750><c> to</c><00:11:16.290><c> 17</c><00:11:16.770><c> minutes</c>

00:11:17.060 --> 00:11:17.070 align:start position:0%
our GN monkey head render to 17 minutes
 

00:11:17.070 --> 00:11:19.610 align:start position:0%
our GN monkey head render to 17 minutes
a<00:11:17.160><c> time</c><00:11:17.370><c> reduction</c><00:11:17.730><c> of</c><00:11:17.850><c> 10%</c><00:11:18.029><c> the</c><00:11:19.020><c> cache</c><00:11:19.230><c> OC</c>

00:11:19.610 --> 00:11:19.620 align:start position:0%
a time reduction of 10% the cache OC
 

00:11:19.620 --> 00:11:21.350 align:start position:0%
a time reduction of 10% the cache OC
pushed<00:11:19.920><c> it</c><00:11:20.070><c> to</c><00:11:20.220><c> sixteen</c><00:11:20.670><c> point</c><00:11:20.850><c> nine</c><00:11:20.910><c> minutes</c>

00:11:21.350 --> 00:11:21.360 align:start position:0%
pushed it to sixteen point nine minutes
 

00:11:21.360 --> 00:11:23.630 align:start position:0%
pushed it to sixteen point nine minutes
which<00:11:21.839><c> is</c><00:11:21.870><c> within</c><00:11:22.140><c> error</c><00:11:22.560><c> and</c><00:11:22.890><c> not</c><00:11:23.190><c> really</c>

00:11:23.630 --> 00:11:23.640 align:start position:0%
which is within error and not really
 

00:11:23.640 --> 00:11:26.000 align:start position:0%
which is within error and not really
much<00:11:23.820><c> of</c><00:11:23.850><c> a</c><00:11:24.000><c> change</c><00:11:24.270><c> the</c><00:11:24.839><c> memory</c><00:11:25.050><c> OC</c><00:11:25.529><c> and</c><00:11:25.770><c> the</c>

00:11:26.000 --> 00:11:26.010 align:start position:0%
much of a change the memory OC and the
 

00:11:26.010 --> 00:11:28.280 align:start position:0%
much of a change the memory OC and the
cache<00:11:26.220><c> OC</c><00:11:26.550><c> together</c><00:11:26.850><c> pushed</c><00:11:27.540><c> us</c><00:11:27.720><c> to</c><00:11:27.930><c> sixteen</c>

00:11:28.280 --> 00:11:28.290 align:start position:0%
cache OC together pushed us to sixteen
 

00:11:28.290 --> 00:11:30.350 align:start position:0%
cache OC together pushed us to sixteen
point<00:11:28.529><c> four</c><00:11:28.709><c> minutes</c><00:11:29.070><c> which</c><00:11:29.550><c> is</c><00:11:29.760><c> a</c><00:11:29.790><c> reduction</c>

00:11:30.350 --> 00:11:30.360 align:start position:0%
point four minutes which is a reduction
 

00:11:30.360 --> 00:11:33.199 align:start position:0%
point four minutes which is a reduction
of<00:11:30.450><c> 3.5%</c><00:11:31.080><c> against</c><00:11:32.010><c> the</c><00:11:32.250><c> stand</c><00:11:32.520><c> alone</c><00:11:32.730><c> all</c><00:11:32.940><c> core</c>

00:11:33.199 --> 00:11:33.209 align:start position:0%
of 3.5% against the stand alone all core
 

00:11:33.209 --> 00:11:35.870 align:start position:0%
of 3.5% against the stand alone all core
OC<00:11:33.600><c> of</c><00:11:33.839><c> 17</c><00:11:34.320><c> minutes</c><00:11:34.440><c> that's</c><00:11:35.220><c> not</c><00:11:35.550><c> a</c><00:11:35.580><c> huge</c>

00:11:35.870 --> 00:11:35.880 align:start position:0%
OC of 17 minutes that's not a huge
 

00:11:35.880 --> 00:11:38.329 align:start position:0%
OC of 17 minutes that's not a huge
change<00:11:36.209><c> but</c><00:11:36.899><c> it</c><00:11:37.140><c> is</c><00:11:37.320><c> measurable</c><00:11:37.740><c> and</c><00:11:38.010><c> it</c><00:11:38.190><c> is</c><00:11:38.310><c> a</c>

00:11:38.329 --> 00:11:38.339 align:start position:0%
change but it is measurable and it is a
 

00:11:38.339 --> 00:11:40.220 align:start position:0%
change but it is measurable and it is a
real<00:11:38.550><c> one</c><00:11:38.820><c> it's</c><00:11:39.180><c> just</c><00:11:39.360><c> that</c><00:11:39.450><c> games</c><00:11:39.779><c> benefit</c>

00:11:40.220 --> 00:11:40.230 align:start position:0%
real one it's just that games benefit
 

00:11:40.230 --> 00:11:42.230 align:start position:0%
real one it's just that games benefit
more<00:11:40.410><c> the</c><00:11:40.770><c> GM</c><00:11:41.010><c> logo</c><00:11:41.310><c> render</c><00:11:41.640><c> changed</c><00:11:42.029><c> even</c>

00:11:42.230 --> 00:11:42.240 align:start position:0%
more the GM logo render changed even
 

00:11:42.240 --> 00:11:44.120 align:start position:0%
more the GM logo render changed even
less<00:11:42.480><c> the</c><00:11:42.779><c> upload</c><00:11:43.110><c> was</c><00:11:43.350><c> somewhat</c><00:11:43.709><c> meaningful</c>

00:11:44.120 --> 00:11:44.130 align:start position:0%
less the upload was somewhat meaningful
 

00:11:44.130 --> 00:11:46.400 align:start position:0%
less the upload was somewhat meaningful
from<00:11:44.339><c> stock</c><00:11:44.670><c> to</c><00:11:44.850><c> OC</c><00:11:45.180><c> at</c><00:11:45.420><c> 24</c><00:11:45.839><c> minutes</c><00:11:46.110><c> versus</c>

00:11:46.400 --> 00:11:46.410 align:start position:0%
from stock to OC at 24 minutes versus
 

00:11:46.410 --> 00:11:48.980 align:start position:0%
from stock to OC at 24 minutes versus
21.5<00:11:47.070><c> that</c><00:11:47.790><c> add</c><00:11:48.149><c> up</c><00:11:48.300><c> fast</c><00:11:48.510><c> if</c><00:11:48.810><c> you</c><00:11:48.899><c> were</c>

00:11:48.980 --> 00:11:48.990 align:start position:0%
21.5 that add up fast if you were
 

00:11:48.990 --> 00:11:50.570 align:start position:0%
21.5 that add up fast if you were
rendering<00:11:49.200><c> a</c><00:11:49.320><c> full</c><00:11:49.470><c> animation</c><00:11:50.010><c> but</c><00:11:50.490><c> the</c>

00:11:50.570 --> 00:11:50.580 align:start position:0%
rendering a full animation but the
 

00:11:50.580 --> 00:11:52.970 align:start position:0%
rendering a full animation but the
change<00:11:50.820><c> to</c><00:11:51.000><c> 48</c><00:11:51.390><c> X</c><00:11:51.600><c> and</c><00:11:51.839><c> 4000</c><00:11:52.380><c> megahertz</c><00:11:52.709><c> memory</c>

00:11:52.970 --> 00:11:52.980 align:start position:0%
change to 48 X and 4000 megahertz memory
 

00:11:52.980 --> 00:11:55.370 align:start position:0%
change to 48 X and 4000 megahertz memory
is<00:11:53.160><c> nearly</c><00:11:53.490><c> zero</c><00:11:53.880><c> 7-zip</c><00:11:54.570><c> is</c><00:11:54.750><c> the</c><00:11:54.870><c> last</c><00:11:55.080><c> one</c><00:11:55.320><c> for</c>

00:11:55.370 --> 00:11:55.380 align:start position:0%
is nearly zero 7-zip is the last one for
 

00:11:55.380 --> 00:11:57.680 align:start position:0%
is nearly zero 7-zip is the last one for
7-zip<00:11:56.070><c> compression</c><00:11:56.700><c> testing</c><00:11:57.089><c> the</c><00:11:57.270><c> jump</c><00:11:57.510><c> from</c>

00:11:57.680 --> 00:11:57.690 align:start position:0%
7-zip compression testing the jump from
 

00:11:57.690 --> 00:12:01.340 align:start position:0%
7-zip compression testing the jump from
stock<00:11:58.020><c> to</c><00:11:58.050><c> 5</c><00:11:58.560><c> gigahertz</c><00:11:58.890><c> was</c><00:11:59.190><c> 54</c><00:11:59.700><c> K</c><00:11:59.910><c> MIPS</c><00:12:00.209><c> to</c><00:12:00.810><c> 58</c>

00:12:01.340 --> 00:12:01.350 align:start position:0%
stock to 5 gigahertz was 54 K MIPS to 58
 

00:12:01.350 --> 00:12:03.230 align:start position:0%
stock to 5 gigahertz was 54 K MIPS to 58
came<00:12:01.620><c> EPS</c><00:12:01.860><c> while</c><00:12:02.190><c> the</c><00:12:02.430><c> cache</c><00:12:02.670><c> overclocked</c>

00:12:03.230 --> 00:12:03.240 align:start position:0%
came EPS while the cache overclocked
 

00:12:03.240 --> 00:12:08.480 align:start position:0%
came EPS while the cache overclocked
improvement<00:12:03.779><c> was</c><00:12:04.160><c> 250</c><00:12:05.240><c> 8310</c><00:12:06.240><c> from</c><00:12:06.839><c> 50</c><00:12:07.339><c> 7812</c>

00:12:08.480 --> 00:12:08.490 align:start position:0%
improvement was 250 8310 from 50 7812
 

00:12:08.490 --> 00:12:10.880 align:start position:0%
improvement was 250 8310 from 50 7812
or<00:12:08.670><c> less</c><00:12:08.970><c> than</c><00:12:09.149><c> 1%</c><00:12:09.690><c> the</c><00:12:10.200><c> memory</c><00:12:10.470><c> overclock</c>

00:12:10.880 --> 00:12:10.890 align:start position:0%
or less than 1% the memory overclock
 

00:12:10.890 --> 00:12:12.710 align:start position:0%
or less than 1% the memory overclock
gave<00:12:11.130><c> us</c><00:12:11.250><c> another</c><00:12:11.459><c> 1.6</c><00:12:12.180><c> percent</c><00:12:12.240><c> improvement</c>

00:12:12.710 --> 00:12:12.720 align:start position:0%
gave us another 1.6 percent improvement
 

00:12:12.720 --> 00:12:14.960 align:start position:0%
gave us another 1.6 percent improvement
so<00:12:13.140><c> there's</c><00:12:13.620><c> really</c><00:12:13.800><c> not</c><00:12:13.980><c> much</c><00:12:14.190><c> impact</c><00:12:14.400><c> here</c>

00:12:14.960 --> 00:12:14.970 align:start position:0%
so there's really not much impact here
 

00:12:14.970 --> 00:12:16.310 align:start position:0%
so there's really not much impact here
decompression<00:12:15.420><c> was</c><00:12:15.660><c> about</c><00:12:15.810><c> the</c><00:12:15.900><c> same</c><00:12:16.110><c> with</c>

00:12:16.310 --> 00:12:16.320 align:start position:0%
decompression was about the same with
 

00:12:16.320 --> 00:12:18.380 align:start position:0%
decompression was about the same with
nearly<00:12:16.589><c> zero</c><00:12:16.890><c> impact</c><00:12:17.310><c> after</c><00:12:17.610><c> the</c><00:12:17.880><c> initial</c><00:12:18.209><c> all</c>

00:12:18.380 --> 00:12:18.390 align:start position:0%
nearly zero impact after the initial all
 

00:12:18.390 --> 00:12:20.960 align:start position:0%
nearly zero impact after the initial all
core<00:12:18.630><c> OC</c><00:12:18.990><c> this</c><00:12:19.589><c> bench</c><00:12:19.890><c> just</c><00:12:20.279><c> really</c><00:12:20.670><c> doesn't</c>

00:12:20.960 --> 00:12:20.970 align:start position:0%
core OC this bench just really doesn't
 

00:12:20.970 --> 00:12:22.370 align:start position:0%
core OC this bench just really doesn't
benefit<00:12:21.270><c> from</c><00:12:21.330><c> overclocking</c><00:12:22.020><c> changes</c>

00:12:22.370 --> 00:12:22.380 align:start position:0%
benefit from overclocking changes
 

00:12:22.380 --> 00:12:25.040 align:start position:0%
benefit from overclocking changes
outside<00:12:23.100><c> of</c><00:12:23.250><c> the</c><00:12:23.370><c> core</c><00:12:23.550><c> frequency</c><00:12:24.120><c> and</c><00:12:24.360><c> so</c>

00:12:25.040 --> 00:12:25.050 align:start position:0%
outside of the core frequency and so
 

00:12:25.050 --> 00:12:26.900 align:start position:0%
outside of the core frequency and so
it's<00:12:25.709><c> really</c><00:12:26.040><c> unless</c><00:12:26.370><c> you</c><00:12:26.520><c> have</c><00:12:26.610><c> a</c><00:12:26.640><c> specific</c>

00:12:26.900 --> 00:12:26.910 align:start position:0%
it's really unless you have a specific
 

00:12:26.910 --> 00:12:29.030 align:start position:0%
it's really unless you have a specific
production<00:12:27.420><c> application</c><00:12:28.050><c> you</c><00:12:28.140><c> know</c><00:12:28.350><c> benefits</c>

00:12:29.030 --> 00:12:29.040 align:start position:0%
production application you know benefits
 

00:12:29.040 --> 00:12:30.680 align:start position:0%
production application you know benefits
from<00:12:29.339><c> a</c><00:12:29.400><c> higher</c><00:12:29.520><c> memory</c><00:12:29.730><c> bandwidth</c><00:12:30.240><c> or</c><00:12:30.480><c> from</c>

00:12:30.680 --> 00:12:30.690 align:start position:0%
from a higher memory bandwidth or from
 

00:12:30.690 --> 00:12:32.870 align:start position:0%
from a higher memory bandwidth or from
tuning<00:12:31.410><c> to</c><00:12:31.560><c> the</c><00:12:31.650><c> cash</c><00:12:31.860><c> ratio</c><00:12:32.220><c> or</c><00:12:32.640><c> anything</c>

00:12:32.870 --> 00:12:32.880 align:start position:0%
tuning to the cash ratio or anything
 

00:12:32.880 --> 00:12:35.630 align:start position:0%
tuning to the cash ratio or anything
else<00:12:33.120><c> that</c><00:12:33.300><c> we've</c><00:12:33.420><c> done</c><00:12:33.540><c> here</c><00:12:34.160><c> this</c><00:12:35.160><c> is</c><00:12:35.339><c> mostly</c>

00:12:35.630 --> 00:12:35.640 align:start position:0%
else that we've done here this is mostly
 

00:12:35.640 --> 00:12:37.550 align:start position:0%
else that we've done here this is mostly
a<00:12:35.730><c> gaming</c><00:12:36.180><c> impact</c><00:12:36.570><c> that</c><00:12:36.779><c> you'll</c><00:12:36.900><c> get</c><00:12:37.140><c> which</c>

00:12:37.550 --> 00:12:37.560 align:start position:0%
a gaming impact that you'll get which
 

00:12:37.560 --> 00:12:39.199 align:start position:0%
a gaming impact that you'll get which
still<00:12:37.800><c> has</c><00:12:37.980><c> a</c><00:12:38.010><c> lot</c><00:12:38.190><c> of</c><00:12:38.220><c> value</c><00:12:38.580><c> it's</c><00:12:38.790><c> just</c><00:12:38.850><c> in</c><00:12:39.150><c> a</c>

00:12:39.199 --> 00:12:39.209 align:start position:0%
still has a lot of value it's just in a
 

00:12:39.209 --> 00:12:40.880 align:start position:0%
still has a lot of value it's just in a
more<00:12:39.390><c> limited</c><00:12:39.570><c> set</c><00:12:39.930><c> of</c><00:12:39.959><c> applications</c><00:12:40.620><c> so</c>

00:12:40.880 --> 00:12:40.890 align:start position:0%
more limited set of applications so
 

00:12:40.890 --> 00:12:42.260 align:start position:0%
more limited set of applications so
that's<00:12:41.040><c> the</c><00:12:41.130><c> recap</c><00:12:41.490><c> then</c><00:12:41.700><c> the</c><00:12:41.970><c> biggest</c>

00:12:42.260 --> 00:12:42.270 align:start position:0%
that's the recap then the biggest
 

00:12:42.270 --> 00:12:44.120 align:start position:0%
that's the recap then the biggest
takeaway<00:12:42.660><c> here</c><00:12:42.690><c> is</c><00:12:42.930><c> that</c><00:12:43.110><c> it's</c><00:12:43.560><c> absolutely</c>

00:12:44.120 --> 00:12:44.130 align:start position:0%
takeaway here is that it's absolutely
 

00:12:44.130 --> 00:12:45.980 align:start position:0%
takeaway here is that it's absolutely
worth<00:12:44.310><c> the</c><00:12:44.550><c> 5</c><00:12:44.760><c> minutes</c><00:12:45.120><c> or</c><00:12:45.240><c> so</c><00:12:45.270><c> it</c><00:12:45.510><c> takes</c><00:12:45.720><c> to</c>

00:12:45.980 --> 00:12:45.990 align:start position:0%
worth the 5 minutes or so it takes to
 

00:12:45.990 --> 00:12:47.960 align:start position:0%
worth the 5 minutes or so it takes to
set<00:12:46.230><c> some</c><00:12:46.650><c> kind</c><00:12:46.860><c> of</c><00:12:47.040><c> rein</c><00:12:47.250><c> overclock</c><00:12:47.730><c> some</c>

00:12:47.960 --> 00:12:47.970 align:start position:0%
set some kind of rein overclock some
 

00:12:47.970 --> 00:12:49.550 align:start position:0%
set some kind of rein overclock some
kind<00:12:48.120><c> of</c><00:12:48.150><c> cache</c><00:12:48.360><c> overclock</c><00:12:48.810><c> so</c><00:12:49.350><c> if</c><00:12:49.410><c> you're</c>

00:12:49.550 --> 00:12:49.560 align:start position:0%
kind of cache overclock so if you're
 

00:12:49.560 --> 00:12:51.949 align:start position:0%
kind of cache overclock so if you're
doing<00:12:49.740><c> let's</c><00:12:50.339><c> say</c><00:12:50.430><c> you</c><00:12:51.060><c> put</c><00:12:51.270><c> the</c><00:12:51.390><c> basic</c><00:12:51.750><c> time</c>

00:12:51.949 --> 00:12:51.959 align:start position:0%
doing let's say you put the basic time
 

00:12:51.959 --> 00:12:54.410 align:start position:0%
doing let's say you put the basic time
into<00:12:52.200><c> get</c><00:12:52.370><c> 50</c><00:12:53.370><c> x</c><00:12:53.579><c> all</c><00:12:53.790><c> core</c><00:12:54.029><c> that's</c><00:12:54.240><c> stable</c>

00:12:54.410 --> 00:12:54.420 align:start position:0%
into get 50 x all core that's stable
 

00:12:54.420 --> 00:12:56.540 align:start position:0%
into get 50 x all core that's stable
everywhere<00:12:54.930><c> and</c><00:12:55.110><c> you</c><00:12:55.800><c> might</c><00:12:55.950><c> validate</c><00:12:56.190><c> that</c>

00:12:56.540 --> 00:12:56.550 align:start position:0%
everywhere and you might validate that
 

00:12:56.550 --> 00:12:58.579 align:start position:0%
everywhere and you might validate that
it's<00:12:56.670><c> stable</c><00:12:56.820><c> by</c><00:12:57.060><c> running</c><00:12:57.360><c> a</c><00:12:57.630><c> longer</c><00:12:58.170><c> blender</c>

00:12:58.579 --> 00:12:58.589 align:start position:0%
it's stable by running a longer blender
 

00:12:58.589 --> 00:13:01.400 align:start position:0%
it's stable by running a longer blender
render<00:12:59.310><c> or</c><00:12:59.700><c> maybe</c><00:12:59.970><c> prime95</c><00:13:00.630><c> if</c><00:13:01.079><c> you</c><00:13:01.170><c> really</c>

00:13:01.400 --> 00:13:01.410 align:start position:0%
render or maybe prime95 if you really
 

00:13:01.410 --> 00:13:02.780 align:start position:0%
render or maybe prime95 if you really
hate<00:13:01.709><c> your</c><00:13:01.770><c> computer</c><00:13:02.339><c> and</c><00:13:02.430><c> it's</c><00:13:02.579><c> coin</c>

00:13:02.780 --> 00:13:02.790 align:start position:0%
hate your computer and it's coin
 

00:13:02.790 --> 00:13:04.340 align:start position:0%
hate your computer and it's coin
solution<00:13:03.180><c> or</c><00:13:03.570><c> you</c><00:13:03.720><c> could</c><00:13:03.839><c> do</c><00:13:03.959><c> something</c><00:13:04.170><c> in</c>

00:13:04.340 --> 00:13:04.350 align:start position:0%
solution or you could do something in
 

00:13:04.350 --> 00:13:06.319 align:start position:0%
solution or you could do something in
between<00:13:04.470><c> but</c><00:13:04.709><c> either</c><00:13:05.040><c> way</c><00:13:05.250><c> run</c><00:13:05.820><c> something</c><00:13:06.060><c> for</c>

00:13:06.319 --> 00:13:06.329 align:start position:0%
between but either way run something for
 

00:13:06.329 --> 00:13:07.910 align:start position:0%
between but either way run something for
a<00:13:06.360><c> long</c><00:13:06.510><c> period</c><00:13:06.810><c> of</c><00:13:06.870><c> time</c><00:13:07.079><c> that</c><00:13:07.290><c> is</c><00:13:07.440><c> intensive</c>

00:13:07.910 --> 00:13:07.920 align:start position:0%
a long period of time that is intensive
 

00:13:07.920 --> 00:13:10.340 align:start position:0%
a long period of time that is intensive
on<00:13:08.010><c> the</c><00:13:08.100><c> cpu</c><00:13:08.490><c> ideally</c><00:13:09.360><c> you</c><00:13:09.510><c> do</c><00:13:09.630><c> an</c><00:13:09.750><c> on</c><00:13:09.870><c> a</c><00:13:09.899><c> V</c><00:13:10.200><c> X</c>

00:13:10.340 --> 00:13:10.350 align:start position:0%
on the cpu ideally you do an on a V X
 

00:13:10.350 --> 00:13:11.930 align:start position:0%
on the cpu ideally you do an on a V X
and<00:13:10.589><c> an</c><00:13:10.649><c> AV</c><00:13:10.800><c> X</c><00:13:11.010><c> test</c><00:13:11.310><c> and</c><00:13:11.490><c> determine</c><00:13:11.579><c> if</c><00:13:11.910><c> you</c>

00:13:11.930 --> 00:13:11.940 align:start position:0%
and an AV X test and determine if you
 

00:13:11.940 --> 00:13:14.210 align:start position:0%
and an AV X test and determine if you
want<00:13:12.089><c> an</c><00:13:12.240><c> AV</c><00:13:12.360><c> X</c><00:13:12.570><c> offset</c><00:13:12.750><c> or</c><00:13:13.079><c> not</c><00:13:13.200><c> and</c><00:13:13.440><c> you</c><00:13:14.100><c> go</c>

00:13:14.210 --> 00:13:14.220 align:start position:0%
want an AV X offset or not and you go
 

00:13:14.220 --> 00:13:16.670 align:start position:0%
want an AV X offset or not and you go
from<00:13:14.430><c> there</c><00:13:14.670><c> that's</c><00:13:15.540><c> the</c><00:13:15.839><c> the</c><00:13:16.290><c> first</c><00:13:16.500><c> major</c>

00:13:16.670 --> 00:13:16.680 align:start position:0%
from there that's the the first major
 

00:13:16.680 --> 00:13:18.980 align:start position:0%
from there that's the the first major
part<00:13:16.980><c> of</c><00:13:17.010><c> the</c><00:13:17.100><c> process</c><00:13:17.550><c> but</c><00:13:17.790><c> after</c><00:13:18.089><c> that</c><00:13:18.209><c> it's</c>

00:13:18.980 --> 00:13:18.990 align:start position:0%
part of the process but after that it's
 

00:13:18.990 --> 00:13:21.230 align:start position:0%
part of the process but after that it's
definitely<00:13:19.500><c> worth</c><00:13:19.650><c> maybe</c><00:13:19.980><c> bringing</c><00:13:20.250><c> down</c><00:13:20.459><c> the</c>

00:13:21.230 --> 00:13:21.240 align:start position:0%
definitely worth maybe bringing down the
 

00:13:21.240 --> 00:13:23.150 align:start position:0%
definitely worth maybe bringing down the
all<00:13:21.300><c> core</c><00:13:21.570><c> a</c><00:13:21.600><c> little</c><00:13:21.839><c> bit</c><00:13:21.959><c> one</c><00:13:22.140><c> tick</c><00:13:22.440><c> Jeff</c><00:13:23.010><c> so</c>

00:13:23.150 --> 00:13:23.160 align:start position:0%
all core a little bit one tick Jeff so
 

00:13:23.160 --> 00:13:26.150 align:start position:0%
all core a little bit one tick Jeff so
you<00:13:23.250><c> don't</c><00:13:23.430><c> throw</c><00:13:23.820><c> off</c><00:13:24.060><c> your</c><00:13:25.160><c> stability</c>

00:13:26.150 --> 00:13:26.160 align:start position:0%
you don't throw off your stability
 

00:13:26.160 --> 00:13:28.160 align:start position:0%
you don't throw off your stability
testing<00:13:26.580><c> by</c><00:13:27.060><c> having</c><00:13:27.420><c> an</c><00:13:27.570><c> encore</c><00:13:27.839><c> that's</c><00:13:28.050><c> too</c>

00:13:28.160 --> 00:13:28.170 align:start position:0%
testing by having an encore that's too
 

00:13:28.170 --> 00:13:29.600 align:start position:0%
testing by having an encore that's too
close<00:13:28.380><c> to</c><00:13:28.529><c> the</c><00:13:28.620><c> edge</c><00:13:28.709><c> bring</c><00:13:28.980><c> it</c><00:13:29.100><c> down</c><00:13:29.190><c> one</c><00:13:29.399><c> tick</c>

00:13:29.600 --> 00:13:29.610 align:start position:0%
close to the edge bring it down one tick
 

00:13:29.610 --> 00:13:32.180 align:start position:0%
close to the edge bring it down one tick
or<00:13:29.760><c> so</c><00:13:29.940><c> and</c><00:13:30.149><c> then</c><00:13:30.720><c> increase</c><00:13:31.440><c> the</c><00:13:31.620><c> cash</c><00:13:31.830><c> and</c>

00:13:32.180 --> 00:13:32.190 align:start position:0%
or so and then increase the cash and
 

00:13:32.190 --> 00:13:35.480 align:start position:0%
or so and then increase the cash and
drive<00:13:33.089><c> that</c><00:13:33.270><c> up</c><00:13:33.480><c> to</c><00:13:33.720><c> try</c><00:13:34.200><c> start</c><00:13:34.649><c> with</c><00:13:34.740><c> 46</c><00:13:35.220><c> go</c><00:13:35.430><c> to</c>

00:13:35.480 --> 00:13:35.490 align:start position:0%
drive that up to try start with 46 go to
 

00:13:35.490 --> 00:13:38.240 align:start position:0%
drive that up to try start with 46 go to
48<00:13:35.970><c> and</c><00:13:36.149><c> see</c><00:13:36.779><c> how</c><00:13:36.930><c> how</c><00:13:37.320><c> you</c><00:13:37.560><c> can</c><00:13:37.680><c> get</c><00:13:37.740><c> it</c><00:13:37.860><c> up</c><00:13:38.010><c> and</c>

00:13:38.240 --> 00:13:38.250 align:start position:0%
48 and see how how you can get it up and
 

00:13:38.250 --> 00:13:41.690 align:start position:0%
48 and see how how you can get it up and
at<00:13:38.970><c> that</c><00:13:39.330><c> point</c><00:13:39.740><c> if</c><00:13:40.740><c> it</c><00:13:41.010><c> remains</c><00:13:41.399><c> stable</c>

00:13:41.690 --> 00:13:41.700 align:start position:0%
at that point if it remains stable
 

00:13:41.700 --> 00:13:43.820 align:start position:0%
at that point if it remains stable
you've<00:13:42.540><c> basically</c><00:13:43.020><c> done</c><00:13:43.260><c> a</c><00:13:43.410><c> couple</c><00:13:43.649><c> of</c>

00:13:43.820 --> 00:13:43.830 align:start position:0%
you've basically done a couple of
 

00:13:43.830 --> 00:13:46.610 align:start position:0%
you've basically done a couple of
minutes<00:13:44.100><c> of</c><00:13:44.190><c> work</c><00:13:44.430><c> with</c><00:13:45.330><c> not</c><00:13:46.230><c> counting</c><00:13:46.560><c> the</c>

00:13:46.610 --> 00:13:46.620 align:start position:0%
minutes of work with not counting the
 

00:13:46.620 --> 00:13:48.889 align:start position:0%
minutes of work with not counting the
stability<00:13:47.070><c> test</c><00:13:47.310><c> with</c><00:13:48.060><c> the</c><00:13:48.390><c> end</c><00:13:48.540><c> result</c><00:13:48.839><c> being</c>

00:13:48.889 --> 00:13:48.899 align:start position:0%
stability test with the end result being
 

00:13:48.899 --> 00:13:52.430 align:start position:0%
stability test with the end result being
at<00:13:49.170><c> least</c><00:13:49.380><c> a</c><00:13:49.560><c> 3%</c><00:13:50.130><c> 2%</c><00:13:50.610><c> uplift</c><00:13:51.450><c> versus</c><00:13:52.410><c> a</c>

00:13:52.430 --> 00:13:52.440 align:start position:0%
at least a 3% 2% uplift versus a
 

00:13:52.440 --> 00:13:54.019 align:start position:0%
at least a 3% 2% uplift versus a
standard<00:13:52.770><c> all</c><00:13:53.040><c> core</c><00:13:53.250><c> OC</c><00:13:53.550><c> in</c><00:13:53.670><c> some</c><00:13:53.880><c> of</c><00:13:53.940><c> these</c>

00:13:54.019 --> 00:13:54.029 align:start position:0%
standard all core OC in some of these
 

00:13:54.029 --> 00:13:55.940 align:start position:0%
standard all core OC in some of these
games<00:13:54.270><c> and</c><00:13:54.540><c> sometimes</c><00:13:55.200><c> you're</c><00:13:55.680><c> getting</c>

00:13:55.940 --> 00:13:55.950 align:start position:0%
games and sometimes you're getting
 

00:13:55.950 --> 00:13:57.920 align:start position:0%
games and sometimes you're getting
closer<00:13:56.160><c> to</c><00:13:56.279><c> 10%</c><00:13:56.700><c> and</c><00:13:57.029><c> then</c><00:13:57.089><c> versus</c><00:13:57.450><c> full</c><00:13:57.630><c> stock</c>

00:13:57.920 --> 00:13:57.930 align:start position:0%
closer to 10% and then versus full stock
 

00:13:57.930 --> 00:14:00.560 align:start position:0%
closer to 10% and then versus full stock
we<00:13:58.709><c> saw</c><00:13:58.950><c> upwards</c><00:13:59.370><c> of</c><00:13:59.490><c> 17</c><00:13:59.910><c> percent</c><00:14:00.089><c> depending</c>

00:14:00.560 --> 00:14:00.570 align:start position:0%
we saw upwards of 17 percent depending
 

00:14:00.570 --> 00:14:02.540 align:start position:0%
we saw upwards of 17 percent depending
on<00:14:00.630><c> the</c><00:14:00.720><c> game</c><00:14:00.899><c> so</c><00:14:01.440><c> absolutely</c><00:14:01.980><c> worth</c><00:14:02.160><c> the</c><00:14:02.190><c> time</c>

00:14:02.540 --> 00:14:02.550 align:start position:0%
on the game so absolutely worth the time
 

00:14:02.550 --> 00:14:05.269 align:start position:0%
on the game so absolutely worth the time
to<00:14:02.610><c> do</c><00:14:02.970><c> it</c><00:14:03.149><c> and</c><00:14:03.560><c> good</c><00:14:04.560><c> learning</c><00:14:04.800><c> experience</c>

00:14:05.269 --> 00:14:05.279 align:start position:0%
to do it and good learning experience
 

00:14:05.279 --> 00:14:07.550 align:start position:0%
to do it and good learning experience
anyway<00:14:05.610><c> and</c><00:14:05.880><c> potentially</c><00:14:06.300><c> a</c><00:14:06.360><c> fun</c><00:14:06.510><c> project</c><00:14:06.779><c> for</c>

00:14:07.550 --> 00:14:07.560 align:start position:0%
anyway and potentially a fun project for
 

00:14:07.560 --> 00:14:09.260 align:start position:0%
anyway and potentially a fun project for
when<00:14:07.680><c> you</c><00:14:07.740><c> have</c><00:14:07.860><c> a</c><00:14:07.890><c> day</c><00:14:08.010><c> off</c><00:14:08.160><c> or</c><00:14:08.339><c> something</c><00:14:08.640><c> as</c>

00:14:09.260 --> 00:14:09.270 align:start position:0%
when you have a day off or something as
 

00:14:09.270 --> 00:14:11.690 align:start position:0%
when you have a day off or something as
for<00:14:09.510><c> the</c><00:14:09.600><c> memory</c><00:14:09.870><c> that</c><00:14:10.560><c> does</c><00:14:10.860><c> have</c><00:14:11.190><c> a</c><00:14:11.430><c> big</c>

00:14:11.690 --> 00:14:11.700 align:start position:0%
for the memory that does have a big
 

00:14:11.700 --> 00:14:13.250 align:start position:0%
for the memory that does have a big
uplift<00:14:12.089><c> and</c><00:14:12.209><c> that's</c><00:14:12.360><c> part</c><00:14:12.600><c> of</c><00:14:12.660><c> that</c><00:14:12.720><c> 17%</c>

00:14:13.250 --> 00:14:13.260 align:start position:0%
uplift and that's part of that 17%
 

00:14:13.260 --> 00:14:17.690 align:start position:0%
uplift and that's part of that 17%
number<00:14:13.860><c> I</c><00:14:13.890><c> just</c><00:14:13.980><c> provided</c><00:14:14.790><c> but</c><00:14:15.690><c> the</c><00:14:16.700><c> big</c>

00:14:17.690 --> 00:14:17.700 align:start position:0%
number I just provided but the big
 

00:14:17.700 --> 00:14:19.880 align:start position:0%
number I just provided but the big
caveat<00:14:18.029><c> there</c><00:14:18.510><c> is</c><00:14:18.750><c> that</c><00:14:18.990><c> with</c><00:14:19.230><c> memory</c><00:14:19.589><c> now</c>

00:14:19.880 --> 00:14:19.890 align:start position:0%
caveat there is that with memory now
 

00:14:19.890 --> 00:14:21.500 align:start position:0%
caveat there is that with memory now
you're<00:14:20.130><c> potentially</c><00:14:20.399><c> paying</c><00:14:20.910><c> more</c><00:14:21.480><c> money</c>

00:14:21.500 --> 00:14:21.510 align:start position:0%
you're potentially paying more money
 

00:14:21.510 --> 00:14:23.570 align:start position:0%
you're potentially paying more money
obviously<00:14:21.930><c> so</c><00:14:22.830><c> once</c><00:14:22.980><c> you</c><00:14:23.100><c> get</c><00:14:23.220><c> to</c><00:14:23.339><c> the</c><00:14:23.430><c> point</c>

00:14:23.570 --> 00:14:23.580 align:start position:0%
obviously so once you get to the point
 

00:14:23.580 --> 00:14:24.829 align:start position:0%
obviously so once you get to the point
where<00:14:23.730><c> you're</c><00:14:23.850><c> paying</c><00:14:24.029><c> 100</c><00:14:24.360><c> bucks</c><00:14:24.480><c> more</c><00:14:24.630><c> for</c>

00:14:24.829 --> 00:14:24.839 align:start position:0%
where you're paying 100 bucks more for
 

00:14:24.839 --> 00:14:27.260 align:start position:0%
where you're paying 100 bucks more for
memory<00:14:25.370><c> you're</c><00:14:26.370><c> kind</c><00:14:26.610><c> of</c><00:14:26.700><c> approaching</c><00:14:27.149><c> just</c>

00:14:27.260 --> 00:14:27.270 align:start position:0%
memory you're kind of approaching just
 

00:14:27.270 --> 00:14:29.870 align:start position:0%
memory you're kind of approaching just
the<00:14:27.480><c> better</c><00:14:27.870><c> class</c><00:14:28.170><c> of</c><00:14:28.350><c> CPU</c><00:14:28.770><c> like</c><00:14:28.980><c> a</c><00:14:29.010><c> 10</c><00:14:29.250><c> 700</c><00:14:29.760><c> K</c>

00:14:29.870 --> 00:14:29.880 align:start position:0%
the better class of CPU like a 10 700 K
 

00:14:29.880 --> 00:14:32.120 align:start position:0%
the better class of CPU like a 10 700 K
and<00:14:30.300><c> now</c><00:14:30.600><c> there's</c><00:14:30.810><c> a</c><00:14:30.870><c> question</c><00:14:31.050><c> as</c><00:14:31.410><c> to</c><00:14:31.709><c> how</c>

00:14:32.120 --> 00:14:32.130 align:start position:0%
and now there's a question as to how
 

00:14:32.130 --> 00:14:34.460 align:start position:0%
and now there's a question as to how
much<00:14:32.279><c> value</c><00:14:32.550><c> does</c><00:14:32.940><c> the</c><00:14:33.480><c> uplift</c><00:14:33.899><c> in</c><00:14:34.020><c> the</c><00:14:34.140><c> CPU</c>

00:14:34.460 --> 00:14:34.470 align:start position:0%
much value does the uplift in the CPU
 

00:14:34.470 --> 00:14:36.350 align:start position:0%
much value does the uplift in the CPU
provide<00:14:34.860><c> versus</c><00:14:35.310><c> the</c><00:14:35.370><c> uplift</c><00:14:35.640><c> in</c><00:14:35.730><c> memory</c><00:14:36.000><c> do</c>

00:14:36.350 --> 00:14:36.360 align:start position:0%
provide versus the uplift in memory do
 

00:14:36.360 --> 00:14:38.120 align:start position:0%
provide versus the uplift in memory do
you<00:14:36.450><c> need</c><00:14:36.570><c> the</c><00:14:36.690><c> better</c><00:14:36.899><c> memory</c><00:14:37.230><c> anyway</c><00:14:37.920><c> for</c>

00:14:38.120 --> 00:14:38.130 align:start position:0%
you need the better memory anyway for
 

00:14:38.130 --> 00:14:40.460 align:start position:0%
you need the better memory anyway for
some<00:14:38.250><c> other</c><00:14:38.399><c> reason</c><00:14:38.790><c> so</c><00:14:39.510><c> that's</c><00:14:39.690><c> a</c><00:14:39.959><c> little</c><00:14:40.320><c> bit</c>

00:14:40.460 --> 00:14:40.470 align:start position:0%
some other reason so that's a little bit
 

00:14:40.470 --> 00:14:41.930 align:start position:0%
some other reason so that's a little bit
harder<00:14:40.770><c> to</c><00:14:40.890><c> define</c><00:14:41.160><c> just</c><00:14:41.399><c> because</c><00:14:41.610><c> the</c><00:14:41.700><c> cost</c>

00:14:41.930 --> 00:14:41.940 align:start position:0%
harder to define just because the cost
 

00:14:41.940 --> 00:14:44.000 align:start position:0%
harder to define just because the cost
starts<00:14:42.390><c> changing</c><00:14:42.630><c> but</c><00:14:43.140><c> as</c><00:14:43.260><c> far</c><00:14:43.440><c> as</c><00:14:43.470><c> the</c><00:14:43.740><c> rain</c>

00:14:44.000 --> 00:14:44.010 align:start position:0%
starts changing but as far as the rain
 

00:14:44.010 --> 00:14:46.040 align:start position:0%
starts changing but as far as the rain
and<00:14:44.190><c> the</c><00:14:44.250><c> core</c><00:14:44.459><c> you</c><00:14:44.910><c> can</c><00:14:45.089><c> expect</c><00:14:45.540><c> a</c><00:14:45.720><c> combined</c>

00:14:46.040 --> 00:14:46.050 align:start position:0%
and the core you can expect a combined
 

00:14:46.050 --> 00:14:47.449 align:start position:0%
and the core you can expect a combined
total<00:14:46.230><c> somewhere</c><00:14:46.649><c> between</c><00:14:46.770><c> five</c><00:14:47.130><c> and</c><00:14:47.160><c> nine</c>

00:14:47.449 --> 00:14:47.459 align:start position:0%
total somewhere between five and nine
 

00:14:47.459 --> 00:14:49.940 align:start position:0%
total somewhere between five and nine
percent<00:14:47.760><c> uplift</c><00:14:48.380><c> typically</c><00:14:49.380><c> five</c><00:14:49.529><c> to</c><00:14:49.560><c> seven</c>

00:14:49.940 --> 00:14:49.950 align:start position:0%
percent uplift typically five to seven
 

00:14:49.950 --> 00:14:50.900 align:start position:0%
percent uplift typically five to seven
is<00:14:50.040><c> what</c><00:14:50.190><c> we</c><00:14:50.279><c> were</c><00:14:50.339><c> seeing</c><00:14:50.520><c> with</c><00:14:50.640><c> the</c><00:14:50.760><c> two</c>

00:14:50.900 --> 00:14:50.910 align:start position:0%
is what we were seeing with the two
 

00:14:50.910 --> 00:14:52.819 align:start position:0%
is what we were seeing with the two
together<00:14:51.060><c> in</c><00:14:51.570><c> a</c><00:14:51.839><c> gaming</c><00:14:52.079><c> application</c><00:14:52.740><c> and</c>

00:14:52.819 --> 00:14:52.829 align:start position:0%
together in a gaming application and
 

00:14:52.829 --> 00:14:54.079 align:start position:0%
together in a gaming application and
then<00:14:52.920><c> once</c><00:14:53.100><c> you</c><00:14:53.190><c> throw</c><00:14:53.370><c> memory</c><00:14:53.670><c> in</c><00:14:53.760><c> there</c><00:14:53.910><c> you</c>

00:14:54.079 --> 00:14:54.089 align:start position:0%
then once you throw memory in there you
 

00:14:54.089 --> 00:14:55.760 align:start position:0%
then once you throw memory in there you
start<00:14:54.240><c> going</c><00:14:54.480><c> past</c><00:14:54.690><c> the</c><00:14:54.839><c> 10%</c><00:14:55.110><c> barrier</c><00:14:55.560><c> but</c>

00:14:55.760 --> 00:14:55.770 align:start position:0%
start going past the 10% barrier but
 

00:14:55.770 --> 00:14:57.889 align:start position:0%
start going past the 10% barrier but
still<00:14:55.980><c> under</c><00:14:56.100><c> 20%</c><00:14:56.490><c> gains</c><00:14:56.880><c> so</c><00:14:57.540><c> that's</c><00:14:57.690><c> what</c><00:14:57.839><c> you</c>

00:14:57.889 --> 00:14:57.899 align:start position:0%
still under 20% gains so that's what you
 

00:14:57.899 --> 00:15:00.920 align:start position:0%
still under 20% gains so that's what you
can<00:14:58.020><c> expect</c><00:14:58.320><c> for</c><00:14:58.470><c> the</c><00:14:58.560><c> differences</c><00:14:58.980><c> and</c><00:14:59.930><c> with</c>

00:15:00.920 --> 00:15:00.930 align:start position:0%
can expect for the differences and with
 

00:15:00.930 --> 00:15:02.780 align:start position:0%
can expect for the differences and with
the<00:15:01.050><c> too</c><00:15:01.170><c> broken</c><00:15:01.440><c> apart</c><00:15:01.770><c> with</c><00:15:02.339><c> cache</c>

00:15:02.780 --> 00:15:02.790 align:start position:0%
the too broken apart with cache
 

00:15:02.790 --> 00:15:04.610 align:start position:0%
the too broken apart with cache
obviously<00:15:03.450><c> set-aside</c><00:15:04.230><c> is</c><00:15:04.350><c> its</c><00:15:04.500><c> own</c>

00:15:04.610 --> 00:15:04.620 align:start position:0%
obviously set-aside is its own
 

00:15:04.620 --> 00:15:05.960 align:start position:0%
obviously set-aside is its own
overclocked<00:15:05.520><c> test</c>

00:15:05.960 --> 00:15:05.970 align:start position:0%
overclocked test
 

00:15:05.970 --> 00:15:08.510 align:start position:0%
overclocked test
so<00:15:06.750><c> yeah</c><00:15:07.200><c> the</c><00:15:07.380><c> 10</c><00:15:07.589><c> 600</c><00:15:08.010><c> K</c><00:15:08.100><c> if</c><00:15:08.160><c> you</c><00:15:08.279><c> want</c><00:15:08.430><c> our</c>

00:15:08.510 --> 00:15:08.520 align:start position:0%
so yeah the 10 600 K if you want our
 

00:15:08.520 --> 00:15:10.490 align:start position:0%
so yeah the 10 600 K if you want our
opinions<00:15:08.910><c> on</c><00:15:09.060><c> it</c><00:15:09.240><c> if</c><00:15:09.540><c> it's</c><00:15:09.750><c> worth</c><00:15:09.930><c> it</c><00:15:10.200><c> how</c><00:15:10.410><c> it</c>

00:15:10.490 --> 00:15:10.500 align:start position:0%
opinions on it if it's worth it how it
 

00:15:10.500 --> 00:15:12.560 align:start position:0%
opinions on it if it's worth it how it
compares<00:15:10.800><c> versus</c><00:15:11.130><c> Rison</c><00:15:11.520><c> specifically</c><00:15:12.089><c> then</c>

00:15:12.560 --> 00:15:12.570 align:start position:0%
compares versus Rison specifically then
 

00:15:12.570 --> 00:15:14.750 align:start position:0%
compares versus Rison specifically then
go<00:15:12.779><c> watch</c><00:15:12.959><c> the</c><00:15:13.200><c> 10</c><00:15:13.350><c> 600</c><00:15:13.800><c> k</c><00:15:13.950><c> review</c><00:15:14.279><c> we're</c>

00:15:14.750 --> 00:15:14.760 align:start position:0%
go watch the 10 600 k review we're
 

00:15:14.760 --> 00:15:16.340 align:start position:0%
go watch the 10 600 k review we're
keeping<00:15:15.180><c> this</c><00:15:15.300><c> one</c><00:15:15.450><c> focused</c><00:15:15.839><c> on</c><00:15:15.930><c> just</c><00:15:16.140><c> these</c>

00:15:16.340 --> 00:15:16.350 align:start position:0%
keeping this one focused on just these
 

00:15:16.350 --> 00:15:17.990 align:start position:0%
keeping this one focused on just these
changes<00:15:16.829><c> because</c><00:15:16.980><c> we</c><00:15:17.130><c> just</c><00:15:17.339><c> uploaded</c><00:15:17.820><c> 30</c>

00:15:17.990 --> 00:15:18.000 align:start position:0%
changes because we just uploaded 30
 

00:15:18.000 --> 00:15:20.540 align:start position:0%
changes because we just uploaded 30
minutes<00:15:18.300><c> of</c><00:15:18.360><c> content</c><00:15:18.540><c> on</c><00:15:19.020><c> the</c><00:15:19.320><c> 10</c><00:15:19.470><c> 600</c><00:15:19.890><c> k</c><00:15:20.040><c> so</c>

00:15:20.540 --> 00:15:20.550 align:start position:0%
minutes of content on the 10 600 k so
 

00:15:20.550 --> 00:15:22.220 align:start position:0%
minutes of content on the 10 600 k so
that's<00:15:21.089><c> why</c><00:15:21.329><c> Rison</c><00:15:21.720><c> doesn't</c><00:15:21.959><c> get</c><00:15:22.050><c> any</c>

00:15:22.220 --> 00:15:22.230 align:start position:0%
that's why Rison doesn't get any
 

00:15:22.230 --> 00:15:23.510 align:start position:0%
that's why Rison doesn't get any
mentions<00:15:22.620><c> in</c><00:15:22.740><c> this</c><00:15:22.829><c> content</c><00:15:23.190><c> because</c><00:15:23.370><c> that's</c>

00:15:23.510 --> 00:15:23.520 align:start position:0%
mentions in this content because that's
 

00:15:23.520 --> 00:15:24.920 align:start position:0%
mentions in this content because that's
not<00:15:23.640><c> the</c><00:15:23.760><c> focus</c><00:15:23.910><c> of</c><00:15:24.149><c> it</c><00:15:24.300><c> but</c><00:15:24.630><c> you</c><00:15:24.690><c> can</c><00:15:24.810><c> watch</c>

00:15:24.920 --> 00:15:24.930 align:start position:0%
not the focus of it but you can watch
 

00:15:24.930 --> 00:15:26.090 align:start position:0%
not the focus of it but you can watch
the<00:15:25.079><c> review</c><00:15:25.320><c> if</c><00:15:25.410><c> you</c><00:15:25.470><c> want</c><00:15:25.529><c> to</c><00:15:25.680><c> know</c><00:15:25.740><c> how</c><00:15:25.890><c> rise</c>

00:15:26.090 --> 00:15:26.100 align:start position:0%
the review if you want to know how rise
 

00:15:26.100 --> 00:15:28.639 align:start position:0%
the review if you want to know how rise
and<00:15:26.339><c> compares</c><00:15:26.700><c> to</c><00:15:27.180><c> the</c><00:15:27.270><c> 10</c><00:15:27.420><c> 600</c><00:15:27.839><c> k</c><00:15:27.990><c> and</c><00:15:28.230><c> how</c><00:15:28.589><c> the</c>

00:15:28.639 --> 00:15:28.649 align:start position:0%
and compares to the 10 600 k and how the
 

00:15:28.649 --> 00:15:30.530 align:start position:0%
and compares to the 10 600 k and how the
price<00:15:28.890><c> and</c><00:15:29.130><c> the</c><00:15:29.190><c> value</c><00:15:29.220><c> compares</c><00:15:29.820><c> and</c><00:15:30.029><c> that'll</c>

00:15:30.530 --> 00:15:30.540 align:start position:0%
price and the value compares and that'll
 

00:15:30.540 --> 00:15:31.790 align:start position:0%
price and the value compares and that'll
be<00:15:30.600><c> it</c><00:15:30.690><c> for</c><00:15:30.810><c> this</c><00:15:30.870><c> one's</c><00:15:31.079><c> thanks</c><00:15:31.350><c> for</c><00:15:31.470><c> watching</c>

00:15:31.790 --> 00:15:31.800 align:start position:0%
be it for this one's thanks for watching
 

00:15:31.800 --> 00:15:34.069 align:start position:0%
be it for this one's thanks for watching
go<00:15:32.250><c> to</c><00:15:32.310><c> store</c><00:15:32.760><c> documents</c><00:15:32.850><c> access</c><00:15:33.270><c> net</c><00:15:33.779><c> helps</c>

00:15:34.069 --> 00:15:34.079 align:start position:0%
go to store documents access net helps
 

00:15:34.079 --> 00:15:34.990 align:start position:0%
go to store documents access net helps
out<00:15:34.170><c> directly</c><00:15:34.410><c> like</c>

00:15:34.990 --> 00:15:35.000 align:start position:0%
out directly like
 

00:15:35.000 --> 00:15:37.210 align:start position:0%
out directly like
according<00:15:35.360><c> one</c><00:15:35.840><c> of</c><00:15:35.960><c> our</c><00:15:36.110><c> new</c><00:15:36.320><c> mouse</c><00:15:36.530><c> mats</c><00:15:36.830><c> they</c>

00:15:37.210 --> 00:15:37.220 align:start position:0%
according one of our new mouse mats they
 

00:15:37.220 --> 00:15:39.580 align:start position:0%
according one of our new mouse mats they
sold<00:15:37.550><c> out</c><00:15:37.670><c> basically</c><00:15:38.390><c> instantly</c><00:15:39.020><c> within</c><00:15:39.230><c> 48</c>

00:15:39.580 --> 00:15:39.590 align:start position:0%
sold out basically instantly within 48
 

00:15:39.590 --> 00:15:41.560 align:start position:0%
sold out basically instantly within 48
hours<00:15:39.830><c> but</c><00:15:40.250><c> they're</c><00:15:40.400><c> on</c><00:15:40.490><c> backorder</c><00:15:40.850><c> or</c><00:15:41.120><c> you</c>

00:15:41.560 --> 00:15:41.570 align:start position:0%
hours but they're on backorder or you
 

00:15:41.570 --> 00:15:42.670 align:start position:0%
hours but they're on backorder or you
can<00:15:41.720><c> subscribe</c><00:15:41.900><c> from</c><00:15:42.230><c> where</c><00:15:42.350><c> to</c><00:15:42.440><c> catch</c><00:15:42.560><c> the</c>

00:15:42.670 --> 00:15:42.680 align:start position:0%
can subscribe from where to catch the
 

00:15:42.680 --> 00:15:44.260 align:start position:0%
can subscribe from where to catch the
next<00:15:42.890><c> video</c><00:15:43.100><c> and</c><00:15:43.370><c> we'll</c><00:15:43.760><c> see</c><00:15:43.790><c> you</c><00:15:44.000><c> all</c><00:15:44.120><c> next</c>

00:15:44.260 --> 00:15:44.270 align:start position:0%
next video and we'll see you all next
 

00:15:44.270 --> 00:15:49.510 align:start position:0%
next video and we'll see you all next
time

00:15:49.510 --> 00:15:49.520 align:start position:0%
 
 

00:15:49.520 --> 00:15:52.640 align:start position:0%
 
[Music]

